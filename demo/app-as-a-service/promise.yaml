apiVersion: platform.kratix.io/v1alpha1
kind: Promise
metadata:
  creationTimestamp: null
  name: app-as-a-service
  namespace: default
spec:
  clusterSelector:
    environment: platform
  workerClusterResources:
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      creationTimestamp: null
      name: knative-service
      namespace: default
    spec:
      clusterSelector:
        environment: dev
      workerClusterResources:
      - apiVersion: operator.knative.dev/v1beta1
        kind: KnativeServing
        metadata:
          name: knative
          namespace: knative-serving
        spec:
          config:
            domain:
              local.gd: ""
            network:
              ingress-class: kourier.ingress.networking.knative.dev
          ingress:
            kourier:
              enabled: true
      - apiVersion: v1
        kind: Secret
        metadata:
          labels:
            app.kubernetes.io/component: webhook
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: operator-webhook-certs
          namespace: default
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/component: operator-webhook
            app.kubernetes.io/name: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: operator-webhook
          namespace: default
        spec:
          selector:
            matchLabels:
              app: operator-webhook
              role: operator-webhook
          template:
            metadata:
              annotations:
                cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
                sidecar.istio.io/inject: "false"
              labels:
                app: operator-webhook
                app.kubernetes.io/component: operator-webhook
                app.kubernetes.io/name: knative-operator
                app.kubernetes.io/version: 1.8.2
                operator.knative.dev/release: v1.8.2
                role: operator-webhook
            spec:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app: webhook
                      topologyKey: kubernetes.io/hostname
                    weight: 100
              containers:
              - env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: SYSTEM_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CONFIG_LOGGING_NAME
                  value: config-logging
                - name: CONFIG_OBSERVABILITY_NAME
                  value: config-observability
                - name: WEBHOOK_NAME
                  value: operator-webhook
                - name: WEBHOOK_PORT
                  value: "8443"
                - name: METRICS_DOMAIN
                  value: knative.dev/operator
                image: gcr.io/knative-releases/knative.dev/operator/cmd/webhook@sha256:e98101185ac3066655f012b399e1d04f1c8e0e7ac599dc5ebcd91351d93676a5
                livenessProbe:
                  failureThreshold: 6
                  httpGet:
                    httpHeaders:
                    - name: k-kubelet-probe
                      value: webhook
                    port: 8443
                    scheme: HTTPS
                  initialDelaySeconds: 120
                  periodSeconds: 1
                name: operator-webhook
                ports:
                - containerPort: 9090
                  name: metrics
                - containerPort: 8008
                  name: profiling
                - containerPort: 8443
                  name: https-webhook
                readinessProbe:
                  httpGet:
                    httpHeaders:
                    - name: k-kubelet-probe
                      value: webhook
                    port: 8443
                    scheme: HTTPS
                  periodSeconds: 1
                resources:
                  limits:
                    cpu: 500m
                    memory: 500Mi
                  requests:
                    cpu: 100m
                    memory: 100Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - all
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
              serviceAccountName: operator-webhook
              terminationGracePeriodSeconds: 300
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/component: operator-webhook
            app.kubernetes.io/name: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
            role: operator-webhook
          name: operator-webhook
          namespace: default
        spec:
          ports:
          - name: http-metrics
            port: 9090
            targetPort: 9090
          - name: http-profiling
            port: 8008
            targetPort: 8008
          - name: https-webhook
            port: 443
            targetPort: 8443
          selector:
            role: operator-webhook
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knativeeventings.operator.knative.dev
        spec:
          conversion:
            strategy: Webhook
            webhook:
              clientConfig:
                service:
                  name: operator-webhook
                  namespace: default
                  path: /resource-conversion
              conversionReviewVersions:
              - v1beta1
          group: operator.knative.dev
          names:
            kind: KnativeEventing
            listKind: KnativeEventingList
            plural: knativeeventings
            singular: knativeeventing
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.version
              name: Version
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].reason
              name: Reason
              type: string
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: Schema for the knativeeventings API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Spec defines the desired state of KnativeEventing
                    properties:
                      additionalManifests:
                        description: A list of the additional eventing manifests,
                          which will be installed by the operator
                        items:
                          properties:
                            URL:
                              description: The link of the additional manifest URL
                              type: string
                          type: object
                        type: array
                      config:
                        additionalProperties:
                          additionalProperties:
                            type: string
                          type: object
                        description: A means to override the corresponding entries
                          in the upstream configmaps
                        type: object
                      defaultBrokerClass:
                        description: The default broker type to use for the brokers
                          Knative creates. If no value is provided, MTChannelBasedBroker
                          will be used.
                        type: string
                      deployments:
                        description: A mapping of deployment name to override
                        items:
                          properties:
                            affinity:
                              description: If specified, the pod's scheduling constraints.
                              properties:
                                nodeAffinity:
                                  description: Describes node affinity scheduling
                                    rules for the pod.
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the affinity expressions
                                        specified by this field, but it may choose
                                        a node that violates one or more of the expressions.
                                        The node that is most preferred is the one
                                        with the greatest sum of weights, i.e. for
                                        each node that meets all of the scheduling
                                        requirements (resource request, requiredDuringScheduling
                                        affinity expressions, etc.), compute a sum
                                        by iterating through the elements of this
                                        field and adding "weight" to the sum if the
                                        node matches the corresponding matchExpressions;
                                        the node(s) with the highest sum are the most
                                        preferred.
                                      items:
                                        description: An empty preferred scheduling
                                          term matches all objects with implicit weight
                                          0 (i.e. it's a no-op). A null preferred
                                          scheduling term matches no objects (i.e.
                                          is also a no-op).
                                        properties:
                                          preference:
                                            description: A node selector term, associated
                                              with the corresponding weight.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            description: Weight associated with matching
                                              the corresponding nodeSelectorTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - preference
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the affinity requirements specified
                                        by this field are not met at scheduling time,
                                        the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by
                                        this field cease to be met at some point during
                                        pod execution (e.g. due to an update), the
                                        system may or may not try to eventually evict
                                        the pod from its node.
                                      properties:
                                        nodeSelectorTerms:
                                          description: Required. A list of node selector
                                            terms. The terms are ORed.
                                          items:
                                            description: A null or empty node selector
                                              term matches no objects. The requirements
                                              of them are ANDed. The TopologySelectorTerm
                                              type implements a subset of the NodeSelectorTerm.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      required:
                                      - nodeSelectorTerms
                                      type: object
                                  type: object
                                podAffinity:
                                  description: Describes pod affinity scheduling rules
                                    (e.g. co-locate this pod in the same node, zone,
                                    etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the affinity expressions
                                        specified by this field, but it may choose
                                        a node that violates one or more of the expressions.
                                        The node that is most preferred is the one
                                        with the greatest sum of weights, i.e. for
                                        each node that meets all of the scheduling
                                        requirements (resource request, requiredDuringScheduling
                                        affinity expressions, etc.), compute a sum
                                        by iterating through the elements of this
                                        field and adding "weight" to the sum if the
                                        node has pods which matches the corresponding
                                        podAffinityTerm; the node(s) with the highest
                                        sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added
                                          per-node to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity
                                              term, associated with the corresponding
                                              weight.
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  which namespaces the labelSelector
                                                  applies to (matches against); null
                                                  or empty list means "this pod's
                                                  namespace"
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          weight:
                                            description: weight associated with matching
                                              the corresponding podAffinityTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - podAffinityTerm
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the affinity requirements specified
                                        by this field are not met at scheduling time,
                                        the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by
                                        this field cease to be met at some point during
                                        pod execution (e.g. due to a pod label update),
                                        the system may or may not try to eventually
                                        evict the pod from its node. When there are
                                        multiple elements, the lists of nodes corresponding
                                        to each podAffinityTerm are intersected, i.e.
                                        all terms must be satisfied.
                                      items:
                                        description: Defines a set of pods (namely
                                          those matching the labelSelector relative
                                          to the given namespace(s)) that this pod
                                          should be co-located (affinity) or not co-located
                                          (anti-affinity) with, where co-located is
                                          defined as running on a node whose value
                                          of the label with key <topologyKey> matches
                                          that of any node on which a pod of the set
                                          of pods is running
                                        properties:
                                          labelSelector:
                                            description: A label query over a set
                                              of resources, in this case pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          namespaces:
                                            description: namespaces specifies which
                                              namespaces the labelSelector applies
                                              to (matches against); null or empty
                                              list means "this pod's namespace"
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: This pod should be co-located
                                              (affinity) or not co-located (anti-affinity)
                                              with the pods matching the labelSelector
                                              in the specified namespaces, where co-located
                                              is defined as running on a node whose
                                              value of the label with key topologyKey
                                              matches that of any node on which any
                                              of the selected pods is running. Empty
                                              topologyKey is not allowed.
                                            type: string
                                        required:
                                        - topologyKey
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  description: Describes pod anti-affinity scheduling
                                    rules (e.g. avoid putting this pod in the same
                                    node, zone, etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the anti-affinity
                                        expressions specified by this field, but it
                                        may choose a node that violates one or more
                                        of the expressions. The node that is most
                                        preferred is the one with the greatest sum
                                        of weights, i.e. for each node that meets
                                        all of the scheduling requirements (resource
                                        request, requiredDuringScheduling anti-affinity
                                        expressions, etc.), compute a sum by iterating
                                        through the elements of this field and adding
                                        "weight" to the sum if the node has pods which
                                        matches the corresponding podAffinityTerm;
                                        the node(s) with the highest sum are the most
                                        preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added
                                          per-node to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity
                                              term, associated with the corresponding
                                              weight.
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  which namespaces the labelSelector
                                                  applies to (matches against); null
                                                  or empty list means "this pod's
                                                  namespace"
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          weight:
                                            description: weight associated with matching
                                              the corresponding podAffinityTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - podAffinityTerm
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the anti-affinity requirements
                                        specified by this field are not met at scheduling
                                        time, the pod will not be scheduled onto the
                                        node. If the anti-affinity requirements specified
                                        by this field cease to be met at some point
                                        during pod execution (e.g. due to a pod label
                                        update), the system may or may not try to
                                        eventually evict the pod from its node. When
                                        there are multiple elements, the lists of
                                        nodes corresponding to each podAffinityTerm
                                        are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: Defines a set of pods (namely
                                          those matching the labelSelector relative
                                          to the given namespace(s)) that this pod
                                          should be co-located (affinity) or not co-located
                                          (anti-affinity) with, where co-located is
                                          defined as running on a node whose value
                                          of the label with key <topologyKey> matches
                                          that of any node on which a pod of the set
                                          of pods is running
                                        properties:
                                          labelSelector:
                                            description: A label query over a set
                                              of resources, in this case pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          namespaces:
                                            description: namespaces specifies which
                                              namespaces the labelSelector applies
                                              to (matches against); null or empty
                                              list means "this pod's namespace"
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: This pod should be co-located
                                              (affinity) or not co-located (anti-affinity)
                                              with the pods matching the labelSelector
                                              in the specified namespaces, where co-located
                                              is defined as running on a node whose
                                              value of the label with key topologyKey
                                              matches that of any node on which any
                                              of the selected pods is running. Empty
                                              topologyKey is not allowed.
                                            type: string
                                        required:
                                        - topologyKey
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations overrides labels for the deployment
                                and its template.
                              type: object
                            env:
                              description: Env overrides env vars for the containers.
                              items:
                                properties:
                                  container:
                                    description: The container name
                                    type: string
                                  envVars:
                                    description: The desired EnvVarRequirements
                                    items:
                                      description: EnvVar represents an environment
                                        variable present in a Container.
                                      properties:
                                        name:
                                          description: Name of the environment variable.
                                            Must be a C_IDENTIFIER.
                                          type: string
                                        value:
                                          description: 'Variable references $(VAR_NAME)
                                            are expanded using the previously defined
                                            environment variables in the container
                                            and any service environment variables.
                                            If a variable cannot be resolved, the
                                            reference in the input string will be
                                            unchanged. Double $$ are reduced to a
                                            single $, which allows for escaping the
                                            $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                            will produce the string literal "$(VAR_NAME)".
                                            Escaped references will never be expanded,
                                            regardless of whether the variable exists
                                            or not. Defaults to "".'
                                          type: string
                                        valueFrom:
                                          description: Source for the environment
                                            variable's value. Cannot be used if value
                                            is not empty.
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                            fieldRef:
                                              description: 'Selects a field of the
                                                pod: supports metadata.name, metadata.namespace,
                                                `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                spec.nodeName, spec.serviceAccountName,
                                                status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                limits.ephemeral-storage, requests.cpu,
                                                requests.memory and requests.ephemeral-storage)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                            secretKeyRef:
                                              description: Selects a key of a secret
                                                in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret
                                                    to select from.  Must be a valid
                                                    secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    type: array
                                required:
                                - container
                                type: object
                              type: array
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels overrides labels for the deployment
                                and its template.
                              type: object
                            livenessProbes:
                              description: LivenessProbes overrides liveness probes
                                for the containers.
                              items:
                                description: ProbesRequirementsOverride enables the
                                  user to override any container's env vars.
                                properties:
                                  container:
                                    description: The container name
                                    type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                required:
                                - container
                                type: object
                              type: array
                            name:
                              description: The name of the deployment
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: NodeSelector overrides nodeSelector for
                                the deployment.
                              type: object
                            readinessProbes:
                              description: ReadinessProbes overrides readiness probes
                                for the containers.
                              items:
                                description: ProbesRequirementsOverride enables the
                                  user to override any container's env vars.
                                properties:
                                  container:
                                    description: The container name
                                    type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                required:
                                - container
                                type: object
                              type: array
                            replicas:
                              description: The number of replicas that HA parts of
                                the control plane will be scaled to
                              minimum: 0
                              type: integer
                            resources:
                              description: If specified, the container's resources.
                              items:
                                description: The pod this Resource is used to specify
                                  the requests and limits for a certain container
                                  based on the name.
                                properties:
                                  container:
                                    description: The name of the container
                                    type: string
                                  limits:
                                    properties:
                                      cpu:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                      memory:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                    type: object
                                  requests:
                                    properties:
                                      cpu:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                      memory:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                    type: object
                                type: object
                              type: array
                            tolerations:
                              description: If specified, the pod's tolerations.
                              items:
                                description: The pod this Toleration is attached to
                                  tolerates any taint that matches the triple <key,value,effect>
                                  using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: Effect indicates the taint effect
                                      to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule,
                                      PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: Key is the taint key that the toleration
                                      applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists;
                                      this combination means to match all values and
                                      all keys.
                                    type: string
                                  operator:
                                    description: Operator represents a key's relationship
                                      to the value. Valid operators are Exists and
                                      Equal. Defaults to Equal. Exists is equivalent
                                      to wildcard for value, so that a pod can tolerate
                                      all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: TolerationSeconds represents the
                                      period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is
                                      ignored) tolerates the taint. By default, it
                                      is not set, which means tolerate the taint forever
                                      (do not evict). Zero and negative values will
                                      be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: Value is the taint value the toleration
                                      matches to. If the operator is Exists, the value
                                      should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      high-availability:
                        description: Allows specification of HA control plane
                        properties:
                          replicas:
                            description: The number of replicas that HA parts of the
                              control plane will be scaled to
                            minimum: 0
                            type: integer
                        type: object
                      manifests:
                        description: A list of eventing manifests, which will be installed
                          by the operator
                        items:
                          properties:
                            URL:
                              description: The link of the manifest URL
                              type: string
                          type: object
                        type: array
                      podDisruptionBudgets:
                        description: A mapping of podDisruptionBudget name to override
                        items:
                          properties:
                            minAvailable:
                              anyOf:
                              - type: integer
                              - type: string
                              description: An eviction is allowed if at least "minAvailable"
                                pods selected by "selector" will still be available
                                after the eviction, i.e. even in the absence of the
                                evicted pod.  So for example you can prevent all voluntary
                                evictions by specifying "100%".
                              x-kubernetes-int-or-string: true
                            name:
                              description: The name of the podDisruptionBudget
                              type: string
                          type: object
                        type: array
                      registry:
                        description: A means to override the corresponding deployment
                          images in the upstream. This affects both apps/v1.Deployment
                          and caching.internal.knative.dev/v1alpha1.Image.
                        properties:
                          default:
                            description: The default image reference template to use
                              for all knative images. Takes the form of example-registry.io/custom/path/${NAME}:custom-tag
                            type: string
                          imagePullSecrets:
                            description: A list of secrets to be used when pulling
                              the knative images. The secret must be created in the
                              same namespace as the knative-eventing deployments,
                              and not the namespace of this resource.
                            items:
                              properties:
                                name:
                                  description: The name of the secret.
                                  type: string
                              type: object
                            type: array
                          override:
                            additionalProperties:
                              type: string
                            description: A map of a container name or image name to
                              the full image location of the individual knative image.
                            type: object
                        type: object
                      services:
                        description: A mapping of service name to override
                        items:
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations overrides labels for the service
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels overrides labels for the service
                              type: object
                            name:
                              description: The name of the service
                              type: string
                            selector:
                              additionalProperties:
                                type: string
                              description: Selector overrides selector for the service
                              type: object
                          type: object
                        type: array
                      sinkBindingSelectionMode:
                        description: Specifies the selection mode for the sinkbinding
                          webhook. If the value is `inclusion`, only namespaces/objects
                          labelled as `bindings.knative.dev/include:true` will be
                          considered. If `exclusion` is selected, only `bindings.knative.dev/exclude:true`
                          label is checked and these will NOT be considered. The default
                          is `exclusion`.
                        type: string
                      source:
                        description: The source configuration for Knative Eventing
                        properties:
                          ceph:
                            description: Ceph settings
                            properties:
                              enabled:
                                type: boolean
                            type: object
                          github:
                            description: GitHub settings
                            properties:
                              enabled:
                                type: boolean
                            type: object
                          gitlab:
                            description: GitLab settings
                            properties:
                              enabled:
                                type: boolean
                            type: object
                          kafka:
                            description: Apache Kafka settings
                            properties:
                              enabled:
                                type: boolean
                            type: object
                          rabbitmq:
                            description: RabbitMQ settings
                            properties:
                              enabled:
                                type: boolean
                            type: object
                          redis:
                            description: Redis settings
                            properties:
                              enabled:
                                type: boolean
                            type: object
                        type: object
                      version:
                        description: The version of Knative Eventing to be installed
                        type: string
                      workloads:
                        description: A mapping of deployment or statefulset name to
                          override
                        items:
                          properties:
                            affinity:
                              description: If specified, the pod's scheduling constraints.
                              properties:
                                nodeAffinity:
                                  description: Describes node affinity scheduling
                                    rules for the pod.
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the affinity expressions
                                        specified by this field, but it may choose
                                        a node that violates one or more of the expressions.
                                        The node that is most preferred is the one
                                        with the greatest sum of weights, i.e. for
                                        each node that meets all of the scheduling
                                        requirements (resource request, requiredDuringScheduling
                                        affinity expressions, etc.), compute a sum
                                        by iterating through the elements of this
                                        field and adding "weight" to the sum if the
                                        node matches the corresponding matchExpressions;
                                        the node(s) with the highest sum are the most
                                        preferred.
                                      items:
                                        description: An empty preferred scheduling
                                          term matches all objects with implicit weight
                                          0 (i.e. it's a no-op). A null preferred
                                          scheduling term matches no objects (i.e.
                                          is also a no-op).
                                        properties:
                                          preference:
                                            description: A node selector term, associated
                                              with the corresponding weight.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            description: Weight associated with matching
                                              the corresponding nodeSelectorTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - preference
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the affinity requirements specified
                                        by this field are not met at scheduling time,
                                        the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by
                                        this field cease to be met at some point during
                                        pod execution (e.g. due to an update), the
                                        system may or may not try to eventually evict
                                        the pod from its node.
                                      properties:
                                        nodeSelectorTerms:
                                          description: Required. A list of node selector
                                            terms. The terms are ORed.
                                          items:
                                            description: A null or empty node selector
                                              term matches no objects. The requirements
                                              of them are ANDed. The TopologySelectorTerm
                                              type implements a subset of the NodeSelectorTerm.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      required:
                                      - nodeSelectorTerms
                                      type: object
                                  type: object
                                podAffinity:
                                  description: Describes pod affinity scheduling rules
                                    (e.g. co-locate this pod in the same node, zone,
                                    etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the affinity expressions
                                        specified by this field, but it may choose
                                        a node that violates one or more of the expressions.
                                        The node that is most preferred is the one
                                        with the greatest sum of weights, i.e. for
                                        each node that meets all of the scheduling
                                        requirements (resource request, requiredDuringScheduling
                                        affinity expressions, etc.), compute a sum
                                        by iterating through the elements of this
                                        field and adding "weight" to the sum if the
                                        node has pods which matches the corresponding
                                        podAffinityTerm; the node(s) with the highest
                                        sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added
                                          per-node to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity
                                              term, associated with the corresponding
                                              weight.
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  which namespaces the labelSelector
                                                  applies to (matches against); null
                                                  or empty list means "this pod's
                                                  namespace"
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          weight:
                                            description: weight associated with matching
                                              the corresponding podAffinityTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - podAffinityTerm
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the affinity requirements specified
                                        by this field are not met at scheduling time,
                                        the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by
                                        this field cease to be met at some point during
                                        pod execution (e.g. due to a pod label update),
                                        the system may or may not try to eventually
                                        evict the pod from its node. When there are
                                        multiple elements, the lists of nodes corresponding
                                        to each podAffinityTerm are intersected, i.e.
                                        all terms must be satisfied.
                                      items:
                                        description: Defines a set of pods (namely
                                          those matching the labelSelector relative
                                          to the given namespace(s)) that this pod
                                          should be co-located (affinity) or not co-located
                                          (anti-affinity) with, where co-located is
                                          defined as running on a node whose value
                                          of the label with key <topologyKey> matches
                                          that of any node on which a pod of the set
                                          of pods is running
                                        properties:
                                          labelSelector:
                                            description: A label query over a set
                                              of resources, in this case pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          namespaces:
                                            description: namespaces specifies which
                                              namespaces the labelSelector applies
                                              to (matches against); null or empty
                                              list means "this pod's namespace"
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: This pod should be co-located
                                              (affinity) or not co-located (anti-affinity)
                                              with the pods matching the labelSelector
                                              in the specified namespaces, where co-located
                                              is defined as running on a node whose
                                              value of the label with key topologyKey
                                              matches that of any node on which any
                                              of the selected pods is running. Empty
                                              topologyKey is not allowed.
                                            type: string
                                        required:
                                        - topologyKey
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  description: Describes pod anti-affinity scheduling
                                    rules (e.g. avoid putting this pod in the same
                                    node, zone, etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the anti-affinity
                                        expressions specified by this field, but it
                                        may choose a node that violates one or more
                                        of the expressions. The node that is most
                                        preferred is the one with the greatest sum
                                        of weights, i.e. for each node that meets
                                        all of the scheduling requirements (resource
                                        request, requiredDuringScheduling anti-affinity
                                        expressions, etc.), compute a sum by iterating
                                        through the elements of this field and adding
                                        "weight" to the sum if the node has pods which
                                        matches the corresponding podAffinityTerm;
                                        the node(s) with the highest sum are the most
                                        preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added
                                          per-node to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity
                                              term, associated with the corresponding
                                              weight.
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  which namespaces the labelSelector
                                                  applies to (matches against); null
                                                  or empty list means "this pod's
                                                  namespace"
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          weight:
                                            description: weight associated with matching
                                              the corresponding podAffinityTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - podAffinityTerm
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the anti-affinity requirements
                                        specified by this field are not met at scheduling
                                        time, the pod will not be scheduled onto the
                                        node. If the anti-affinity requirements specified
                                        by this field cease to be met at some point
                                        during pod execution (e.g. due to a pod label
                                        update), the system may or may not try to
                                        eventually evict the pod from its node. When
                                        there are multiple elements, the lists of
                                        nodes corresponding to each podAffinityTerm
                                        are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: Defines a set of pods (namely
                                          those matching the labelSelector relative
                                          to the given namespace(s)) that this pod
                                          should be co-located (affinity) or not co-located
                                          (anti-affinity) with, where co-located is
                                          defined as running on a node whose value
                                          of the label with key <topologyKey> matches
                                          that of any node on which a pod of the set
                                          of pods is running
                                        properties:
                                          labelSelector:
                                            description: A label query over a set
                                              of resources, in this case pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          namespaces:
                                            description: namespaces specifies which
                                              namespaces the labelSelector applies
                                              to (matches against); null or empty
                                              list means "this pod's namespace"
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: This pod should be co-located
                                              (affinity) or not co-located (anti-affinity)
                                              with the pods matching the labelSelector
                                              in the specified namespaces, where co-located
                                              is defined as running on a node whose
                                              value of the label with key topologyKey
                                              matches that of any node on which any
                                              of the selected pods is running. Empty
                                              topologyKey is not allowed.
                                            type: string
                                        required:
                                        - topologyKey
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations overrides labels for the deployment
                                and its template.
                              type: object
                            env:
                              description: Env overrides env vars for the containers.
                              items:
                                properties:
                                  container:
                                    description: The container name
                                    type: string
                                  envVars:
                                    description: The desired EnvVarRequirements
                                    items:
                                      description: EnvVar represents an environment
                                        variable present in a Container.
                                      properties:
                                        name:
                                          description: Name of the environment variable.
                                            Must be a C_IDENTIFIER.
                                          type: string
                                        value:
                                          description: 'Variable references $(VAR_NAME)
                                            are expanded using the previously defined
                                            environment variables in the container
                                            and any service environment variables.
                                            If a variable cannot be resolved, the
                                            reference in the input string will be
                                            unchanged. Double $$ are reduced to a
                                            single $, which allows for escaping the
                                            $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                            will produce the string literal "$(VAR_NAME)".
                                            Escaped references will never be expanded,
                                            regardless of whether the variable exists
                                            or not. Defaults to "".'
                                          type: string
                                        valueFrom:
                                          description: Source for the environment
                                            variable's value. Cannot be used if value
                                            is not empty.
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                            fieldRef:
                                              description: 'Selects a field of the
                                                pod: supports metadata.name, metadata.namespace,
                                                `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                spec.nodeName, spec.serviceAccountName,
                                                status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                limits.ephemeral-storage, requests.cpu,
                                                requests.memory and requests.ephemeral-storage)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                            secretKeyRef:
                                              description: Selects a key of a secret
                                                in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret
                                                    to select from.  Must be a valid
                                                    secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    type: array
                                required:
                                - container
                                type: object
                              type: array
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels overrides labels for the deployment
                                and its template.
                              type: object
                            livenessProbes:
                              description: LivenessProbes overrides liveness probes
                                for the containers.
                              items:
                                description: ProbesRequirementsOverride enables the
                                  user to override any container's env vars.
                                properties:
                                  container:
                                    description: The container name
                                    type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                required:
                                - container
                                type: object
                              type: array
                            name:
                              description: The name of the deployment
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: NodeSelector overrides nodeSelector for
                                the deployment.
                              type: object
                            readinessProbes:
                              description: ReadinessProbes overrides readiness probes
                                for the containers.
                              items:
                                description: ProbesRequirementsOverride enables the
                                  user to override any container's env vars.
                                properties:
                                  container:
                                    description: The container name
                                    type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                required:
                                - container
                                type: object
                              type: array
                            replicas:
                              description: The number of replicas that HA parts of
                                the control plane will be scaled to
                              minimum: 0
                              type: integer
                            resources:
                              description: If specified, the container's resources.
                              items:
                                description: The pod this Resource is used to specify
                                  the requests and limits for a certain container
                                  based on the name.
                                properties:
                                  container:
                                    description: The name of the container
                                    type: string
                                  limits:
                                    properties:
                                      cpu:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                      memory:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                    type: object
                                  requests:
                                    properties:
                                      cpu:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                      memory:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                    type: object
                                type: object
                              type: array
                            tolerations:
                              description: If specified, the pod's tolerations.
                              items:
                                description: The pod this Toleration is attached to
                                  tolerates any taint that matches the triple <key,value,effect>
                                  using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: Effect indicates the taint effect
                                      to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule,
                                      PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: Key is the taint key that the toleration
                                      applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists;
                                      this combination means to match all values and
                                      all keys.
                                    type: string
                                  operator:
                                    description: Operator represents a key's relationship
                                      to the value. Valid operators are Exists and
                                      Equal. Defaults to Equal. Exists is equivalent
                                      to wildcard for value, so that a pod can tolerate
                                      all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: TolerationSeconds represents the
                                      period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is
                                      ignored) tolerates the taint. By default, it
                                      is not set, which means tolerate the taint forever
                                      (do not evict). Zero and negative values will
                                      be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: Value is the taint value the toleration
                                      matches to. If the operator is Exists, the value
                                      should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                    type: object
                  status:
                    properties:
                      conditions:
                        description: The latest available observations of a resource's
                          current state.
                        items:
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - type
                          - status
                          type: object
                        type: array
                      manifests:
                        description: The list of eventing manifests, which have been
                          installed by the operator
                        items:
                          type: string
                        type: array
                      observedGeneration:
                        description: The generation last processed by the controller
                        type: integer
                      version:
                        description: The version of the installed release
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knativeservings.operator.knative.dev
        spec:
          conversion:
            strategy: Webhook
            webhook:
              clientConfig:
                service:
                  name: operator-webhook
                  namespace: default
                  path: /resource-conversion
              conversionReviewVersions:
              - v1beta1
          group: operator.knative.dev
          names:
            kind: KnativeServing
            listKind: KnativeServingList
            plural: knativeservings
            singular: knativeserving
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.version
              name: Version
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].reason
              name: Reason
              type: string
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: Schema for the knativeservings API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Spec defines the desired state of KnativeServing
                    properties:
                      additionalManifests:
                        description: A list of the additional serving manifests, which
                          will be installed by the operator
                        items:
                          properties:
                            URL:
                              description: The link of the additional manifest URL
                              type: string
                          type: object
                        type: array
                      config:
                        additionalProperties:
                          additionalProperties:
                            type: string
                          type: object
                        description: A means to override the corresponding entries
                          in the upstream configmaps
                        type: object
                      controller-custom-certs:
                        description: Enabling the controller to trust registries with
                          self-signed certificates
                        properties:
                          name:
                            description: The name of the ConfigMap or Secret
                            type: string
                          type:
                            description: One of ConfigMap or Secret
                            enum:
                            - ConfigMap
                            - Secret
                            - ""
                            type: string
                        type: object
                      deployments:
                        description: A mapping of deployment name to override
                        items:
                          properties:
                            affinity:
                              description: If specified, the pod's scheduling constraints.
                              properties:
                                nodeAffinity:
                                  description: Describes node affinity scheduling
                                    rules for the pod.
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the affinity expressions
                                        specified by this field, but it may choose
                                        a node that violates one or more of the expressions.
                                        The node that is most preferred is the one
                                        with the greatest sum of weights, i.e. for
                                        each node that meets all of the scheduling
                                        requirements (resource request, requiredDuringScheduling
                                        affinity expressions, etc.), compute a sum
                                        by iterating through the elements of this
                                        field and adding "weight" to the sum if the
                                        node matches the corresponding matchExpressions;
                                        the node(s) with the highest sum are the most
                                        preferred.
                                      items:
                                        description: An empty preferred scheduling
                                          term matches all objects with implicit weight
                                          0 (i.e. it's a no-op). A null preferred
                                          scheduling term matches no objects (i.e.
                                          is also a no-op).
                                        properties:
                                          preference:
                                            description: A node selector term, associated
                                              with the corresponding weight.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            description: Weight associated with matching
                                              the corresponding nodeSelectorTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - preference
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the affinity requirements specified
                                        by this field are not met at scheduling time,
                                        the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by
                                        this field cease to be met at some point during
                                        pod execution (e.g. due to an update), the
                                        system may or may not try to eventually evict
                                        the pod from its node.
                                      properties:
                                        nodeSelectorTerms:
                                          description: Required. A list of node selector
                                            terms. The terms are ORed.
                                          items:
                                            description: A null or empty node selector
                                              term matches no objects. The requirements
                                              of them are ANDed. The TopologySelectorTerm
                                              type implements a subset of the NodeSelectorTerm.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      required:
                                      - nodeSelectorTerms
                                      type: object
                                  type: object
                                podAffinity:
                                  description: Describes pod affinity scheduling rules
                                    (e.g. co-locate this pod in the same node, zone,
                                    etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the affinity expressions
                                        specified by this field, but it may choose
                                        a node that violates one or more of the expressions.
                                        The node that is most preferred is the one
                                        with the greatest sum of weights, i.e. for
                                        each node that meets all of the scheduling
                                        requirements (resource request, requiredDuringScheduling
                                        affinity expressions, etc.), compute a sum
                                        by iterating through the elements of this
                                        field and adding "weight" to the sum if the
                                        node has pods which matches the corresponding
                                        podAffinityTerm; the node(s) with the highest
                                        sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added
                                          per-node to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity
                                              term, associated with the corresponding
                                              weight.
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  which namespaces the labelSelector
                                                  applies to (matches against); null
                                                  or empty list means "this pod's
                                                  namespace"
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          weight:
                                            description: weight associated with matching
                                              the corresponding podAffinityTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - podAffinityTerm
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the affinity requirements specified
                                        by this field are not met at scheduling time,
                                        the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by
                                        this field cease to be met at some point during
                                        pod execution (e.g. due to a pod label update),
                                        the system may or may not try to eventually
                                        evict the pod from its node. When there are
                                        multiple elements, the lists of nodes corresponding
                                        to each podAffinityTerm are intersected, i.e.
                                        all terms must be satisfied.
                                      items:
                                        description: Defines a set of pods (namely
                                          those matching the labelSelector relative
                                          to the given namespace(s)) that this pod
                                          should be co-located (affinity) or not co-located
                                          (anti-affinity) with, where co-located is
                                          defined as running on a node whose value
                                          of the label with key <topologyKey> matches
                                          that of any node on which a pod of the set
                                          of pods is running
                                        properties:
                                          labelSelector:
                                            description: A label query over a set
                                              of resources, in this case pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          namespaces:
                                            description: namespaces specifies which
                                              namespaces the labelSelector applies
                                              to (matches against); null or empty
                                              list means "this pod's namespace"
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: This pod should be co-located
                                              (affinity) or not co-located (anti-affinity)
                                              with the pods matching the labelSelector
                                              in the specified namespaces, where co-located
                                              is defined as running on a node whose
                                              value of the label with key topologyKey
                                              matches that of any node on which any
                                              of the selected pods is running. Empty
                                              topologyKey is not allowed.
                                            type: string
                                        required:
                                        - topologyKey
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  description: Describes pod anti-affinity scheduling
                                    rules (e.g. avoid putting this pod in the same
                                    node, zone, etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the anti-affinity
                                        expressions specified by this field, but it
                                        may choose a node that violates one or more
                                        of the expressions. The node that is most
                                        preferred is the one with the greatest sum
                                        of weights, i.e. for each node that meets
                                        all of the scheduling requirements (resource
                                        request, requiredDuringScheduling anti-affinity
                                        expressions, etc.), compute a sum by iterating
                                        through the elements of this field and adding
                                        "weight" to the sum if the node has pods which
                                        matches the corresponding podAffinityTerm;
                                        the node(s) with the highest sum are the most
                                        preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added
                                          per-node to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity
                                              term, associated with the corresponding
                                              weight.
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  which namespaces the labelSelector
                                                  applies to (matches against); null
                                                  or empty list means "this pod's
                                                  namespace"
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          weight:
                                            description: weight associated with matching
                                              the corresponding podAffinityTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - podAffinityTerm
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the anti-affinity requirements
                                        specified by this field are not met at scheduling
                                        time, the pod will not be scheduled onto the
                                        node. If the anti-affinity requirements specified
                                        by this field cease to be met at some point
                                        during pod execution (e.g. due to a pod label
                                        update), the system may or may not try to
                                        eventually evict the pod from its node. When
                                        there are multiple elements, the lists of
                                        nodes corresponding to each podAffinityTerm
                                        are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: Defines a set of pods (namely
                                          those matching the labelSelector relative
                                          to the given namespace(s)) that this pod
                                          should be co-located (affinity) or not co-located
                                          (anti-affinity) with, where co-located is
                                          defined as running on a node whose value
                                          of the label with key <topologyKey> matches
                                          that of any node on which a pod of the set
                                          of pods is running
                                        properties:
                                          labelSelector:
                                            description: A label query over a set
                                              of resources, in this case pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          namespaces:
                                            description: namespaces specifies which
                                              namespaces the labelSelector applies
                                              to (matches against); null or empty
                                              list means "this pod's namespace"
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: This pod should be co-located
                                              (affinity) or not co-located (anti-affinity)
                                              with the pods matching the labelSelector
                                              in the specified namespaces, where co-located
                                              is defined as running on a node whose
                                              value of the label with key topologyKey
                                              matches that of any node on which any
                                              of the selected pods is running. Empty
                                              topologyKey is not allowed.
                                            type: string
                                        required:
                                        - topologyKey
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations overrides labels for the deployment
                                and its template.
                              type: object
                            env:
                              description: Env overrides env vars for the containers.
                              items:
                                properties:
                                  container:
                                    description: The container name
                                    type: string
                                  envVars:
                                    description: The desired EnvVarRequirements
                                    items:
                                      description: EnvVar represents an environment
                                        variable present in a Container.
                                      properties:
                                        name:
                                          description: Name of the environment variable.
                                            Must be a C_IDENTIFIER.
                                          type: string
                                        value:
                                          description: 'Variable references $(VAR_NAME)
                                            are expanded using the previously defined
                                            environment variables in the container
                                            and any service environment variables.
                                            If a variable cannot be resolved, the
                                            reference in the input string will be
                                            unchanged. Double $$ are reduced to a
                                            single $, which allows for escaping the
                                            $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                            will produce the string literal "$(VAR_NAME)".
                                            Escaped references will never be expanded,
                                            regardless of whether the variable exists
                                            or not. Defaults to "".'
                                          type: string
                                        valueFrom:
                                          description: Source for the environment
                                            variable's value. Cannot be used if value
                                            is not empty.
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                            fieldRef:
                                              description: 'Selects a field of the
                                                pod: supports metadata.name, metadata.namespace,
                                                `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                spec.nodeName, spec.serviceAccountName,
                                                status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                limits.ephemeral-storage, requests.cpu,
                                                requests.memory and requests.ephemeral-storage)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                            secretKeyRef:
                                              description: Selects a key of a secret
                                                in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret
                                                    to select from.  Must be a valid
                                                    secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    type: array
                                required:
                                - container
                                type: object
                              type: array
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels overrides labels for the deployment
                                and its template.
                              type: object
                            livenessProbes:
                              description: LivenessProbes overrides liveness probes
                                for the containers.
                              items:
                                description: ProbesRequirementsOverride enables the
                                  user to override any container's env vars.
                                properties:
                                  container:
                                    description: The container name
                                    type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                required:
                                - container
                                type: object
                              type: array
                            name:
                              description: The name of the deployment
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: NodeSelector overrides nodeSelector for
                                the deployment.
                              type: object
                            readinessProbes:
                              description: ReadinessProbes overrides readiness probes
                                for the containers.
                              items:
                                description: ProbesRequirementsOverride enables the
                                  user to override any container's env vars.
                                properties:
                                  container:
                                    description: The container name
                                    type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                required:
                                - container
                                type: object
                              type: array
                            replicas:
                              description: The number of replicas that HA parts of
                                the control plane will be scaled to
                              minimum: 0
                              type: integer
                            resources:
                              description: If specified, the container's resources.
                              items:
                                description: The pod this Resource is used to specify
                                  the requests and limits for a certain container
                                  based on the name.
                                properties:
                                  container:
                                    description: The name of the container
                                    type: string
                                  limits:
                                    properties:
                                      cpu:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                      memory:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                    type: object
                                  requests:
                                    properties:
                                      cpu:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                      memory:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                    type: object
                                type: object
                              type: array
                            tolerations:
                              description: If specified, the pod's tolerations.
                              items:
                                description: The pod this Toleration is attached to
                                  tolerates any taint that matches the triple <key,value,effect>
                                  using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: Effect indicates the taint effect
                                      to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule,
                                      PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: Key is the taint key that the toleration
                                      applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists;
                                      this combination means to match all values and
                                      all keys.
                                    type: string
                                  operator:
                                    description: Operator represents a key's relationship
                                      to the value. Valid operators are Exists and
                                      Equal. Defaults to Equal. Exists is equivalent
                                      to wildcard for value, so that a pod can tolerate
                                      all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: TolerationSeconds represents the
                                      period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is
                                      ignored) tolerates the taint. By default, it
                                      is not set, which means tolerate the taint forever
                                      (do not evict). Zero and negative values will
                                      be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: Value is the taint value the toleration
                                      matches to. If the operator is Exists, the value
                                      should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      high-availability:
                        description: Allows specification of HA control plane
                        properties:
                          replicas:
                            description: The number of replicas that HA parts of the
                              control plane will be scaled to
                            minimum: 0
                            type: integer
                        type: object
                      ingress:
                        description: The ingress configuration for Knative Serving
                        properties:
                          contour:
                            description: Contour settings
                            properties:
                              enabled:
                                type: boolean
                            type: object
                          istio:
                            description: Istio settings
                            properties:
                              enabled:
                                type: boolean
                              knative-ingress-gateway:
                                description: A means to override the knative-ingress-gateway
                                properties:
                                  selector:
                                    additionalProperties:
                                      type: string
                                    description: The selector for the ingress-gateway.
                                    type: object
                                  servers:
                                    description: A list of server specifications.
                                    items:
                                      properties:
                                        hosts:
                                          description: One or more hosts exposed by
                                            this gateway.
                                          items:
                                            format: string
                                            type: string
                                          type: array
                                        port:
                                          properties:
                                            name:
                                              description: Label assigned to the port.
                                              format: string
                                              type: string
                                            number:
                                              description: A valid non-negative integer
                                                port number.
                                              type: integer
                                            protocol:
                                              description: The protocol exposed on
                                                the port.
                                              format: string
                                              type: string
                                            target_port:
                                              description: A valid non-negative integer
                                                target port number.
                                              type: integer
                                          type: object
                                      type: object
                                    type: array
                                type: object
                              knative-local-gateway:
                                description: A means to override the knative-local-gateway
                                properties:
                                  selector:
                                    additionalProperties:
                                      type: string
                                    description: The selector for the ingress-gateway.
                                    type: object
                                  servers:
                                    description: A list of server specifications.
                                    items:
                                      properties:
                                        hosts:
                                          description: One or more hosts exposed by
                                            this gateway.
                                          items:
                                            format: string
                                            type: string
                                          type: array
                                        port:
                                          properties:
                                            name:
                                              description: Label assigned to the port.
                                              format: string
                                              type: string
                                            number:
                                              description: A valid non-negative integer
                                                port number.
                                              type: integer
                                            protocol:
                                              description: The protocol exposed on
                                                the port.
                                              format: string
                                              type: string
                                            target_port:
                                              description: A valid non-negative integer
                                                target port number.
                                              type: integer
                                          type: object
                                      type: object
                                    type: array
                                type: object
                            type: object
                          kourier:
                            description: Kourier settings
                            properties:
                              bootstrap-configmap:
                                type: string
                              enabled:
                                type: boolean
                              service-type:
                                type: string
                            type: object
                        type: object
                      manifests:
                        description: A list of serving manifests, which will be installed
                          by the operator
                        items:
                          properties:
                            URL:
                              description: The link of the manifest URL
                              type: string
                          type: object
                        type: array
                      podDisruptionBudgets:
                        description: A mapping of podDisruptionBudget name to override
                        items:
                          properties:
                            minAvailable:
                              anyOf:
                              - type: integer
                              - type: string
                              description: An eviction is allowed if at least "minAvailable"
                                pods selected by "selector" will still be available
                                after the eviction, i.e. even in the absence of the
                                evicted pod.  So for example you can prevent all voluntary
                                evictions by specifying "100%".
                              x-kubernetes-int-or-string: true
                            name:
                              description: The name of the podDisruptionBudget
                              type: string
                          type: object
                        type: array
                      registry:
                        description: A means to override the corresponding deployment
                          images in the upstream. This affects both apps/v1.Deployment
                          and caching.internal.knative.dev/v1alpha1.Image.
                        properties:
                          default:
                            description: The default image reference template to use
                              for all knative images. Takes the form of example-registry.io/custom/path/${NAME}:custom-tag
                            type: string
                          imagePullSecrets:
                            description: A list of secrets to be used when pulling
                              the knative images. The secret must be created in the
                              same namespace as the knative-serving deployments, and
                              not the namespace of this resource.
                            items:
                              properties:
                                name:
                                  description: The name of the secret.
                                  type: string
                              type: object
                            type: array
                          override:
                            additionalProperties:
                              type: string
                            description: A map of a container name or image name to
                              the full image location of the individual knative image.
                            type: object
                        type: object
                      services:
                        description: A mapping of service name to override
                        items:
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations overrides labels for the service
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels overrides labels for the service
                              type: object
                            name:
                              description: The name of the service
                              type: string
                            selector:
                              additionalProperties:
                                type: string
                              description: Selector overrides selector for the service
                              type: object
                          type: object
                        type: array
                      version:
                        description: The version of Knative Serving to be installed
                        type: string
                      workloads:
                        description: A mapping of deployment or statefulset name to
                          override
                        items:
                          properties:
                            affinity:
                              description: If specified, the pod's scheduling constraints.
                              properties:
                                nodeAffinity:
                                  description: Describes node affinity scheduling
                                    rules for the pod.
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the affinity expressions
                                        specified by this field, but it may choose
                                        a node that violates one or more of the expressions.
                                        The node that is most preferred is the one
                                        with the greatest sum of weights, i.e. for
                                        each node that meets all of the scheduling
                                        requirements (resource request, requiredDuringScheduling
                                        affinity expressions, etc.), compute a sum
                                        by iterating through the elements of this
                                        field and adding "weight" to the sum if the
                                        node matches the corresponding matchExpressions;
                                        the node(s) with the highest sum are the most
                                        preferred.
                                      items:
                                        description: An empty preferred scheduling
                                          term matches all objects with implicit weight
                                          0 (i.e. it's a no-op). A null preferred
                                          scheduling term matches no objects (i.e.
                                          is also a no-op).
                                        properties:
                                          preference:
                                            description: A node selector term, associated
                                              with the corresponding weight.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            description: Weight associated with matching
                                              the corresponding nodeSelectorTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - preference
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the affinity requirements specified
                                        by this field are not met at scheduling time,
                                        the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by
                                        this field cease to be met at some point during
                                        pod execution (e.g. due to an update), the
                                        system may or may not try to eventually evict
                                        the pod from its node.
                                      properties:
                                        nodeSelectorTerms:
                                          description: Required. A list of node selector
                                            terms. The terms are ORed.
                                          items:
                                            description: A null or empty node selector
                                              term matches no objects. The requirements
                                              of them are ANDed. The TopologySelectorTerm
                                              type implements a subset of the NodeSelectorTerm.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      required:
                                      - nodeSelectorTerms
                                      type: object
                                  type: object
                                podAffinity:
                                  description: Describes pod affinity scheduling rules
                                    (e.g. co-locate this pod in the same node, zone,
                                    etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the affinity expressions
                                        specified by this field, but it may choose
                                        a node that violates one or more of the expressions.
                                        The node that is most preferred is the one
                                        with the greatest sum of weights, i.e. for
                                        each node that meets all of the scheduling
                                        requirements (resource request, requiredDuringScheduling
                                        affinity expressions, etc.), compute a sum
                                        by iterating through the elements of this
                                        field and adding "weight" to the sum if the
                                        node has pods which matches the corresponding
                                        podAffinityTerm; the node(s) with the highest
                                        sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added
                                          per-node to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity
                                              term, associated with the corresponding
                                              weight.
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  which namespaces the labelSelector
                                                  applies to (matches against); null
                                                  or empty list means "this pod's
                                                  namespace"
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          weight:
                                            description: weight associated with matching
                                              the corresponding podAffinityTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - podAffinityTerm
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the affinity requirements specified
                                        by this field are not met at scheduling time,
                                        the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by
                                        this field cease to be met at some point during
                                        pod execution (e.g. due to a pod label update),
                                        the system may or may not try to eventually
                                        evict the pod from its node. When there are
                                        multiple elements, the lists of nodes corresponding
                                        to each podAffinityTerm are intersected, i.e.
                                        all terms must be satisfied.
                                      items:
                                        description: Defines a set of pods (namely
                                          those matching the labelSelector relative
                                          to the given namespace(s)) that this pod
                                          should be co-located (affinity) or not co-located
                                          (anti-affinity) with, where co-located is
                                          defined as running on a node whose value
                                          of the label with key <topologyKey> matches
                                          that of any node on which a pod of the set
                                          of pods is running
                                        properties:
                                          labelSelector:
                                            description: A label query over a set
                                              of resources, in this case pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          namespaces:
                                            description: namespaces specifies which
                                              namespaces the labelSelector applies
                                              to (matches against); null or empty
                                              list means "this pod's namespace"
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: This pod should be co-located
                                              (affinity) or not co-located (anti-affinity)
                                              with the pods matching the labelSelector
                                              in the specified namespaces, where co-located
                                              is defined as running on a node whose
                                              value of the label with key topologyKey
                                              matches that of any node on which any
                                              of the selected pods is running. Empty
                                              topologyKey is not allowed.
                                            type: string
                                        required:
                                        - topologyKey
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  description: Describes pod anti-affinity scheduling
                                    rules (e.g. avoid putting this pod in the same
                                    node, zone, etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the anti-affinity
                                        expressions specified by this field, but it
                                        may choose a node that violates one or more
                                        of the expressions. The node that is most
                                        preferred is the one with the greatest sum
                                        of weights, i.e. for each node that meets
                                        all of the scheduling requirements (resource
                                        request, requiredDuringScheduling anti-affinity
                                        expressions, etc.), compute a sum by iterating
                                        through the elements of this field and adding
                                        "weight" to the sum if the node has pods which
                                        matches the corresponding podAffinityTerm;
                                        the node(s) with the highest sum are the most
                                        preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added
                                          per-node to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity
                                              term, associated with the corresponding
                                              weight.
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  which namespaces the labelSelector
                                                  applies to (matches against); null
                                                  or empty list means "this pod's
                                                  namespace"
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          weight:
                                            description: weight associated with matching
                                              the corresponding podAffinityTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - podAffinityTerm
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the anti-affinity requirements
                                        specified by this field are not met at scheduling
                                        time, the pod will not be scheduled onto the
                                        node. If the anti-affinity requirements specified
                                        by this field cease to be met at some point
                                        during pod execution (e.g. due to a pod label
                                        update), the system may or may not try to
                                        eventually evict the pod from its node. When
                                        there are multiple elements, the lists of
                                        nodes corresponding to each podAffinityTerm
                                        are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: Defines a set of pods (namely
                                          those matching the labelSelector relative
                                          to the given namespace(s)) that this pod
                                          should be co-located (affinity) or not co-located
                                          (anti-affinity) with, where co-located is
                                          defined as running on a node whose value
                                          of the label with key <topologyKey> matches
                                          that of any node on which a pod of the set
                                          of pods is running
                                        properties:
                                          labelSelector:
                                            description: A label query over a set
                                              of resources, in this case pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          namespaces:
                                            description: namespaces specifies which
                                              namespaces the labelSelector applies
                                              to (matches against); null or empty
                                              list means "this pod's namespace"
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: This pod should be co-located
                                              (affinity) or not co-located (anti-affinity)
                                              with the pods matching the labelSelector
                                              in the specified namespaces, where co-located
                                              is defined as running on a node whose
                                              value of the label with key topologyKey
                                              matches that of any node on which any
                                              of the selected pods is running. Empty
                                              topologyKey is not allowed.
                                            type: string
                                        required:
                                        - topologyKey
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations overrides labels for the deployment
                                and its template.
                              type: object
                            env:
                              description: Env overrides env vars for the containers.
                              items:
                                properties:
                                  container:
                                    description: The container name
                                    type: string
                                  envVars:
                                    description: The desired EnvVarRequirements
                                    items:
                                      description: EnvVar represents an environment
                                        variable present in a Container.
                                      properties:
                                        name:
                                          description: Name of the environment variable.
                                            Must be a C_IDENTIFIER.
                                          type: string
                                        value:
                                          description: 'Variable references $(VAR_NAME)
                                            are expanded using the previously defined
                                            environment variables in the container
                                            and any service environment variables.
                                            If a variable cannot be resolved, the
                                            reference in the input string will be
                                            unchanged. Double $$ are reduced to a
                                            single $, which allows for escaping the
                                            $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                            will produce the string literal "$(VAR_NAME)".
                                            Escaped references will never be expanded,
                                            regardless of whether the variable exists
                                            or not. Defaults to "".'
                                          type: string
                                        valueFrom:
                                          description: Source for the environment
                                            variable's value. Cannot be used if value
                                            is not empty.
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                            fieldRef:
                                              description: 'Selects a field of the
                                                pod: supports metadata.name, metadata.namespace,
                                                `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                spec.nodeName, spec.serviceAccountName,
                                                status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                limits.ephemeral-storage, requests.cpu,
                                                requests.memory and requests.ephemeral-storage)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                            secretKeyRef:
                                              description: Selects a key of a secret
                                                in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret
                                                    to select from.  Must be a valid
                                                    secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    type: array
                                required:
                                - container
                                type: object
                              type: array
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels overrides labels for the deployment
                                and its template.
                              type: object
                            livenessProbes:
                              description: LivenessProbes overrides liveness probes
                                for the containers.
                              items:
                                description: ProbesRequirementsOverride enables the
                                  user to override any container's env vars.
                                properties:
                                  container:
                                    description: The container name
                                    type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                required:
                                - container
                                type: object
                              type: array
                            name:
                              description: The name of the deployment
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: NodeSelector overrides nodeSelector for
                                the deployment.
                              type: object
                            readinessProbes:
                              description: ReadinessProbes overrides readiness probes
                                for the containers.
                              items:
                                description: ProbesRequirementsOverride enables the
                                  user to override any container's env vars.
                                properties:
                                  container:
                                    description: The container name
                                    type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                required:
                                - container
                                type: object
                              type: array
                            replicas:
                              description: The number of replicas that HA parts of
                                the control plane will be scaled to
                              minimum: 0
                              type: integer
                            resources:
                              description: If specified, the container's resources.
                              items:
                                description: The pod this Resource is used to specify
                                  the requests and limits for a certain container
                                  based on the name.
                                properties:
                                  container:
                                    description: The name of the container
                                    type: string
                                  limits:
                                    properties:
                                      cpu:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                      memory:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                    type: object
                                  requests:
                                    properties:
                                      cpu:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                      memory:
                                        pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                        type: string
                                    type: object
                                type: object
                              type: array
                            tolerations:
                              description: If specified, the pod's tolerations.
                              items:
                                description: The pod this Toleration is attached to
                                  tolerates any taint that matches the triple <key,value,effect>
                                  using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: Effect indicates the taint effect
                                      to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule,
                                      PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: Key is the taint key that the toleration
                                      applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists;
                                      this combination means to match all values and
                                      all keys.
                                    type: string
                                  operator:
                                    description: Operator represents a key's relationship
                                      to the value. Valid operators are Exists and
                                      Equal. Defaults to Equal. Exists is equivalent
                                      to wildcard for value, so that a pod can tolerate
                                      all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: TolerationSeconds represents the
                                      period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is
                                      ignored) tolerates the taint. By default, it
                                      is not set, which means tolerate the taint forever
                                      (do not evict). Zero and negative values will
                                      be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: Value is the taint value the toleration
                                      matches to. If the operator is Exists, the value
                                      should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                    type: object
                  status:
                    description: Status defines the observed state of KnativeServing
                    properties:
                      conditions:
                        description: The latest available observations of a resource's
                          current state.
                        items:
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - type
                          - status
                          type: object
                        type: array
                      manifests:
                        description: The list of serving manifests, which have been
                          installed by the operator
                        items:
                          type: string
                        type: array
                      observedGeneration:
                        description: The generation last processed by the controller
                        type: integer
                      version:
                        description: The version of the installed release
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - aggregationRule:
          clusterRoleSelectors:
          - matchExpressions:
            - key: serving.knative.dev/release
              operator: Exists
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-serving-operator-aggregated
        rules: []
      - aggregationRule:
          clusterRoleSelectors:
          - matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - knative-serving
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-serving-operator-aggregated-stable
        rules: []
      - aggregationRule:
          clusterRoleSelectors:
          - matchExpressions:
            - key: eventing.knative.dev/release
              operator: Exists
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-eventing-operator-aggregated
        rules: []
      - aggregationRule:
          clusterRoleSelectors:
          - matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - knative-eventing
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-eventing-operator-aggregated-stable
        rules: []
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-serving-operator
        rules:
        - apiGroups:
          - operator.knative.dev
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resourceNames:
          - system:auth-delegator
          resources:
          - clusterroles
          verbs:
          - bind
          - get
        - apiGroups:
          - rbac.authorization.k8s.io
          resourceNames:
          - extension-apiserver-authentication-reader
          resources:
          - roles
          verbs:
          - bind
          - get
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          - roles
          verbs:
          - create
          - delete
          - escalate
          - get
          - list
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - rolebindings
          verbs:
          - create
          - delete
          - list
          - get
          - update
        - apiGroups:
          - apiregistration.k8s.io
          resources:
          - apiservices
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - caching.internal.knative.dev
          resources:
          - images
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - security.istio.io
          - apps
          - policy
          resources:
          - poddisruptionbudgets
          - peerauthentications
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - watch
          - update
        - apiGroups:
          - apiregistration.k8s.io
          resources:
          - apiservices
          verbs:
          - create
          - delete
          - get
          - list
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - create
          - delete
          - get
          - list
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - ""
          resourceNames:
          - knative-ingressgateway
          resources:
          - services
          - deployments
          - horizontalpodautoscalers
          verbs:
          - delete
        - apiGroups:
          - ""
          resourceNames:
          - config-controller
          resources:
          - configmaps
          verbs:
          - delete
        - apiGroups:
          - ""
          resourceNames:
          - knative-serving-operator
          resources:
          - serviceaccounts
          verbs:
          - delete
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-eventing-operator
        rules:
        - apiGroups:
          - operator.knative.dev
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          - roles
          verbs:
          - create
          - delete
          - escalate
          - get
          - list
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - rolebindings
          verbs:
          - create
          - delete
          - list
          - get
          - update
        - apiGroups:
          - apiregistration.k8s.io
          resources:
          - apiservices
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - caching.internal.knative.dev
          resources:
          - images
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - apiregistration.k8s.io
          resources:
          - apiservices
          verbs:
          - create
          - delete
          - get
          - list
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - create
          - delete
          - update
          - get
          - list
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - create
          - delete
          - update
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resourceNames:
          - knative-eventing-operator
          resources:
          - serviceaccounts
          verbs:
          - delete
        - apiGroups:
          - rabbitmq.com
          resources:
          - rabbitmqclusters
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - rabbitmq.com
          resources:
          - bindings
          - queues
          - exchanges
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rabbitmq.com
          resources:
          - bindings/status
          - queues/status
          - exchanges/status
          verbs:
          - get
        - apiGroups:
          - keda.sh
          resources:
          - scaledobjects
          - scaledobjects/finalizers
          - scaledobjects/status
          - triggerauthentications
          - triggerauthentications/status
          verbs:
          - get
          - list
          - watch
          - update
          - create
          - delete
        - apiGroups:
          - internal.kafka.eventing.knative.dev
          resources:
          - consumers
          - consumers/status
          - consumergroups
          - consumergroups/status
          verbs:
          - create
          - get
          - list
          - watch
          - patch
          - update
          - delete
        - apiGroups:
          - internal.kafka.eventing.knative.dev
          resources:
          - consumers/finalizers
          - consumergroups/finalizers
          verbs:
          - update
          - delete
        - apiGroups:
          - apps
          resources:
          - statefulsets/scale
          verbs:
          - get
          - list
          - watch
          - update
          - patch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          verbs:
          - watch
        - apiGroups:
          - '*'
          resources:
          - configmaps
          verbs:
          - delete
        - apiGroups:
          - '*'
          resources:
          - configmaps
          - services
          verbs:
          - get
          - list
          - watch
          - update
          - create
          - delete
        - apiGroups:
          - '*'
          resources:
          - pods
          verbs:
          - list
          - update
          - get
          - watch
        - apiGroups:
          - '*'
          resources:
          - pods/finalizers
          verbs:
          - get
          - list
          - create
          - update
          - delete
        - apiGroups:
          - '*'
          resources:
          - events
          verbs:
          - patch
          - create
        - apiGroups:
          - '*'
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
          - update
          - create
          - delete
        - apiGroups:
          - '*'
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - '*'
          resources:
          - serviceaccounts
          verbs:
          - get
          - list
          - watch
          - update
          - create
          - delete
        - apiGroups:
          - '*'
          resourceNames:
          - kafka-channel-config
          resources:
          - configmaps
          verbs:
          - patch
        - apiGroups:
          - '*'
          resourceNames:
          - kafka-webhook
          resources:
          - horizontalpodautoscalers
          verbs:
          - delete
        - apiGroups:
          - '*'
          resources:
          - leases
          verbs:
          - delete
        - apiGroups:
          - '*'
          resourceNames:
          - kafka-webhook
          resources:
          - poddisruptionbudgets
          verbs:
          - delete
        - apiGroups:
          - '*'
          resources:
          - services
          verbs:
          - patch
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - deletecollection
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-operator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-serving-operator
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: knative-serving-operator
        subjects:
        - kind: ServiceAccount
          name: knative-operator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-eventing-operator
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: knative-eventing-operator
        subjects:
        - kind: ServiceAccount
          name: knative-operator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            eventing.knative.dev/release: devel
          name: knative-operator-webhook
          namespace: default
        rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - create
          - update
          - list
          - watch
          - patch
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            eventing.knative.dev/release: devel
          name: knative-operator-webhook
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - create
          - update
          - list
          - watch
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces/finalizers
          verbs:
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: operator-webhook
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            eventing.knative.dev/release: devel
          name: operator-webhook
          namespace: default
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: knative-operator-webhook
        subjects:
        - kind: ServiceAccount
          name: operator-webhook
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: operator-webhook
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: knative-operator-webhook
        subjects:
        - kind: ServiceAccount
          name: operator-webhook
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-serving-operator-aggregated
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: knative-serving-operator-aggregated
        subjects:
        - kind: ServiceAccount
          name: knative-operator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-serving-operator-aggregated-stable
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: knative-serving-operator-aggregated-stable
        subjects:
        - kind: ServiceAccount
          name: knative-operator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-eventing-operator-aggregated
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: knative-eventing-operator-aggregated
        subjects:
        - kind: ServiceAccount
          name: knative-operator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-eventing-operator-aggregated-stable
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: knative-eventing-operator-aggregated-stable
        subjects:
        - kind: ServiceAccount
          name: knative-operator
          namespace: default
      - apiVersion: v1
        data: {}
        kind: ConfigMap
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: config-logging
          namespace: default
      - apiVersion: v1
        data: {}
        kind: ConfigMap
        metadata:
          labels:
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: config-observability
          namespace: default
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: knative-operator
            app.kubernetes.io/part-of: knative-operator
            app.kubernetes.io/version: 1.8.2
            operator.knative.dev/release: v1.8.2
          name: knative-operator
          namespace: default
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: knative-operator
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app.kubernetes.io/name: knative-operator
                app.kubernetes.io/part-of: knative-operator
                app.kubernetes.io/version: 1.8.2
                name: knative-operator
            spec:
              containers:
              - env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: SYSTEM_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: METRICS_DOMAIN
                  value: knative.dev/operator
                - name: CONFIG_LOGGING_NAME
                  value: config-logging
                - name: CONFIG_OBSERVABILITY_NAME
                  value: config-observability
                image: gcr.io/knative-releases/knative.dev/operator/cmd/operator@sha256:15fdcd6927ec3415fe2cca17f85c395b67522f716a255bffb23de855c0ccc6b6
                imagePullPolicy: IfNotPresent
                name: knative-operator
                ports:
                - containerPort: 9090
                  name: metrics
              serviceAccountName: knative-operator
      - apiVersion: v1
        kind: Namespace
        metadata:
          name: knative-serving
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            duck.knative.dev/addressable: "true"
            duck.knative.dev/podspecable: "true"
            knative.dev/crd-install: "true"
          name: services.serving.knative.dev
        spec:
          group: serving.knative.dev
          names:
            categories:
            - all
            - knative
            - serving
            kind: Service
            plural: services
            shortNames:
            - kservice
            - ksvc
            singular: service
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.url
              name: URL
              type: string
            - jsonPath: .status.latestCreatedRevisionName
              name: LatestCreated
              type: string
            - jsonPath: .status.latestReadyRevisionName
              name: LatestReady
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].reason
              name: Reason
              type: string
            name: v1
            schema:
              openAPIV3Schema:
                description: "Service acts as a top-level container that manages a
                  Route and Configuration which implement a network service. Service
                  exists to provide a singular abstraction which can be access controlled,
                  reasoned about, and which encapsulates software lifecycle decisions
                  such as rollout policy and team resource ownership. Service acts
                  only as an orchestrator of the underlying Routes and Configurations
                  (much as a kubernetes Deployment orchestrates ReplicaSets), and
                  its usage is optional but recommended. \n The Service's controller
                  will track the statuses of its owned Configuration and Route, reflecting
                  their statuses and conditions as its own. \n See also: https://github.com/knative/serving/blob/main/docs/spec/overview.md#service"
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ServiceSpec represents the configuration for the
                      Service object. A Service's specification is the union of the
                      specifications for a Route and Configuration.  The Service restricts
                      what can be expressed in these fields, e.g. the Route must reference
                      the provided Configuration; however, these limitations also
                      enable friendlier defaulting, e.g. Route never needs a Configuration
                      name, and may be defaulted to the appropriate "run latest" spec.
                    properties:
                      template:
                        description: Template holds the latest specification for the
                          Revision to be stamped out.
                        properties:
                          metadata:
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                              finalizers:
                                items:
                                  type: string
                                type: array
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          spec:
                            description: RevisionSpec holds the desired state of the
                              Revision (from the client).
                            properties:
                              affinity:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-affinity
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              automountServiceAccountToken:
                                description: AutomountServiceAccountToken indicates
                                  whether a service account token should be automatically
                                  mounted.
                                type: boolean
                              containerConcurrency:
                                description: ContainerConcurrency specifies the maximum
                                  allowed in-flight (concurrent) requests per container
                                  of the Revision.  Defaults to `0` which means concurrency
                                  to the application is not limited, and the system
                                  decides the target concurrency for the autoscaler.
                                format: int64
                                type: integer
                              containers:
                                description: List of containers belonging to the pod.
                                  Containers cannot currently be added or removed.
                                  There must be at least one container in a Pod. Cannot
                                  be updated.
                                items:
                                  description: A single application container that
                                    you want to run within a pod.
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The
                                        container image''s CMD is used if this is
                                        not provided. Variable references $(VAR_NAME)
                                        are expanded using the container''s environment.
                                        If a variable cannot be resolved, the reference
                                        in the input string will be unchanged. Double
                                        $$ are reduced to a single $, which allows
                                        for escaping the $(VAR_NAME) syntax: i.e.
                                        "$$(VAR_NAME)" will produce the string literal
                                        "$(VAR_NAME)". Escaped references will never
                                        be expanded, regardless of whether the variable
                                        exists or not. Cannot be updated. More info:
                                        https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: 'Entrypoint array. Not executed
                                        within a shell. The container image''s ENTRYPOINT
                                        is used if this is not provided. Variable
                                        references $(VAR_NAME) are expanded using
                                        the container''s environment. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: List of environment variables to
                                        set in the container. Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: 'Variable references $(VAR_NAME)
                                              are expanded using the previously defined
                                              environment variables in the container
                                              and any service environment variables.
                                              If a variable cannot be resolved, the
                                              reference in the input string will be
                                              unchanged. Double $$ are reduced to
                                              a single $, which allows for escaping
                                              the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                              will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded,
                                              regardless of whether the variable exists
                                              or not. Defaults to "".'
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: This is accessible behind
                                                  a feature flag - kubernetes.podspec-fieldref
                                                type: object
                                                x-kubernetes-map-type: atomic
                                                x-kubernetes-preserve-unknown-fields: true
                                              resourceFieldRef:
                                                description: This is accessible behind
                                                  a feature flag - kubernetes.podspec-fieldref
                                                type: object
                                                x-kubernetes-map-type: atomic
                                                x-kubernetes-preserve-unknown-fields: true
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: List of sources to populate environment
                                        variables in the container. The keys defined
                                        within a source must be a C_IDENTIFIER. All
                                        invalid keys will be reported as an event
                                        when the container is starting. When a key
                                        exists in multiple sources, the value associated
                                        with the last source will take precedence.
                                        Values defined by an Env with a duplicate
                                        key will take precedence. Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                    image:
                                      description: 'Container image name. More info:
                                        https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level
                                        config management to default or override container
                                        images in workload controllers like Deployments
                                        and StatefulSets.'
                                      type: string
                                    imagePullPolicy:
                                      description: 'Image pull policy. One of Always,
                                        Never, IfNotPresent. Defaults to Always if
                                        :latest tag is specified, or IfNotPresent
                                        otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                      type: string
                                    livenessProbe:
                                      description: 'Periodic probe of container liveness.
                                        Container will be restarted if the probe fails.
                                        Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          type: object
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: Name of the container specified
                                        as a DNS_LABEL. Each container in a pod must
                                        have a unique name (DNS_LABEL). Cannot be
                                        updated.
                                      type: string
                                    ports:
                                      description: List of ports to expose from the
                                        container. Not specifying a port here DOES
                                        NOT prevent that port from being exposed.
                                        Any port which is listening on the default
                                        "0.0.0.0" address inside a container will
                                        be accessible from the network. Modifying
                                        this array with strategic merge patch may
                                        corrupt the data. For more information See
                                        https://github.com/kubernetes/kubernetes/issues/108255.
                                        Cannot be updated.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: Number of port to expose
                                              on the pod's IP address. This must be
                                              a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          name:
                                            description: If specified, this must be
                                              an IANA_SVC_NAME and unique within the
                                              pod. Each named port in a pod must have
                                              a unique name. Name for the port that
                                              can be referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: Protocol for port. Must be
                                              UDP, TCP, or SCTP. Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: 'Periodic probe of container service
                                        readiness. Container will be removed from
                                        service endpoints if the probe fails. Cannot
                                        be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          type: object
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    resources:
                                      description: 'Compute Resources required by
                                        this container. Cannot be updated. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    securityContext:
                                      description: 'SecurityContext defines the security
                                        options the container should be run with.
                                        If set, the fields of SecurityContext override
                                        the equivalent fields of PodSecurityContext.
                                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: 'AllowPrivilegeEscalation controls
                                            whether a process can gain more privileges
                                            than its parent process. This bool directly
                                            controls if the no_new_privs flag will
                                            be set on the container process. AllowPrivilegeEscalation
                                            is true always when the container is:
                                            1) run as Privileged 2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when
                                            spec.os.name is windows.'
                                          type: boolean
                                        capabilities:
                                          description: The capabilities to add/drop
                                            when running containers. Defaults to the
                                            default set of capabilities granted by
                                            the container runtime. Note that this
                                            field cannot be set when spec.os.name
                                            is windows.
                                          properties:
                                            add:
                                              description: This is accessible behind
                                                a feature flag - kubernetes.containerspec-addcapabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        readOnlyRootFilesystem:
                                          description: Whether this container has
                                            a read-only root filesystem. Default is
                                            false. Note that this field cannot be
                                            set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: The GID to run the entrypoint
                                            of the container process. Uses runtime
                                            default if unset. May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: Indicates that the container
                                            must run as a non-root user. If true,
                                            the Kubelet will validate the image at
                                            runtime to ensure that it does not run
                                            as UID 0 (root) and fail to start the
                                            container if it does. If unset or false,
                                            no such validation will be performed.
                                            May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: The UID to run the entrypoint
                                            of the container process. Defaults to
                                            user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                      type: object
                                    terminationMessagePath:
                                      description: 'Optional: Path at which the file
                                        to which the container''s termination message
                                        will be written is mounted into the container''s
                                        filesystem. Message written is intended to
                                        be brief final status, such as an assertion
                                        failure message. Will be truncated by the
                                        node if greater than 4096 bytes. The total
                                        message length across all containers will
                                        be limited to 12kb. Defaults to /dev/termination-log.
                                        Cannot be updated.'
                                      type: string
                                    terminationMessagePolicy:
                                      description: Indicate how the termination message
                                        should be populated. File will use the contents
                                        of terminationMessagePath to populate the
                                        container status message on both success and
                                        failure. FallbackToLogsOnError will use the
                                        last chunk of container log output if the
                                        termination message file is empty and the
                                        container exited with an error. The log output
                                        is limited to 2048 bytes or 80 lines, whichever
                                        is smaller. Defaults to File. Cannot be updated.
                                      type: string
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's
                                        filesystem. Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: Path within the container
                                              at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: Mounted read-only if true,
                                              read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: Path within the volume from
                                              which the container's volume should
                                              be mounted. Defaults to "" (volume's
                                              root).
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: Container's working directory.
                                        If not specified, the container runtime's
                                        default will be used, which might be configured
                                        in the container image. Cannot be updated.
                                      type: string
                                  type: object
                                type: array
                              dnsConfig:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-dnsconfig
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              dnsPolicy:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-dnspolicy
                                type: string
                              enableServiceLinks:
                                description: 'EnableServiceLinks indicates whether
                                  information about services should be injected into
                                  pod''s environment variables, matching the syntax
                                  of Docker links. Optional: Knative defaults this
                                  to false.'
                                type: boolean
                              hostAliases:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-hostaliases
                                items:
                                  description: This is accessible behind a feature
                                    flag - kubernetes.podspec-hostaliases
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              idleTimeoutSeconds:
                                description: IdleTimeoutSeconds is the maximum duration
                                  in seconds a request will be allowed to stay open
                                  while not receiving any bytes from the user's application.
                                  If unspecified, a system default will be provided.
                                format: int64
                                type: integer
                              imagePullSecrets:
                                description: 'ImagePullSecrets is an optional list
                                  of references to secrets in the same namespace to
                                  use for pulling any of the images used by this PodSpec.
                                  If specified, these secrets will be passed to individual
                                  puller implementations for them to use. More info:
                                  https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                              initContainers:
                                description: 'List of initialization containers belonging
                                  to the pod. Init containers are executed in order
                                  prior to containers being started. If any init container
                                  fails, the pod is considered to have failed and
                                  is handled according to its restartPolicy. The name
                                  for an init container or normal container must be
                                  unique among all containers. Init containers may
                                  not have Lifecycle actions, Readiness probes, Liveness
                                  probes, or Startup probes. The resourceRequirements
                                  of an init container are taken into account during
                                  scheduling by finding the highest request/limit
                                  for each resource type, and then using the max of
                                  of that value or the sum of the normal containers.
                                  Limits are applied to init containers in a similar
                                  fashion. Init containers cannot currently be added
                                  or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
                                items:
                                  description: This is accessible behind a feature
                                    flag - kubernetes.podspec-init-containers
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              nodeSelector:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-nodeselector
                                type: object
                                x-kubernetes-map-type: atomic
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-priorityclassname
                                type: string
                                x-kubernetes-preserve-unknown-fields: true
                              responseStartTimeoutSeconds:
                                description: ResponseStartTimeoutSeconds is the maximum
                                  duration in seconds that the request routing layer
                                  will wait for a request delivered to a container
                                  to begin sending any network traffic.
                                format: int64
                                type: integer
                              runtimeClassName:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-runtimeclassname
                                type: string
                                x-kubernetes-preserve-unknown-fields: true
                              schedulerName:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-schedulername
                                type: string
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-securitycontext
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAccountName:
                                description: 'ServiceAccountName is the name of the
                                  ServiceAccount to use to run this pod. More info:
                                  https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                type: string
                              timeoutSeconds:
                                description: TimeoutSeconds is the maximum duration
                                  in seconds that the request instance is allowed
                                  to respond to a request. If unspecified, a system
                                  default will be provided.
                                format: int64
                                type: integer
                              tolerations:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-tolerations
                                items:
                                  description: This is accessible behind a feature
                                    flag - kubernetes.podspec-tolerations
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              topologySpreadConstraints:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-topologyspreadconstraints
                                items:
                                  description: This is accessible behind a feature
                                    flag - kubernetes.podspec-topologyspreadconstraints
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: 'List of volumes that can be mounted
                                  by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                                items:
                                  description: Volume represents a named volume in
                                    a pod that may be accessed by any container in
                                    the pod.
                                  properties:
                                    configMap:
                                      description: configMap represents a configMap
                                        that should populate this volume
                                      properties:
                                        defaultMode:
                                          description: 'defaultMode is optional: mode
                                            bits used to set permissions on created
                                            files by default. Must be an octal value
                                            between 0000 and 0777 or a decimal value
                                            between 0 and 511. YAML accepts both octal
                                            and decimal values, JSON requires decimal
                                            values for mode bits. Defaults to 0644.
                                            Directories within the path are not affected
                                            by this setting. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: items if unspecified, each
                                            key-value pair in the Data field of the
                                            referenced ConfigMap will be projected
                                            into the volume as a file whose name is
                                            the key and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is specified
                                            which is not present in the ConfigMap,
                                            the volume setup will error unless it
                                            is marked optional. Paths must be relative
                                            and may not contain the '..' path or start
                                            with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                  bits used to set permissions on
                                                  this file. Must be an octal value
                                                  between 0000 and 0777 or a decimal
                                                  value between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative
                                                  path of the file to map the key
                                                  to. May not be an absolute path.
                                                  May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    emptyDir:
                                      description: This is accessible behind a feature
                                        flag - kubernetes.podspec-emptydir
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    name:
                                      description: 'name of the volume. Must be a
                                        DNS_LABEL and unique within the pod. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    persistentVolumeClaim:
                                      description: This is accessible behind a feature
                                        flag - kubernetes.podspec-persistent-volume-claim
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    projected:
                                      description: projected items for all in one
                                        resources secrets, configmaps, and downward
                                        API
                                      properties:
                                        defaultMode:
                                          description: defaultMode are the mode bits
                                            used to set permissions on created files
                                            by default. Must be an octal value between
                                            0000 and 0777 or a decimal value between
                                            0 and 511. YAML accepts both octal and
                                            decimal values, JSON requires decimal
                                            values for mode bits. Directories within
                                            the path are not affected by this setting.
                                            This might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits
                                            set.
                                          format: int32
                                          type: integer
                                        sources:
                                          description: sources is the list of volume
                                            projections
                                          items:
                                            description: Projection that may be projected
                                              along with other supported volume types
                                            properties:
                                              configMap:
                                                description: configMap information
                                                  about the configMap data to project
                                                properties:
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced ConfigMap
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the ConfigMap, the volume
                                                      setup will error unless it is
                                                      marked optional. Paths must
                                                      be relative and may not contain
                                                      the '..' path or start with
                                                      '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: optional specify
                                                      whether the ConfigMap or its
                                                      keys must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secret:
                                                description: secret information about
                                                  the secret data to project
                                                properties:
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced Secret
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the Secret, the volume setup
                                                      will error unless it is marked
                                                      optional. Paths must be relative
                                                      and may not contain the '..'
                                                      path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: optional field specify
                                                      whether the Secret or its key
                                                      must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              serviceAccountToken:
                                                description: serviceAccountToken is
                                                  information about the serviceAccountToken
                                                  data to project
                                                properties:
                                                  audience:
                                                    description: audience is the intended
                                                      audience of the token. A recipient
                                                      of a token must identify itself
                                                      with an identifier specified
                                                      in the audience of the token,
                                                      and otherwise should reject
                                                      the token. The audience defaults
                                                      to the identifier of the apiserver.
                                                    type: string
                                                  expirationSeconds:
                                                    description: expirationSeconds
                                                      is the requested duration of
                                                      validity of the service account
                                                      token. As the token approaches
                                                      expiration, the kubelet volume
                                                      plugin will proactively rotate
                                                      the service account token. The
                                                      kubelet will start trying to
                                                      rotate the token if the token
                                                      is older than 80 percent of
                                                      its time to live or if the token
                                                      is older than 24 hours.Defaults
                                                      to 1 hour and must be at least
                                                      10 minutes.
                                                    format: int64
                                                    type: integer
                                                  path:
                                                    description: path is the path
                                                      relative to the mount point
                                                      of the file to project the token
                                                      into.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                            type: object
                                          type: array
                                      type: object
                                    secret:
                                      description: 'secret represents a secret that
                                        should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      properties:
                                        defaultMode:
                                          description: 'defaultMode is Optional: mode
                                            bits used to set permissions on created
                                            files by default. Must be an octal value
                                            between 0000 and 0777 or a decimal value
                                            between 0 and 511. YAML accepts both octal
                                            and decimal values, JSON requires decimal
                                            values for mode bits. Defaults to 0644.
                                            Directories within the path are not affected
                                            by this setting. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: items If unspecified, each
                                            key-value pair in the Data field of the
                                            referenced Secret will be projected into
                                            the volume as a file whose name is the
                                            key and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is specified
                                            which is not present in the Secret, the
                                            volume setup will error unless it is marked
                                            optional. Paths must be relative and may
                                            not contain the '..' path or start with
                                            '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                  bits used to set permissions on
                                                  this file. Must be an octal value
                                                  between 0000 and 0777 or a decimal
                                                  value between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative
                                                  path of the file to map the key
                                                  to. May not be an absolute path.
                                                  May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: 'secretName is the name of
                                            the secret in the pod''s namespace to
                                            use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                          type: string
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - containers
                            type: object
                        type: object
                      traffic:
                        description: Traffic specifies how to distribute traffic over
                          a collection of revisions and configurations.
                        items:
                          description: TrafficTarget holds a single entry of the routing
                            table for a Route.
                          properties:
                            configurationName:
                              description: ConfigurationName of a configuration to
                                whose latest revision we will send this portion of
                                traffic. When the "status.latestReadyRevisionName"
                                of the referenced configuration changes, we will automatically
                                migrate traffic from the prior "latest ready" revision
                                to the new one.  This field is never set in Route's
                                status, only its spec.  This is mutually exclusive
                                with RevisionName.
                              type: string
                            latestRevision:
                              description: LatestRevision may be optionally provided
                                to indicate that the latest ready Revision of the
                                Configuration should be used for this traffic target.  When
                                provided LatestRevision must be true if RevisionName
                                is empty; it must be false when RevisionName is non-empty.
                              type: boolean
                            percent:
                              description: 'Percent indicates that percentage based
                                routing should be used and the value indicates the
                                percent of traffic that is be routed to this Revision
                                or Configuration. `0` (zero) mean no traffic, `100`
                                means all traffic. When percentage based routing is
                                being used the follow rules apply: - the sum of all
                                percent values must equal 100 - when not specified,
                                the implied value for `percent` is zero for that particular
                                Revision or Configuration'
                              format: int64
                              type: integer
                            revisionName:
                              description: RevisionName of a specific revision to
                                which to send this portion of traffic.  This is mutually
                                exclusive with ConfigurationName.
                              type: string
                            tag:
                              description: Tag is optionally used to expose a dedicated
                                url for referencing this target exclusively.
                              type: string
                            url:
                              description: URL displays the URL for accessing named
                                traffic targets. URL is displayed in status, and is
                                disallowed on spec. URL must contain a scheme (e.g.
                                http://) and a hostname, but may not contain anything
                                else (e.g. basic auth, url path, etc.)
                              type: string
                          type: object
                        type: array
                    type: object
                  status:
                    description: ServiceStatus represents the Status stanza of the
                      Service resource.
                    properties:
                      address:
                        description: Address holds the information needed for a Route
                          to be the target of an event.
                        properties:
                          url:
                            type: string
                        type: object
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      latestCreatedRevisionName:
                        description: LatestCreatedRevisionName is the last revision
                          that was created from this Configuration. It might not be
                          ready yet, for that use LatestReadyRevisionName.
                        type: string
                      latestReadyRevisionName:
                        description: LatestReadyRevisionName holds the name of the
                          latest Revision stamped out from this Configuration that
                          has had its "Ready" condition become "True".
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                      traffic:
                        description: Traffic holds the configured traffic distribution.
                          These entries will always contain RevisionName references.
                          When ConfigurationName appears in the spec, this will hold
                          the LatestReadyRevisionName that we last observed.
                        items:
                          description: TrafficTarget holds a single entry of the routing
                            table for a Route.
                          properties:
                            configurationName:
                              description: ConfigurationName of a configuration to
                                whose latest revision we will send this portion of
                                traffic. When the "status.latestReadyRevisionName"
                                of the referenced configuration changes, we will automatically
                                migrate traffic from the prior "latest ready" revision
                                to the new one.  This field is never set in Route's
                                status, only its spec.  This is mutually exclusive
                                with RevisionName.
                              type: string
                            latestRevision:
                              description: LatestRevision may be optionally provided
                                to indicate that the latest ready Revision of the
                                Configuration should be used for this traffic target.  When
                                provided LatestRevision must be true if RevisionName
                                is empty; it must be false when RevisionName is non-empty.
                              type: boolean
                            percent:
                              description: 'Percent indicates that percentage based
                                routing should be used and the value indicates the
                                percent of traffic that is be routed to this Revision
                                or Configuration. `0` (zero) mean no traffic, `100`
                                means all traffic. When percentage based routing is
                                being used the follow rules apply: - the sum of all
                                percent values must equal 100 - when not specified,
                                the implied value for `percent` is zero for that particular
                                Revision or Configuration'
                              format: int64
                              type: integer
                            revisionName:
                              description: RevisionName of a specific revision to
                                which to send this portion of traffic.  This is mutually
                                exclusive with ConfigurationName.
                              type: string
                            tag:
                              description: Tag is optionally used to expose a dedicated
                                url for referencing this target exclusively.
                              type: string
                            url:
                              description: URL displays the URL for accessing named
                                traffic targets. URL is displayed in status, and is
                                disallowed on spec. URL must contain a scheme (e.g.
                                http://) and a hostname, but may not contain anything
                                else (e.g. basic auth, url path, etc.)
                              type: string
                          type: object
                        type: array
                      url:
                        description: URL holds the url that will distribute traffic
                          over the provided traffic targets. It generally has the
                          form http[s]://{route-name}.{route-namespace}.{cluster-level-suffix}
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: knservices.example.promise.syntasso.io
        spec:
          group: example.promise.syntasso.io
          names:
            kind: knservice
            plural: knservices
            singular: knservice
          scope: Namespaced
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      clusterSelectors:
                        description: |
                          List of key:value pairs to use as cluster selectors when scheduling
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      database:
                        properties:
                          host:
                            type: string
                          name:
                            type: string
                          secretKeyRef:
                            type: string
                          user:
                            type: string
                        type: object
                      image:
                        type: string
                      name:
                        type: string
                      port:
                        default: 8080
                        type: number
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - syntasso/demo-knative-service-request-pipeline:v0.1.0
    status: {}
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      creationTimestamp: null
      name: postgresql
      namespace: default
    spec:
      clusterSelector:
        environment: dev
      workerClusterResources:
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-pod
        rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
        rules:
        - apiGroups:
          - acid.zalan.do
          resources:
          - postgresqls
          - postgresqls/status
          - operatorconfigurations
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - acid.zalan.do
          resources:
          - postgresteams
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - create
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - update
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/exec
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - statefulsets
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
        - apiGroups:
          - batch
          resources:
          - cronjobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - get
          - create
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - get
          - create
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: postgres-operator
        subjects:
        - kind: ServiceAccount
          name: postgres-operator
          namespace: default
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
        spec:
          ports:
          - port: 8080
            protocol: TCP
            targetPort: 8080
          selector:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/name: postgres-operator
          type: ClusterIP
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/instance: postgres-operator
              app.kubernetes.io/name: postgres-operator
          template:
            metadata:
              annotations:
                checksum/config: 5e43e52b4f2db120d38d4727aadf7071bc5a3249e01f3ca89ed2c65b1fe4e227
              labels:
                app.kubernetes.io/instance: postgres-operator
                app.kubernetes.io/name: postgres-operator
            spec:
              affinity: {}
              containers:
              - env:
                - name: POSTGRES_OPERATOR_CONFIGURATION_OBJECT
                  value: postgres-operator
                image: registry.opensource.zalan.do/acid/postgres-operator:v1.8.2-43-g3e148ea5
                imagePullPolicy: IfNotPresent
                name: postgres-operator
                resources:
                  limits:
                    cpu: 500m
                    memory: 500Mi
                  requests:
                    cpu: 100m
                    memory: 250Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  runAsUser: 1000
              nodeSelector: {}
              serviceAccountName: postgres-operator
              tolerations: []
      - apiVersion: acid.zalan.do/v1
        configuration:
          aws_or_gcp:
            aws_region: eu-central-1
            enable_ebs_gp3_migration: false
          connection_pooler:
            connection_pooler_default_cpu_limit: "1"
            connection_pooler_default_cpu_request: 500m
            connection_pooler_default_memory_limit: 100Mi
            connection_pooler_default_memory_request: 100Mi
            connection_pooler_image: registry.opensource.zalan.do/acid/pgbouncer:master-22
            connection_pooler_max_db_connections: 60
            connection_pooler_mode: transaction
            connection_pooler_number_of_instances: 2
            connection_pooler_schema: pooler
            connection_pooler_user: pooler
          crd_categories:
          - all
          debug:
            debug_logging: true
            enable_database_access: true
          docker_image: registry.opensource.zalan.do/acid/spilo-14:2.1-p6
          enable_crd_registration: true
          enable_lazy_spilo_upgrade: false
          enable_pgversion_env_var: true
          enable_shm_volume: true
          enable_spilo_wal_path_compat: false
          etcd_host: ""
          kubernetes:
            cluster_domain: cluster.local
            cluster_labels:
              application: spilo
            cluster_name_label: cluster-name
            enable_cross_namespace_secret: false
            enable_init_containers: true
            enable_pod_antiaffinity: false
            enable_pod_disruption_budget: true
            enable_sidecars: true
            oauth_token_secret_name: postgres-operator
            pdb_name_format: postgres-{cluster}-pdb
            pod_antiaffinity_topology_key: kubernetes.io/hostname
            pod_management_policy: ordered_ready
            pod_role_label: spilo-role
            pod_service_account_name: postgres-pod
            pod_terminate_grace_period: 5m
            secret_name_template: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
            spilo_allow_privilege_escalation: true
            spilo_privileged: false
            storage_resize_mode: pvc
            watched_namespace: '*'
          load_balancer:
            db_hosted_zone: db.example.com
            enable_master_load_balancer: false
            enable_master_pooler_load_balancer: false
            enable_replica_load_balancer: false
            enable_replica_pooler_load_balancer: false
            external_traffic_policy: Cluster
            master_dns_name_format: '{cluster}.{team}.{hostedzone}'
            replica_dns_name_format: '{cluster}-repl.{team}.{hostedzone}'
          logging_rest_api:
            api_port: 8080
            cluster_history_entries: 1000
            ring_log_lines: 100
          logical_backup:
            logical_backup_docker_image: registry.opensource.zalan.do/acid/logical-backup:v1.8.0
            logical_backup_job_prefix: logical-backup-
            logical_backup_provider: s3
            logical_backup_s3_access_key_id: ""
            logical_backup_s3_bucket: my-bucket-url
            logical_backup_s3_endpoint: ""
            logical_backup_s3_region: ""
            logical_backup_s3_retention_time: ""
            logical_backup_s3_secret_access_key: ""
            logical_backup_s3_sse: AES256
            logical_backup_schedule: 30 00 * * *
          major_version_upgrade:
            major_version_upgrade_mode: "off"
            minimal_major_version: "9.6"
            target_major_version: "14"
          max_instances: -1
          min_instances: -1
          postgres_pod_resources:
            default_cpu_limit: "1"
            default_cpu_request: 100m
            default_memory_limit: 500Mi
            default_memory_request: 100Mi
            min_cpu_limit: 250m
            min_memory_limit: 250Mi
          repair_period: 5m
          resync_period: 30m
          teams_api:
            enable_admin_role_for_users: true
            enable_postgres_team_crd: false
            enable_postgres_team_crd_superusers: false
            enable_team_member_deprecation: false
            enable_team_superuser: false
            enable_teams_api: false
            pam_role_name: zalandos
            postgres_superuser_teams:
            - postgres_superusers
            protected_role_names:
            - admin
            - cron_admin
            role_deletion_suffix: _deleted
            team_admin_role: admin
            team_api_role_configuration:
              log_statement: all
          timeouts:
            patroni_api_check_interval: 1s
            patroni_api_check_timeout: 5s
            pod_deletion_wait_timeout: 10m
            pod_label_wait_timeout: 10m
            ready_wait_interval: 3s
            ready_wait_timeout: 30s
            resource_check_interval: 3s
            resource_check_timeout: 10m
          users:
            enable_password_rotation: false
            password_rotation_interval: 90
            password_rotation_user_retention: 180
            replication_username: standby
            super_username: postgres
          workers: 8
        kind: OperatorConfiguration
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: operatorconfigurations.acid.zalan.do
        spec:
          group: acid.zalan.do
          names:
            categories:
            - all
            kind: OperatorConfiguration
            listKind: OperatorConfigurationList
            plural: operatorconfigurations
            shortNames:
            - opconfig
            singular: operatorconfiguration
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Spilo image to be used for Pods
              jsonPath: .configuration.docker_image
              name: Image
              type: string
            - description: Label for K8s resources created by operator
              jsonPath: .configuration.kubernetes.cluster_name_label
              name: Cluster-Label
              type: string
            - description: Name of service account to be used
              jsonPath: .configuration.kubernetes.pod_service_account_name
              name: Service-Account
              type: string
            - description: Minimum number of instances per Postgres cluster
              jsonPath: .configuration.min_instances
              name: Min-Instances
              type: integer
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    enum:
                    - acid.zalan.do/v1
                    type: string
                  configuration:
                    properties:
                      aws_or_gcp:
                        properties:
                          additional_secret_mount:
                            type: string
                          additional_secret_mount_path:
                            default: /meta/credentials
                            type: string
                          aws_region:
                            default: eu-central-1
                            type: string
                          enable_ebs_gp3_migration:
                            default: false
                            type: boolean
                          enable_ebs_gp3_migration_max_size:
                            default: 1000
                            type: integer
                          gcp_credentials:
                            type: string
                          kube_iam_role:
                            type: string
                          log_s3_bucket:
                            type: string
                          wal_az_storage_account:
                            type: string
                          wal_gs_bucket:
                            type: string
                          wal_s3_bucket:
                            type: string
                        type: object
                      connection_pooler:
                        properties:
                          connection_pooler_default_cpu_limit:
                            default: "1"
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          connection_pooler_default_cpu_request:
                            default: 500m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          connection_pooler_default_memory_limit:
                            default: 100Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          connection_pooler_default_memory_request:
                            default: 100Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          connection_pooler_image:
                            default: registry.opensource.zalan.do/acid/pgbouncer:master-24
                            type: string
                          connection_pooler_max_db_connections:
                            default: 60
                            type: integer
                          connection_pooler_mode:
                            default: transaction
                            enum:
                            - session
                            - transaction
                            type: string
                          connection_pooler_number_of_instances:
                            default: 2
                            minimum: 1
                            type: integer
                          connection_pooler_schema:
                            default: pooler
                            type: string
                          connection_pooler_user:
                            default: pooler
                            type: string
                        type: object
                      crd_categories:
                        items:
                          type: string
                        nullable: true
                        type: array
                      debug:
                        properties:
                          debug_logging:
                            default: true
                            type: boolean
                          enable_database_access:
                            default: true
                            type: boolean
                        type: object
                      docker_image:
                        default: registry.opensource.zalan.do/acid/spilo-14:2.1-p7
                        type: string
                      enable_crd_registration:
                        default: true
                        type: boolean
                      enable_crd_validation:
                        default: true
                        description: deprecated
                        type: boolean
                      enable_lazy_spilo_upgrade:
                        default: false
                        type: boolean
                      enable_pgversion_env_var:
                        default: true
                        type: boolean
                      enable_shm_volume:
                        default: true
                        type: boolean
                      enable_spilo_wal_path_compat:
                        default: false
                        type: boolean
                      enable_team_id_clustername_prefix:
                        default: false
                        type: boolean
                      etcd_host:
                        default: ""
                        type: string
                      ignore_instance_limits_annotation_key:
                        type: string
                      kubernetes:
                        properties:
                          additional_pod_capabilities:
                            items:
                              type: string
                            type: array
                          cluster_domain:
                            default: cluster.local
                            type: string
                          cluster_labels:
                            additionalProperties:
                              type: string
                            default:
                              application: spilo
                            type: object
                          cluster_name_label:
                            default: cluster-name
                            type: string
                          custom_pod_annotations:
                            additionalProperties:
                              type: string
                            type: object
                          delete_annotation_date_key:
                            type: string
                          delete_annotation_name_key:
                            type: string
                          downscaler_annotations:
                            items:
                              type: string
                            type: array
                          enable_cross_namespace_secret:
                            default: false
                            type: boolean
                          enable_init_containers:
                            default: true
                            type: boolean
                          enable_pod_antiaffinity:
                            default: false
                            type: boolean
                          enable_pod_disruption_budget:
                            default: true
                            type: boolean
                          enable_readiness_probe:
                            default: false
                            type: boolean
                          enable_sidecars:
                            default: true
                            type: boolean
                          ignored_annotations:
                            items:
                              type: string
                            type: array
                          infrastructure_roles_secret_name:
                            type: string
                          infrastructure_roles_secrets:
                            items:
                              properties:
                                defaultrolevalue:
                                  type: string
                                defaultuservalue:
                                  type: string
                                details:
                                  type: string
                                passwordkey:
                                  type: string
                                rolekey:
                                  type: string
                                secretname:
                                  type: string
                                template:
                                  type: boolean
                                userkey:
                                  type: string
                              required:
                              - secretname
                              - userkey
                              - passwordkey
                              type: object
                            nullable: true
                            type: array
                          inherited_annotations:
                            items:
                              type: string
                            type: array
                          inherited_labels:
                            items:
                              type: string
                            type: array
                          master_pod_move_timeout:
                            default: 20m
                            type: string
                          node_readiness_label:
                            additionalProperties:
                              type: string
                            type: object
                          node_readiness_label_merge:
                            enum:
                            - AND
                            - OR
                            type: string
                          oauth_token_secret_name:
                            default: postgresql-operator
                            type: string
                          pdb_name_format:
                            default: postgres-{cluster}-pdb
                            type: string
                          pod_antiaffinity_topology_key:
                            default: kubernetes.io/hostname
                            type: string
                          pod_environment_configmap:
                            type: string
                          pod_environment_secret:
                            type: string
                          pod_management_policy:
                            default: ordered_ready
                            enum:
                            - ordered_ready
                            - parallel
                            type: string
                          pod_priority_class_name:
                            type: string
                          pod_role_label:
                            default: spilo-role
                            type: string
                          pod_service_account_definition:
                            default: ""
                            type: string
                          pod_service_account_name:
                            default: postgres-pod
                            type: string
                          pod_service_account_role_binding_definition:
                            default: ""
                            type: string
                          pod_terminate_grace_period:
                            default: 5m
                            type: string
                          secret_name_template:
                            default: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
                            type: string
                          spilo_allow_privilege_escalation:
                            default: true
                            type: boolean
                          spilo_fsgroup:
                            type: integer
                          spilo_privileged:
                            default: false
                            type: boolean
                          spilo_runasgroup:
                            type: integer
                          spilo_runasuser:
                            type: integer
                          storage_resize_mode:
                            default: pvc
                            enum:
                            - ebs
                            - mixed
                            - pvc
                            - "off"
                            type: string
                          toleration:
                            additionalProperties:
                              type: string
                            type: object
                          watched_namespace:
                            type: string
                        type: object
                      kubernetes_use_configmaps:
                        default: false
                        type: boolean
                      load_balancer:
                        properties:
                          custom_service_annotations:
                            additionalProperties:
                              type: string
                            type: object
                          db_hosted_zone:
                            default: db.example.com
                            type: string
                          enable_master_load_balancer:
                            default: true
                            type: boolean
                          enable_master_pooler_load_balancer:
                            default: false
                            type: boolean
                          enable_replica_load_balancer:
                            default: false
                            type: boolean
                          enable_replica_pooler_load_balancer:
                            default: false
                            type: boolean
                          external_traffic_policy:
                            default: Cluster
                            enum:
                            - Cluster
                            - Local
                            type: string
                          master_dns_name_format:
                            default: '{cluster}.{namespace}.{hostedzone}'
                            type: string
                          replica_dns_name_format:
                            default: '{cluster}-repl.{namespace}.{hostedzone}'
                            type: string
                        type: object
                      logging_rest_api:
                        properties:
                          api_port:
                            default: 8080
                            type: integer
                          cluster_history_entries:
                            default: 1000
                            type: integer
                          ring_log_lines:
                            default: 100
                            type: integer
                        type: object
                      logical_backup:
                        properties:
                          logical_backup_docker_image:
                            default: registry.opensource.zalan.do/acid/logical-backup:v1.8.2
                            type: string
                          logical_backup_google_application_credentials:
                            type: string
                          logical_backup_job_prefix:
                            default: logical-backup-
                            type: string
                          logical_backup_provider:
                            default: s3
                            type: string
                          logical_backup_s3_access_key_id:
                            type: string
                          logical_backup_s3_bucket:
                            type: string
                          logical_backup_s3_endpoint:
                            type: string
                          logical_backup_s3_region:
                            type: string
                          logical_backup_s3_retention_time:
                            type: string
                          logical_backup_s3_secret_access_key:
                            type: string
                          logical_backup_s3_sse:
                            type: string
                          logical_backup_schedule:
                            default: 30 00 * * *
                            pattern: ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$
                            type: string
                        type: object
                      major_version_upgrade:
                        properties:
                          major_version_upgrade_mode:
                            default: "off"
                            type: string
                          major_version_upgrade_team_allow_list:
                            items:
                              type: string
                            type: array
                          minimal_major_version:
                            default: "11"
                            type: string
                          target_major_version:
                            default: "14"
                            type: string
                        type: object
                      max_instances:
                        default: -1
                        description: -1 = disabled
                        minimum: -1
                        type: integer
                      min_instances:
                        default: -1
                        description: -1 = disabled
                        minimum: -1
                        type: integer
                      patroni:
                        properties:
                          failsafe_mode:
                            default: false
                            type: boolean
                        type: object
                      postgres_pod_resources:
                        properties:
                          default_cpu_limit:
                            default: "1"
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          default_cpu_request:
                            default: 100m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          default_memory_limit:
                            default: 500Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          default_memory_request:
                            default: 100Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          max_cpu_request:
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          max_memory_request:
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          min_cpu_limit:
                            default: 250m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          min_memory_limit:
                            default: 250Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                        type: object
                      repair_period:
                        default: 5m
                        type: string
                      resync_period:
                        default: 30m
                        type: string
                      scalyr:
                        properties:
                          scalyr_api_key:
                            type: string
                          scalyr_cpu_limit:
                            default: "1"
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          scalyr_cpu_request:
                            default: 100m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          scalyr_image:
                            type: string
                          scalyr_memory_limit:
                            default: 500Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          scalyr_memory_request:
                            default: 50Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          scalyr_server_url:
                            default: https://upload.eu.scalyr.com
                            type: string
                        type: object
                      set_memory_request_to_limit:
                        default: false
                        type: boolean
                      sidecar_docker_images:
                        additionalProperties:
                          type: string
                        type: object
                      sidecars:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      teams_api:
                        properties:
                          enable_admin_role_for_users:
                            default: true
                            type: boolean
                          enable_postgres_team_crd:
                            default: true
                            type: boolean
                          enable_postgres_team_crd_superusers:
                            default: false
                            type: boolean
                          enable_team_member_deprecation:
                            default: false
                            type: boolean
                          enable_team_superuser:
                            default: false
                            type: boolean
                          enable_teams_api:
                            default: true
                            type: boolean
                          pam_configuration:
                            default: https://info.example.com/oauth2/tokeninfo?access_token=
                              uid realm=/employees
                            type: string
                          pam_role_name:
                            default: zalandos
                            type: string
                          postgres_superuser_teams:
                            items:
                              type: string
                            type: array
                          protected_role_names:
                            default:
                            - admin
                            - cron_admin
                            items:
                              type: string
                            type: array
                          role_deletion_suffix:
                            default: _deleted
                            type: string
                          team_admin_role:
                            default: admin
                            type: string
                          team_api_role_configuration:
                            additionalProperties:
                              type: string
                            default:
                              log_statement: all
                            type: object
                          teams_api_url:
                            default: https://teams.example.com/api/
                            type: string
                        type: object
                      timeouts:
                        properties:
                          patroni_api_check_interval:
                            default: 1s
                            type: string
                          patroni_api_check_timeout:
                            default: 5s
                            type: string
                          pod_deletion_wait_timeout:
                            default: 10m
                            type: string
                          pod_label_wait_timeout:
                            default: 10m
                            type: string
                          ready_wait_interval:
                            default: 4s
                            type: string
                          ready_wait_timeout:
                            default: 30s
                            type: string
                          resource_check_interval:
                            default: 3s
                            type: string
                          resource_check_timeout:
                            default: 10m
                            type: string
                        type: object
                      users:
                        properties:
                          additional_owner_roles:
                            items:
                              type: string
                            nullable: true
                            type: array
                          enable_password_rotation:
                            default: false
                            type: boolean
                          password_rotation_interval:
                            default: 90
                            type: integer
                          password_rotation_user_retention:
                            default: 180
                            type: integer
                          replication_username:
                            default: standby
                            type: string
                          super_username:
                            default: postgres
                            type: string
                        type: object
                      workers:
                        default: 8
                        minimum: 1
                        type: integer
                    type: object
                  kind:
                    enum:
                    - OperatorConfiguration
                    type: string
                  status:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - kind
                - apiVersion
                - configuration
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: postgresqls.acid.zalan.do
        spec:
          group: acid.zalan.do
          names:
            categories:
            - all
            kind: postgresql
            listKind: postgresqlList
            plural: postgresqls
            shortNames:
            - pg
            singular: postgresql
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Team responsible for Postgres cluster
              jsonPath: .spec.teamId
              name: Team
              type: string
            - description: PostgreSQL version
              jsonPath: .spec.postgresql.version
              name: Version
              type: string
            - description: Number of Pods per Postgres cluster
              jsonPath: .spec.numberOfInstances
              name: Pods
              type: integer
            - description: Size of the bound volume
              jsonPath: .spec.volume.size
              name: Volume
              type: string
            - description: Requested CPU for Postgres containers
              jsonPath: .spec.resources.requests.cpu
              name: CPU-Request
              type: string
            - description: Requested memory for Postgres containers
              jsonPath: .spec.resources.requests.memory
              name: Memory-Request
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            - description: Current sync status of postgresql resource
              jsonPath: .status.PostgresClusterStatus
              name: Status
              type: string
            name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    enum:
                    - acid.zalan.do/v1
                    type: string
                  kind:
                    enum:
                    - postgresql
                    type: string
                  spec:
                    properties:
                      additionalVolumes:
                        items:
                          properties:
                            mountPath:
                              type: string
                            name:
                              type: string
                            subPath:
                              type: string
                            targetContainers:
                              items:
                                type: string
                              nullable: true
                              type: array
                            volumeSource:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - name
                          - mountPath
                          - volumeSource
                          type: object
                        type: array
                      allowedSourceRanges:
                        items:
                          pattern: ^(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\/(\d|[1-2]\d|3[0-2])$
                          type: string
                        nullable: true
                        type: array
                      clone:
                        properties:
                          cluster:
                            type: string
                          s3_access_key_id:
                            type: string
                          s3_endpoint:
                            type: string
                          s3_force_path_style:
                            type: boolean
                          s3_secret_access_key:
                            type: string
                          s3_wal_path:
                            type: string
                          timestamp:
                            pattern: ^([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(([+-]([01][0-9]|2[0-3]):[0-5][0-9]))$
                            type: string
                          uid:
                            format: uuid
                            type: string
                        required:
                        - cluster
                        type: object
                      connectionPooler:
                        properties:
                          dockerImage:
                            type: string
                          maxDBConnections:
                            type: integer
                          mode:
                            enum:
                            - session
                            - transaction
                            type: string
                          numberOfInstances:
                            minimum: 1
                            type: integer
                          resources:
                            properties:
                              limits:
                                properties:
                                  cpu:
                                    pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                    type: string
                                  memory:
                                    pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                    type: string
                                type: object
                              requests:
                                properties:
                                  cpu:
                                    pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                    type: string
                                  memory:
                                    pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                    type: string
                                type: object
                            type: object
                          schema:
                            type: string
                          user:
                            type: string
                        type: object
                      databases:
                        additionalProperties:
                          type: string
                        type: object
                      dockerImage:
                        type: string
                      enableConnectionPooler:
                        type: boolean
                      enableLogicalBackup:
                        type: boolean
                      enableMasterLoadBalancer:
                        type: boolean
                      enableMasterPoolerLoadBalancer:
                        type: boolean
                      enableReplicaConnectionPooler:
                        type: boolean
                      enableReplicaLoadBalancer:
                        type: boolean
                      enableReplicaPoolerLoadBalancer:
                        type: boolean
                      enableShmVolume:
                        type: boolean
                      env:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      init_containers:
                        description: deprecated
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      initContainers:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      logicalBackupSchedule:
                        pattern: ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$
                        type: string
                      maintenanceWindows:
                        items:
                          pattern: ^\ *((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(2[0-3]|[01]?\d):([0-5]?\d)|(2[0-3]|[01]?\d):([0-5]?\d))-((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(2[0-3]|[01]?\d):([0-5]?\d)|(2[0-3]|[01]?\d):([0-5]?\d))\
                            *$
                          type: string
                        type: array
                      nodeAffinity:
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            items:
                              properties:
                                preference:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            properties:
                              nodeSelectorTerms:
                                items:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      numberOfInstances:
                        minimum: 0
                        type: integer
                      patroni:
                        properties:
                          failsafe_mode:
                            type: boolean
                          initdb:
                            additionalProperties:
                              type: string
                            type: object
                          loop_wait:
                            type: integer
                          maximum_lag_on_failover:
                            type: integer
                          pg_hba:
                            items:
                              type: string
                            type: array
                          retry_timeout:
                            type: integer
                          slots:
                            additionalProperties:
                              additionalProperties:
                                type: string
                              type: object
                            type: object
                          synchronous_mode:
                            type: boolean
                          synchronous_mode_strict:
                            type: boolean
                          synchronous_node_count:
                            type: integer
                          ttl:
                            type: integer
                        type: object
                      pod_priority_class_name:
                        description: deprecated
                        type: string
                      podAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      podPriorityClassName:
                        type: string
                      postgresql:
                        properties:
                          parameters:
                            additionalProperties:
                              type: string
                            type: object
                          version:
                            enum:
                            - "10"
                            - "11"
                            - "12"
                            - "13"
                            - "14"
                            - "15"
                            type: string
                        required:
                        - version
                        type: object
                      preparedDatabases:
                        additionalProperties:
                          properties:
                            defaultUsers:
                              type: boolean
                            extensions:
                              additionalProperties:
                                type: string
                              type: object
                            schemas:
                              additionalProperties:
                                properties:
                                  defaultRoles:
                                    type: boolean
                                  defaultUsers:
                                    type: boolean
                                type: object
                              type: object
                            secretNamespace:
                              type: string
                          type: object
                        type: object
                      replicaLoadBalancer:
                        description: deprecated
                        type: boolean
                      resources:
                        properties:
                          limits:
                            properties:
                              cpu:
                                pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                type: string
                              memory:
                                pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                type: string
                            type: object
                          requests:
                            properties:
                              cpu:
                                pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                type: string
                              memory:
                                pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                type: string
                            type: object
                        type: object
                      schedulerName:
                        type: string
                      serviceAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      sidecars:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      spiloFSGroup:
                        type: integer
                      spiloRunAsGroup:
                        type: integer
                      spiloRunAsUser:
                        type: integer
                      standby:
                        oneOf:
                        - required:
                          - s3_wal_path
                        - required:
                          - gs_wal_path
                        - required:
                          - standby_host
                        properties:
                          gs_wal_path:
                            type: string
                          s3_wal_path:
                            type: string
                          standby_host:
                            type: string
                          standby_port:
                            type: string
                        type: object
                      streams:
                        items:
                          properties:
                            applicationId:
                              type: string
                            batchSize:
                              type: integer
                            database:
                              type: string
                            filter:
                              additionalProperties:
                                type: string
                              type: object
                            tables:
                              additionalProperties:
                                properties:
                                  eventType:
                                    type: string
                                  idColumn:
                                    type: string
                                  payloadColumn:
                                    type: string
                                required:
                                - eventType
                                type: object
                              type: object
                          required:
                          - applicationId
                          - database
                          - tables
                          type: object
                        type: array
                      teamId:
                        type: string
                      tls:
                        properties:
                          caFile:
                            type: string
                          caSecretName:
                            type: string
                          certificateFile:
                            type: string
                          privateKeyFile:
                            type: string
                          secretName:
                            type: string
                        required:
                        - secretName
                        type: object
                      tolerations:
                        items:
                          properties:
                            effect:
                              enum:
                              - NoExecute
                              - NoSchedule
                              - PreferNoSchedule
                              type: string
                            key:
                              type: string
                            operator:
                              enum:
                              - Equal
                              - Exists
                              type: string
                            tolerationSeconds:
                              type: integer
                            value:
                              type: string
                          type: object
                        type: array
                      useLoadBalancer:
                        description: deprecated
                        type: boolean
                      users:
                        additionalProperties:
                          items:
                            enum:
                            - bypassrls
                            - BYPASSRLS
                            - nobypassrls
                            - NOBYPASSRLS
                            - createdb
                            - CREATEDB
                            - nocreatedb
                            - NOCREATEDB
                            - createrole
                            - CREATEROLE
                            - nocreaterole
                            - NOCREATEROLE
                            - inherit
                            - INHERIT
                            - noinherit
                            - NOINHERIT
                            - login
                            - LOGIN
                            - nologin
                            - NOLOGIN
                            - replication
                            - REPLICATION
                            - noreplication
                            - NOREPLICATION
                            - superuser
                            - SUPERUSER
                            - nosuperuser
                            - NOSUPERUSER
                            type: string
                          nullable: true
                          type: array
                        type: object
                      usersWithInPlaceSecretRotation:
                        items:
                          type: string
                        nullable: true
                        type: array
                      usersWithSecretRotation:
                        items:
                          type: string
                        nullable: true
                        type: array
                      volume:
                        properties:
                          iops:
                            type: integer
                          selector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      enum:
                                      - DoesNotExist
                                      - Exists
                                      - In
                                      - NotIn
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          size:
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          storageClass:
                            type: string
                          subPath:
                            type: string
                          throughput:
                            type: integer
                        required:
                        - size
                        type: object
                    required:
                    - numberOfInstances
                    - teamId
                    - postgresql
                    - volume
                    type: object
                  status:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - kind
                - apiVersion
                - spec
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: postgresteams.acid.zalan.do
        spec:
          group: acid.zalan.do
          names:
            categories:
            - all
            kind: PostgresTeam
            listKind: PostgresTeamList
            plural: postgresteams
            shortNames:
            - pgteam
            singular: postgresteam
          scope: Namespaced
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    enum:
                    - acid.zalan.do/v1
                    type: string
                  kind:
                    enum:
                    - PostgresTeam
                    type: string
                  spec:
                    properties:
                      additionalMembers:
                        additionalProperties:
                          description: List of users who will also be added to the
                            Postgres cluster
                          items:
                            type: string
                          nullable: true
                          type: array
                        description: Map for teamId and associated additional users
                        type: object
                      additionalSuperuserTeams:
                        additionalProperties:
                          description: List of teams to become Postgres superusers
                          items:
                            type: string
                          nullable: true
                          type: array
                        description: Map for teamId and associated additional superuser
                          teams
                        type: object
                      additionalTeams:
                        additionalProperties:
                          description: List of teams whose members will also be added
                            to the Postgres cluster
                          items:
                            type: string
                          nullable: true
                          type: array
                        description: Map for teamId and associated additional teams
                        type: object
                    type: object
                required:
                - kind
                - apiVersion
                - spec
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: postgresqls.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: postgresql
            plural: postgresqls
            singular: postgresql
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      clusterSelectors:
                        description: |
                          List of key:value pairs to use as cluster selectors when scheduling
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      dbName:
                        default: postgres
                        description: |
                          Database name. A database will be created with this name. The owner of the database will be the teamId.
                        type: string
                      env:
                        default: dev
                        description: |
                          Configures and deploys this PostgreSQL with environment specific configuration. Prod PostgreSQL are configured with backups and more resources.
                        pattern: ^(dev|prod)$
                        type: string
                      teamId:
                        default: acid
                        description: |
                          Team ID. A superuser role will be created with this name.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - syntasso/demo-postgresql-request-pipeline:v0.1.0
    status: {}
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      creationTimestamp: null
      name: redis
      namespace: default
    spec:
      clusterSelector:
        environment: dev
      workerClusterResources:
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app: redisoperator
          name: redisoperator
          namespace: default
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: redisoperator
          strategy:
            type: RollingUpdate
          template:
            metadata:
              labels:
                app: redisoperator
            spec:
              containers:
              - image: quay.io/spotahome/redis-operator:v1.1.0
                imagePullPolicy: IfNotPresent
                name: app
                resources:
                  limits:
                    cpu: 100m
                    memory: 50Mi
                  requests:
                    cpu: 10m
                    memory: 50Mi
                securityContext:
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  runAsUser: 1000
              restartPolicy: Always
              serviceAccountName: redisoperator
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: redisoperator
          namespace: default
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: redisoperator
        subjects:
        - kind: ServiceAccount
          name: redisoperator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: redisoperator
          namespace: default
        rules:
        - apiGroups:
          - databases.spotahome.com
          resources:
          - redisfailovers
          - redisfailovers/finalizers
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - events
          - configmaps
          - persistentvolumeclaims
          - persistentvolumeclaims/finalizers
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: redisoperator
          namespace: default
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          creationTimestamp: null
          name: redisfailovers.databases.spotahome.com
        spec:
          group: databases.spotahome.com
          names:
            kind: RedisFailover
            listKind: RedisFailoverList
            plural: redisfailovers
            shortNames:
            - rf
            singular: redisfailover
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .metadata.name
              name: NAME
              type: string
            - jsonPath: .spec.redis.replicas
              name: REDIS
              type: integer
            - jsonPath: .spec.sentinel.replicas
              name: SENTINELS
              type: integer
            - jsonPath: .metadata.creationTimestamp
              name: AGE
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                description: RedisFailover represents a Redis failover
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: RedisFailoverSpec represents a Redis failover spec
                    properties:
                      auth:
                        description: AuthSettings contains settings about auth
                        properties:
                          secretPath:
                            type: string
                        type: object
                      bootstrapNode:
                        description: BootstrapSettings contains settings about a potential
                          bootstrap node
                        properties:
                          allowSentinels:
                            type: boolean
                          host:
                            type: string
                          port:
                            type: string
                        type: object
                      labelWhitelist:
                        items:
                          type: string
                        type: array
                      redis:
                        description: RedisSettings defines the specification of the
                          redis cluster
                        properties:
                          affinity:
                            description: Affinity is a group of affinity scheduling
                              rules.
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node matches
                                      the corresponding matchExpressions; the node(s)
                                      with the highest sum are the most preferred.
                                    items:
                                      description: An empty preferred scheduling term
                                        matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling
                                        term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod
                                      from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: A null or empty node selector
                                            term matches no objects. The requirements
                                            of them are ANDed. The TopologySelectorTerm
                                            type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node has
                                      pods which matches the corresponding podAffinityTerm;
                                      the node(s) with the highest sum are the most
                                      preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to a pod label update),
                                      the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is beta-level and is only honored
                                            when PodAffinityNamespaceSelector feature
                                            is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the anti-affinity
                                      expressions specified by this field, but it
                                      may choose a node that violates one or more
                                      of the expressions. The node that is most preferred
                                      is the one with the greatest sum of weights,
                                      i.e. for each node that meets all of the scheduling
                                      requirements (resource request, requiredDuringScheduling
                                      anti-affinity expressions, etc.), compute a
                                      sum by iterating through the elements of this
                                      field and adding "weight" to the sum if the
                                      node has pods which matches the corresponding
                                      podAffinityTerm; the node(s) with the highest
                                      sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the anti-affinity requirements
                                      specified by this field are not met at scheduling
                                      time, the pod will not be scheduled onto the
                                      node. If the anti-affinity requirements specified
                                      by this field cease to be met at some point
                                      during pod execution (e.g. due to a pod label
                                      update), the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is beta-level and is only honored
                                            when PodAffinityNamespaceSelector feature
                                            is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                            type: object
                          command:
                            items:
                              type: string
                            type: array
                          customCommandRenames:
                            items:
                              description: RedisCommandRename defines the specification
                                of a "rename-command" configuration option
                              properties:
                                from:
                                  type: string
                                to:
                                  type: string
                              type: object
                            type: array
                          customConfig:
                            items:
                              type: string
                            type: array
                          dnsPolicy:
                            description: DNSPolicy defines how a pod's DNS will be
                              configured.
                            type: string
                          exporter:
                            description: RedisExporter defines the specification for
                              the redis exporter
                            properties:
                              args:
                                items:
                                  type: string
                                type: array
                              enabled:
                                type: boolean
                              env:
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              image:
                                type: string
                              imagePullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                type: string
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                            type: object
                          hostNetwork:
                            type: boolean
                          image:
                            type: string
                          imagePullPolicy:
                            description: PullPolicy describes a policy for if/when
                              to pull a container image
                            type: string
                          imagePullSecrets:
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            type: array
                          nodeSelector:
                            additionalProperties:
                              type: string
                            type: object
                          podAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          priorityClassName:
                            type: string
                          replicas:
                            format: int32
                            type: integer
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            description: PodSecurityContext holds pod-level security
                              attributes and common container settings. Some fields
                              are also present in container.securityContext.  Field
                              values of container.securityContext take precedence
                              over field values of PodSecurityContext.
                            properties:
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: HostProcess determines if a container
                                      should be run as a 'Host Process' container.
                                      This field is alpha-level and will only be honored
                                      by components that enable the WindowsHostProcessContainers
                                      feature flag. Setting this field without the
                                      feature flag will result in errors when validating
                                      the Pod. All of a Pod's containers must have
                                      the same effective HostProcess value (it is
                                      not allowed to have a mix of HostProcess containers
                                      and non-HostProcess containers).  In addition,
                                      if HostProcess is true then HostNetwork must
                                      also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                          serviceAccountName:
                            type: string
                          serviceAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          shutdownConfigMap:
                            type: string
                          storage:
                            description: RedisStorage defines the structure used to
                              store the Redis Data
                            properties:
                              emptyDir:
                                description: Represents an empty directory for a pod.
                                  Empty directory volumes support ownership management
                                  and SELinux relabeling.
                                properties:
                                  medium:
                                    description: 'What type of storage medium should
                                      back this directory. The default is "" which
                                      means to use the node''s default medium. Must
                                      be an empty string (default) or Memory. More
                                      info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                    type: string
                                  sizeLimit:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Total amount of local storage required
                                      for this EmptyDir volume. The size limit is
                                      also applicable for memory medium. The maximum
                                      usage on memory medium EmptyDir would be the
                                      minimum value between the SizeLimit specified
                                      here and the sum of memory limits of all containers
                                      in a pod. The default is nil which means that
                                      the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                type: object
                              keepAfterDeletion:
                                type: boolean
                              persistentVolumeClaim:
                                description: EmbeddedPersistentVolumeClaim is an embedded
                                  version of k8s.io/api/core/v1.PersistentVolumeClaim.
                                  It contains TypeMeta and a reduced ObjectMeta.
                                properties:
                                  apiVersion:
                                    description: 'APIVersion defines the versioned
                                      schema of this representation of an object.
                                      Servers should convert recognized schemas to
                                      the latest internal value, and may reject unrecognized
                                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                    type: string
                                  kind:
                                    description: 'Kind is a string value representing
                                      the REST resource this object represents. Servers
                                      may infer this from the endpoint the client
                                      submits requests to. Cannot be updated. In CamelCase.
                                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  metadata:
                                    description: EmbeddedMetadata contains metadata
                                      relevant to an EmbeddedResource.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: 'Annotations is an unstructured
                                          key value map stored with a resource that
                                          may be set by external tools to store and
                                          retrieve arbitrary metadata. They are not
                                          queryable and should be preserved when modifying
                                          objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: 'Map of string keys and values
                                          that can be used to organize and categorize
                                          (scope and select) objects. May match selectors
                                          of replication controllers and services.
                                          More info: http://kubernetes.io/docs/user-guide/labels'
                                        type: object
                                      name:
                                        description: 'Name must be unique within a
                                          namespace. Is required when creating resources,
                                          although some resources may allow a client
                                          to request the generation of an appropriate
                                          name automatically. Name is primarily intended
                                          for creation idempotence and configuration
                                          definition. Cannot be updated. More info:
                                          http://kubernetes.io/docs/user-guide/identifiers#names'
                                        type: string
                                    type: object
                                  spec:
                                    description: 'Spec defines the desired characteristics
                                      of a volume requested by a pod author. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    properties:
                                      accessModes:
                                        description: 'AccessModes contains the desired
                                          access modes the volume should have. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'This field can be used to specify
                                          either: * An existing VolumeSnapshot object
                                          (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          If the provisioner or an external controller
                                          can support the specified data source, it
                                          will create a new volume based on the contents
                                          of the specified data source. If the AnyVolumeDataSource
                                          feature gate is enabled, this field will
                                          always have the same contents as the DataSourceRef
                                          field.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      dataSourceRef:
                                        description: 'Specifies the object from which
                                          to populate the volume with data, if a non-empty
                                          volume is desired. This may be any local
                                          object from a non-empty API group (non core
                                          object) or a PersistentVolumeClaim object.
                                          When this field is specified, volume binding
                                          will only succeed if the type of the specified
                                          object matches some installed volume populator
                                          or dynamic provisioner. This field will
                                          replace the functionality of the DataSource
                                          field and as such if both fields are non-empty,
                                          they must have the same value. For backwards
                                          compatibility, both fields (DataSource and
                                          DataSourceRef) will be set to the same value
                                          automatically if one of them is empty and
                                          the other is non-empty. There are two important
                                          differences between DataSource and DataSourceRef:
                                          * While DataSource only allows two specific
                                          types of objects, DataSourceRef   allows
                                          any non-core object, as well as PersistentVolumeClaim
                                          objects. * While DataSource ignores disallowed
                                          values (dropping them), DataSourceRef   preserves
                                          all values, and generates an error if a
                                          disallowed value is   specified. (Alpha)
                                          Using this field requires the AnyVolumeDataSource
                                          feature gate to be enabled.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      resources:
                                        description: 'Resources represents the minimum
                                          resources the volume should have. More info:
                                          https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: A label query over volumes to
                                          consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      storageClassName:
                                        description: 'Name of the StorageClass required
                                          by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type
                                          of volume is required by the claim. Value
                                          of Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: VolumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                  status:
                                    description: 'Status represents the current information/status
                                      of a persistent volume claim. Read-only. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    properties:
                                      accessModes:
                                        description: 'AccessModes contains the actual
                                          access modes the volume backing the PVC
                                          has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      capacity:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: Represents the actual resources
                                          of the underlying volume.
                                        type: object
                                      conditions:
                                        description: Current Condition of persistent
                                          volume claim. If underlying persistent volume
                                          is being resized then the Condition will
                                          be set to 'ResizeStarted'.
                                        items:
                                          description: PersistentVolumeClaimCondition
                                            contails details about state of pvc
                                          properties:
                                            lastProbeTime:
                                              description: Last time we probed the
                                                condition.
                                              format: date-time
                                              type: string
                                            lastTransitionTime:
                                              description: Last time the condition
                                                transitioned from one status to another.
                                              format: date-time
                                              type: string
                                            message:
                                              description: Human-readable message
                                                indicating details about last transition.
                                              type: string
                                            reason:
                                              description: Unique, this should be
                                                a short, machine understandable string
                                                that gives the reason for condition's
                                                last transition. If it reports "ResizeStarted"
                                                that means the underlying persistent
                                                volume is being resized.
                                              type: string
                                            status:
                                              type: string
                                            type:
                                              description: PersistentVolumeClaimConditionType
                                                is a valid value of PersistentVolumeClaimCondition.Type
                                              type: string
                                          required:
                                          - status
                                          - type
                                          type: object
                                        type: array
                                      phase:
                                        description: Phase represents the current
                                          phase of PersistentVolumeClaim.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          terminationGracePeriod:
                            format: int64
                            type: integer
                          tolerations:
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                        type: object
                      sentinel:
                        description: SentinelSettings defines the specification of
                          the sentinel cluster
                        properties:
                          affinity:
                            description: Affinity is a group of affinity scheduling
                              rules.
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node matches
                                      the corresponding matchExpressions; the node(s)
                                      with the highest sum are the most preferred.
                                    items:
                                      description: An empty preferred scheduling term
                                        matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling
                                        term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod
                                      from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: A null or empty node selector
                                            term matches no objects. The requirements
                                            of them are ANDed. The TopologySelectorTerm
                                            type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node has
                                      pods which matches the corresponding podAffinityTerm;
                                      the node(s) with the highest sum are the most
                                      preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to a pod label update),
                                      the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is beta-level and is only honored
                                            when PodAffinityNamespaceSelector feature
                                            is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the anti-affinity
                                      expressions specified by this field, but it
                                      may choose a node that violates one or more
                                      of the expressions. The node that is most preferred
                                      is the one with the greatest sum of weights,
                                      i.e. for each node that meets all of the scheduling
                                      requirements (resource request, requiredDuringScheduling
                                      anti-affinity expressions, etc.), compute a
                                      sum by iterating through the elements of this
                                      field and adding "weight" to the sum if the
                                      node has pods which matches the corresponding
                                      podAffinityTerm; the node(s) with the highest
                                      sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the anti-affinity requirements
                                      specified by this field are not met at scheduling
                                      time, the pod will not be scheduled onto the
                                      node. If the anti-affinity requirements specified
                                      by this field cease to be met at some point
                                      during pod execution (e.g. due to a pod label
                                      update), the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is beta-level and is only honored
                                            when PodAffinityNamespaceSelector feature
                                            is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                            type: object
                          command:
                            items:
                              type: string
                            type: array
                          customConfig:
                            items:
                              type: string
                            type: array
                          dnsPolicy:
                            description: DNSPolicy defines how a pod's DNS will be
                              configured.
                            type: string
                          exporter:
                            description: SentinelExporter defines the specification
                              for the sentinel exporter
                            properties:
                              args:
                                items:
                                  type: string
                                type: array
                              enabled:
                                type: boolean
                              env:
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              image:
                                type: string
                              imagePullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                type: string
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                            type: object
                          hostNetwork:
                            type: boolean
                          image:
                            type: string
                          imagePullPolicy:
                            description: PullPolicy describes a policy for if/when
                              to pull a container image
                            type: string
                          imagePullSecrets:
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            type: array
                          nodeSelector:
                            additionalProperties:
                              type: string
                            type: object
                          podAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          priorityClassName:
                            type: string
                          replicas:
                            format: int32
                            type: integer
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            description: PodSecurityContext holds pod-level security
                              attributes and common container settings. Some fields
                              are also present in container.securityContext.  Field
                              values of container.securityContext take precedence
                              over field values of PodSecurityContext.
                            properties:
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: HostProcess determines if a container
                                      should be run as a 'Host Process' container.
                                      This field is alpha-level and will only be honored
                                      by components that enable the WindowsHostProcessContainers
                                      feature flag. Setting this field without the
                                      feature flag will result in errors when validating
                                      the Pod. All of a Pod's containers must have
                                      the same effective HostProcess value (it is
                                      not allowed to have a mix of HostProcess containers
                                      and non-HostProcess containers).  In addition,
                                      if HostProcess is true then HostNetwork must
                                      also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                          serviceAccountName:
                            type: string
                          serviceAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          tolerations:
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                required:
                - spec
                type: object
            served: true
            storage: true
            subresources: {}
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: redis.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: redis
            plural: redis
            singular: redis
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      clusterSelectors:
                        description: |
                          List of key:value pairs to use as cluster selectors when scheduling
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      size:
                        default: small
                        description: |
                          Size of this Redis deployment. If small, it deploy redis with a single replica; if large, deploy redis with 3 replicas.
                        pattern: ^(small|large)$
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - syntasso/demo-redis-request-pipeline:v0.1.0
    status: {}
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      name: slack
      namespace: default
    spec:
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: slacks.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: slack
            plural: slacks
            singular: slack
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      message:
                        description: |
                          The message to be sent
                        type: string
                    required:
                    - message
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - ghcr.io/syntasso/kratix-marketplace/slack-request-pipeline:v0.1.0
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: slack-default-promise-pipeline-credentials
    rules:
    - apiGroups:
      - ""
      resourceNames:
      - slack-channel-hook
      resources:
      - secrets
      verbs:
      - get
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: slack-default-promise-pipeline-credentials
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: slack-default-promise-pipeline-credentials
    subjects:
    - kind: ServiceAccount
      name: slack-default-promise-pipeline
      namespace: default
  xaasCrd:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: apps.example.promise.syntasso.io
    spec:
      group: example.promise.syntasso.io
      names:
        kind: app
        plural: apps
        singular: app
      scope: Namespaced
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            properties:
              spec:
                properties:
                  containsCreditCardData:
                    default: false
                    description: presence of customer credit card information
                    type: boolean
                  dbDriver:
                    default: none
                    description: database deployed with application
                    enum:
                    - postgres
                    - none
                    type: string
                  image:
                    description: container image for application that will be deployed
                    example: gcr.io/syntasso/great-app
                    type: string
                  name:
                    type: string
                required:
                - name
                - image
                type: object
            type: object
        served: true
        storage: true
  xaasRequestPipeline:
  - syntasso/demo-app-as-a-service-request-pipeline:v0.1.0
status: {}
