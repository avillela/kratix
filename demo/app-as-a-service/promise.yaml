apiVersion: platform.kratix.io/v1alpha1
kind: Promise
metadata:
  creationTimestamp: null
  name: app-as-a-service
  namespace: default
spec:
  clusterSelector:
    environment: platform
  workerClusterResources:
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      name: deployment
      namespace: default
    spec:
      clusterSelector:
        environment: dev
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: deployments.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: deployment
            plural: deployments
            singular: deployment
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      image:
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - syntasso/demo-deployment-request-pipeline:v0.1.1
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      creationTimestamp: null
      name: nginx-ingress
      namespace: default
    spec:
      clusterSelector:
        environment: dev
      workerClusterResources:
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.4.0
          creationTimestamp: null
          name: aplogconfs.appprotect.f5.com
        spec:
          group: appprotect.f5.com
          names:
            kind: APLogConf
            listKind: APLogConfList
            plural: aplogconfs
            singular: aplogconf
          preserveUnknownFields: false
          scope: Namespaced
          versions:
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: APLogConf is the Schema for the APLogConfs API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: APLogConfSpec defines the desired state of APLogConf
                    properties:
                      content:
                        properties:
                          escaping_characters:
                            items:
                              properties:
                                from:
                                  type: string
                                to:
                                  type: string
                              type: object
                            type: array
                          format:
                            enum:
                            - splunk
                            - arcsight
                            - default
                            - user-defined
                            - grpc
                            type: string
                          format_string:
                            type: string
                          list_delimiter:
                            type: string
                          list_prefix:
                            type: string
                          list_suffix:
                            type: string
                          max_message_size:
                            pattern: ^([1-9]|[1-5][0-9]|6[0-4])k$
                            type: string
                          max_request_size:
                            pattern: ^([1-9]|[1-9][0-9]|[1-9][0-9]{2}|1[0-9]{3}|20[1-3][0-9]|204[1-8]|any)$
                            type: string
                        type: object
                      filter:
                        properties:
                          request_type:
                            enum:
                            - all
                            - illegal
                            - blocked
                            type: string
                        type: object
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.4.0
          creationTimestamp: null
          name: appolicies.appprotect.f5.com
        spec:
          group: appprotect.f5.com
          names:
            kind: APPolicy
            listKind: APPolicyList
            plural: appolicies
            singular: appolicy
          preserveUnknownFields: false
          scope: Namespaced
          versions:
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: APPolicyConfig is the Schema for the APPolicyconfigs
                  API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: APPolicySpec defines the desired state of APPolicy
                    properties:
                      modifications:
                        items:
                          properties:
                            action:
                              type: string
                            description:
                              type: string
                            entity:
                              properties:
                                name:
                                  type: string
                              type: object
                            entityChanges:
                              properties:
                                type:
                                  type: string
                              type: object
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      modificationsReference:
                        properties:
                          link:
                            pattern: ^http
                            type: string
                        type: object
                      policy:
                        description: Defines the App Protect policy
                        properties:
                          applicationLanguage:
                            enum:
                            - iso-8859-10
                            - iso-8859-6
                            - windows-1255
                            - auto-detect
                            - koi8-r
                            - gb18030
                            - iso-8859-8
                            - windows-1250
                            - iso-8859-9
                            - windows-1252
                            - iso-8859-16
                            - gb2312
                            - iso-8859-2
                            - iso-8859-5
                            - windows-1257
                            - windows-1256
                            - iso-8859-13
                            - windows-874
                            - windows-1253
                            - iso-8859-3
                            - euc-jp
                            - utf-8
                            - gbk
                            - windows-1251
                            - big5
                            - iso-8859-1
                            - shift_jis
                            - euc-kr
                            - iso-8859-4
                            - iso-8859-7
                            - iso-8859-15
                            type: string
                          blocking-settings:
                            properties:
                              evasions:
                                items:
                                  properties:
                                    description:
                                      enum:
                                      - '%u decoding'
                                      - Apache whitespace
                                      - Bad unescape
                                      - Bare byte decoding
                                      - Directory traversals
                                      - IIS backslashes
                                      - IIS Unicode codepoints
                                      - Multiple decoding
                                      type: string
                                    enabled:
                                      type: boolean
                                    maxDecodingPasses:
                                      type: integer
                                  type: object
                                type: array
                              http-protocols:
                                items:
                                  properties:
                                    description:
                                      enum:
                                      - Unescaped space in URL
                                      - Unparsable request content
                                      - Several Content-Length headers
                                      - 'POST request with Content-Length: 0'
                                      - Null in request
                                      - No Host header in HTTP/1.1 request
                                      - Multiple host headers
                                      - Host header contains IP address
                                      - High ASCII characters in headers
                                      - Header name with no header value
                                      - CRLF characters before request start
                                      - Content length should be a positive number
                                      - Chunked request with Content-Length header
                                      - Check maximum number of parameters
                                      - Check maximum number of headers
                                      - Body in GET or HEAD requests
                                      - Bad multipart/form-data request parsing
                                      - Bad multipart parameters parsing
                                      - Bad HTTP version
                                      - Bad host header value
                                      type: string
                                    enabled:
                                      type: boolean
                                    maxHeaders:
                                      type: integer
                                    maxParams:
                                      type: integer
                                  type: object
                                type: array
                              violations:
                                items:
                                  properties:
                                    alarm:
                                      type: boolean
                                    block:
                                      type: boolean
                                    description:
                                      type: string
                                    name:
                                      enum:
                                      - VIOL_GRPC_FORMAT
                                      - VIOL_GRPC_MALFORMED
                                      - VIOL_GRPC_METHOD
                                      - VIOL_PARAMETER_ARRAY_VALUE
                                      - VIOL_PARAMETER_VALUE_REGEXP
                                      - VIOL_CSRF
                                      - VIOL_PARAMETER_VALUE_BASE64
                                      - VIOL_MANDATORY_HEADER
                                      - VIOL_HEADER_REPEATED
                                      - VIOL_ASM_COOKIE_MODIFIED
                                      - VIOL_BLACKLISTED_IP
                                      - VIOL_COOKIE_EXPIRED
                                      - VIOL_COOKIE_LENGTH
                                      - VIOL_COOKIE_MALFORMED
                                      - VIOL_COOKIE_MODIFIED
                                      - VIOL_DATA_GUARD
                                      - VIOL_ENCODING
                                      - VIOL_EVASION
                                      - VIOL_FILETYPE
                                      - VIOL_FILE_UPLOAD
                                      - VIOL_FILE_UPLOAD_IN_BODY
                                      - VIOL_HEADER_LENGTH
                                      - VIOL_HEADER_METACHAR
                                      - VIOL_HTTP_PROTOCOL
                                      - VIOL_HTTP_RESPONSE_STATUS
                                      - VIOL_JSON_FORMAT
                                      - VIOL_JSON_MALFORMED
                                      - VIOL_JSON_SCHEMA
                                      - VIOL_MANDATORY_PARAMETER
                                      - VIOL_MANDATORY_REQUEST_BODY
                                      - VIOL_METHOD
                                      - VIOL_PARAMETER
                                      - VIOL_PARAMETER_DATA_TYPE
                                      - VIOL_PARAMETER_EMPTY_VALUE
                                      - VIOL_PARAMETER_LOCATION
                                      - VIOL_PARAMETER_MULTIPART_NULL_VALUE
                                      - VIOL_PARAMETER_NAME_METACHAR
                                      - VIOL_PARAMETER_NUMERIC_VALUE
                                      - VIOL_PARAMETER_REPEATED
                                      - VIOL_PARAMETER_STATIC_VALUE
                                      - VIOL_PARAMETER_VALUE_LENGTH
                                      - VIOL_PARAMETER_VALUE_METACHAR
                                      - VIOL_POST_DATA_LENGTH
                                      - VIOL_QUERY_STRING_LENGTH
                                      - VIOL_RATING_THREAT
                                      - VIOL_RATING_NEED_EXAMINATION
                                      - VIOL_REQUEST_MAX_LENGTH
                                      - VIOL_REQUEST_LENGTH
                                      - VIOL_THREAT_CAMPAIGN
                                      - VIOL_URL
                                      - VIOL_URL_CONTENT_TYPE
                                      - VIOL_URL_LENGTH
                                      - VIOL_URL_METACHAR
                                      - VIOL_XML_FORMAT
                                      - VIOL_XML_MALFORMED
                                      type: string
                                  type: object
                                type: array
                            type: object
                          blockingSettingReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          bot-defense:
                            properties:
                              mitigations:
                                properties:
                                  anomalies:
                                    items:
                                      properties:
                                        $action:
                                          enum:
                                          - delete
                                          type: string
                                        action:
                                          enum:
                                          - alarm
                                          - block
                                          - default
                                          - detect
                                          - ignore
                                          type: string
                                        name:
                                          type: string
                                        scoreThreshold:
                                          pattern: '[0-9]|[1-9][0-9]|1[0-4][0-9]|150|default'
                                          type: string
                                      type: object
                                    type: array
                                  browsers:
                                    items:
                                      properties:
                                        $action:
                                          enum:
                                          - delete
                                          type: string
                                        action:
                                          enum:
                                          - alarm
                                          - block
                                          - detect
                                          type: string
                                        browserDefinition:
                                          properties:
                                            $action:
                                              enum:
                                              - delete
                                              type: string
                                            isUserDefined:
                                              type: boolean
                                            matchRegex:
                                              type: string
                                            matchString:
                                              type: string
                                            name:
                                              type: string
                                          type: object
                                        maxVersion:
                                          maximum: 2147483647
                                          minimum: 0
                                          type: integer
                                        minVersion:
                                          maximum: 2147483647
                                          minimum: 0
                                          type: integer
                                        name:
                                          type: string
                                      type: object
                                    type: array
                                  classes:
                                    items:
                                      properties:
                                        action:
                                          enum:
                                          - alarm
                                          - block
                                          - detect
                                          - ignore
                                          type: string
                                        name:
                                          enum:
                                          - browser
                                          - malicious-bot
                                          - suspicious-browser
                                          - trusted-bot
                                          - unknown
                                          - untrusted-bot
                                          type: string
                                      type: object
                                    type: array
                                  signatures:
                                    items:
                                      properties:
                                        $action:
                                          enum:
                                          - delete
                                          type: string
                                        action:
                                          enum:
                                          - alarm
                                          - block
                                          - detect
                                          - ignore
                                          type: string
                                        name:
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              settings:
                                properties:
                                  isEnabled:
                                    type: boolean
                                type: object
                            type: object
                          browser-definitions:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                isUserDefined:
                                  type: boolean
                                matchRegex:
                                  type: string
                                matchString:
                                  type: string
                                name:
                                  type: string
                              type: object
                            type: array
                          caseInsensitive:
                            type: boolean
                          character-sets:
                            items:
                              properties:
                                characterSet:
                                  items:
                                    properties:
                                      isAllowed:
                                        type: boolean
                                      metachar:
                                        type: string
                                    type: object
                                  type: array
                                characterSetType:
                                  enum:
                                  - gwt-content
                                  - header
                                  - json-content
                                  - parameter-name
                                  - parameter-value
                                  - plain-text-content
                                  - url
                                  - xml-content
                                  type: string
                              type: object
                            type: array
                          characterSetReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          cookie-settings:
                            properties:
                              maximumCookieHeaderLength:
                                pattern: any|\d+
                                type: string
                            type: object
                          cookieReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          cookieSettingsReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          cookies:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                accessibleOnlyThroughTheHttpProtocol:
                                  type: boolean
                                attackSignaturesCheck:
                                  type: boolean
                                decodeValueAsBase64:
                                  enum:
                                  - enabled
                                  - disabled
                                  - required
                                  type: string
                                enforcementType:
                                  type: string
                                insertSameSiteAttribute:
                                  enum:
                                  - lax
                                  - none
                                  - none-value
                                  - strict
                                  type: string
                                name:
                                  type: string
                                securedOverHttpsConnection:
                                  type: boolean
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                                type:
                                  enum:
                                  - explicit
                                  - wildcard
                                  type: string
                                wildcardOrder:
                                  type: integer
                              type: object
                            type: array
                          csrf-protection:
                            properties:
                              enabled:
                                type: boolean
                              expirationTimeInSeconds:
                                pattern: disabled|\d+
                                type: string
                              sslOnly:
                                type: boolean
                            type: object
                          csrf-urls:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                enforcementAction:
                                  enum:
                                  - verify-origin
                                  - none
                                  type: string
                                method:
                                  enum:
                                  - GET
                                  - POST
                                  - any
                                  type: string
                                url:
                                  type: string
                                wildcardOrder:
                                  type: integer
                              type: object
                            type: array
                          data-guard:
                            properties:
                              creditCardNumbers:
                                type: boolean
                              enabled:
                                type: boolean
                              enforcementMode:
                                enum:
                                - ignore-urls-in-list
                                - enforce-urls-in-list
                                type: string
                              enforcementUrls:
                                items:
                                  type: string
                                type: array
                              lastCcnDigitsToExpose:
                                type: integer
                              lastSsnDigitsToExpose:
                                type: integer
                              maskData:
                                type: boolean
                              usSocialSecurityNumbers:
                                type: boolean
                            type: object
                          dataGuardReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          description:
                            type: string
                          enablePassiveMode:
                            type: boolean
                          enforcementMode:
                            enum:
                            - transparent
                            - blocking
                            type: string
                          enforcer-settings:
                            properties:
                              enforcerStateCookies:
                                properties:
                                  httpOnlyAttribute:
                                    type: boolean
                                  sameSiteAttribute:
                                    enum:
                                    - lax
                                    - none
                                    - none-value
                                    - strict
                                    type: string
                                  secureAttribute:
                                    enum:
                                    - always
                                    - never
                                    type: string
                                type: object
                            type: object
                          filetypeReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          filetypes:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                allowed:
                                  type: boolean
                                checkPostDataLength:
                                  type: boolean
                                checkQueryStringLength:
                                  type: boolean
                                checkRequestLength:
                                  type: boolean
                                checkUrlLength:
                                  type: boolean
                                name:
                                  type: string
                                postDataLength:
                                  type: integer
                                queryStringLength:
                                  type: integer
                                requestLength:
                                  type: integer
                                responseCheck:
                                  type: boolean
                                type:
                                  enum:
                                  - explicit
                                  - wildcard
                                  type: string
                                urlLength:
                                  type: integer
                                wildcardOrder:
                                  type: integer
                              type: object
                            type: array
                          fullPath:
                            type: string
                          general:
                            properties:
                              allowedResponseCodes:
                                items:
                                  format: int32
                                  maximum: 999
                                  minimum: 100
                                  type: integer
                                type: array
                              customXffHeaders:
                                items:
                                  type: string
                                type: array
                              maskCreditCardNumbersInRequest:
                                type: boolean
                              trustXff:
                                type: boolean
                            type: object
                          generalReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          grpc-profiles:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                associateUrls:
                                  type: boolean
                                attackSignaturesCheck:
                                  type: boolean
                                defenseAttributes:
                                  properties:
                                    allowUnknownFields:
                                      type: boolean
                                    maximumDataLength:
                                      pattern: any|\d+
                                      type: string
                                  type: object
                                description:
                                  type: string
                                hasIdlFiles:
                                  type: boolean
                                idlFiles:
                                  items:
                                    properties:
                                      idlFile:
                                        properties:
                                          contents:
                                            type: string
                                          fileName:
                                            type: string
                                          isBase64:
                                            type: boolean
                                        type: object
                                      importUrl:
                                        type: string
                                      isPrimary:
                                        type: boolean
                                      primaryIdlFileName:
                                        type: string
                                    type: object
                                  type: array
                                metacharElementCheck:
                                  type: boolean
                                name:
                                  type: string
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            type: array
                          header-settings:
                            properties:
                              maximumHttpHeaderLength:
                                pattern: any|\d+
                                type: string
                            type: object
                          headerReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          headerSettingsReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          headers:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                allowRepeatedOccurrences:
                                  type: boolean
                                base64Decoding:
                                  type: boolean
                                checkSignatures:
                                  type: boolean
                                decodeValueAsBase64:
                                  enum:
                                  - enabled
                                  - disabled
                                  - required
                                  type: string
                                htmlNormalization:
                                  type: boolean
                                mandatory:
                                  type: boolean
                                maskValueInLogs:
                                  type: boolean
                                name:
                                  type: string
                                normalizationViolations:
                                  type: boolean
                                percentDecoding:
                                  type: boolean
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                                type:
                                  enum:
                                  - explicit
                                  - wildcard
                                  type: string
                                urlNormalization:
                                  type: boolean
                                wildcardOrder:
                                  type: integer
                              type: object
                            type: array
                          host-names:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                includeSubdomains:
                                  type: boolean
                                name:
                                  type: string
                              type: object
                            type: array
                          idl-files:
                            items:
                              properties:
                                contents:
                                  type: string
                                fileName:
                                  type: string
                                isBase64:
                                  type: boolean
                              type: object
                            type: array
                          json-profiles:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                attackSignaturesCheck:
                                  type: boolean
                                defenseAttributes:
                                  properties:
                                    maximumArrayLength:
                                      pattern: any|\d+
                                      type: string
                                    maximumStructureDepth:
                                      pattern: any|\d+
                                      type: string
                                    maximumTotalLengthOfJSONData:
                                      pattern: any|\d+
                                      type: string
                                    maximumValueLength:
                                      pattern: any|\d+
                                      type: string
                                    tolerateJSONParsingWarnings:
                                      type: boolean
                                  type: object
                                description:
                                  type: string
                                handleJsonValuesAsParameters:
                                  type: boolean
                                hasValidationFiles:
                                  type: boolean
                                metacharOverrides:
                                  items:
                                    properties:
                                      isAllowed:
                                        type: boolean
                                      metachar:
                                        type: string
                                    type: object
                                  type: array
                                name:
                                  type: string
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                                validationFiles:
                                  items:
                                    properties:
                                      importUrl:
                                        type: string
                                      isPrimary:
                                        type: boolean
                                      jsonValidationFile:
                                        properties:
                                          $action:
                                            enum:
                                            - delete
                                            type: string
                                          contents:
                                            type: string
                                          fileName:
                                            type: string
                                          isBase64:
                                            type: boolean
                                        type: object
                                    type: object
                                  type: array
                              type: object
                            type: array
                          json-validation-files:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                contents:
                                  type: string
                                fileName:
                                  type: string
                                isBase64:
                                  type: boolean
                              type: object
                            type: array
                          jsonProfileReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          jsonValidationFileReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          methodReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          methods:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                name:
                                  type: string
                              type: object
                            type: array
                          name:
                            type: string
                          open-api-files:
                            items:
                              properties:
                                link:
                                  pattern: ^http
                                  type: string
                              type: object
                            type: array
                          parameterReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          parameters:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                allowEmptyValue:
                                  type: boolean
                                allowRepeatedParameterName:
                                  type: boolean
                                arraySerializationFormat:
                                  enum:
                                  - csv
                                  - form
                                  - label
                                  - matrix
                                  - multi
                                  - multipart
                                  - pipe
                                  - ssv
                                  - tsv
                                  type: string
                                attackSignaturesCheck:
                                  type: boolean
                                checkMaxValue:
                                  type: boolean
                                checkMaxValueLength:
                                  type: boolean
                                checkMetachars:
                                  type: boolean
                                checkMinValue:
                                  type: boolean
                                checkMinValueLength:
                                  type: boolean
                                checkMultipleOfValue:
                                  type: boolean
                                contentProfile:
                                  properties:
                                    name:
                                      type: string
                                  type: object
                                dataType:
                                  enum:
                                  - alpha-numeric
                                  - binary
                                  - boolean
                                  - decimal
                                  - email
                                  - integer
                                  - none
                                  - phone
                                  type: string
                                decodeValueAsBase64:
                                  enum:
                                  - enabled
                                  - disabled
                                  - required
                                  type: string
                                disallowFileUploadOfExecutables:
                                  type: boolean
                                enableRegularExpression:
                                  type: boolean
                                exclusiveMax:
                                  type: boolean
                                exclusiveMin:
                                  type: boolean
                                isBase64:
                                  type: boolean
                                isCookie:
                                  type: boolean
                                isHeader:
                                  type: boolean
                                level:
                                  enum:
                                  - global
                                  - url
                                  type: string
                                mandatory:
                                  type: boolean
                                maximumLength:
                                  type: integer
                                maximumValue:
                                  type: integer
                                metacharsOnParameterValueCheck:
                                  type: boolean
                                minimumLength:
                                  type: integer
                                minimumValue:
                                  type: integer
                                multipleOf:
                                  type: integer
                                name:
                                  type: string
                                nameMetacharOverrides:
                                  items:
                                    properties:
                                      isAllowed:
                                        type: boolean
                                      metachar:
                                        type: string
                                    type: object
                                  type: array
                                objectSerializationStyle:
                                  type: string
                                parameterEnumValues:
                                  items:
                                    type: string
                                  type: array
                                parameterLocation:
                                  enum:
                                  - any
                                  - cookie
                                  - form-data
                                  - header
                                  - path
                                  - query
                                  type: string
                                regularExpression:
                                  type: string
                                sensitiveParameter:
                                  type: boolean
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                                staticValues:
                                  type: string
                                type:
                                  enum:
                                  - explicit
                                  - wildcard
                                  type: string
                                url:
                                  type: object
                                valueMetacharOverrides:
                                  items:
                                    properties:
                                      isAllowed:
                                        type: boolean
                                      metachar:
                                        type: string
                                    type: object
                                  type: array
                                valueType:
                                  enum:
                                  - array
                                  - auto-detect
                                  - dynamic-content
                                  - dynamic-parameter-name
                                  - ignore
                                  - json
                                  - object
                                  - openapi-array
                                  - static-content
                                  - user-input
                                  - xml
                                  type: string
                                wildcardOrder:
                                  type: integer
                              type: object
                            type: array
                          response-pages:
                            items:
                              properties:
                                ajaxActionType:
                                  enum:
                                  - alert-popup
                                  - custom
                                  - redirect
                                  type: string
                                ajaxCustomContent:
                                  type: string
                                ajaxEnabled:
                                  type: boolean
                                ajaxPopupMessage:
                                  type: string
                                ajaxRedirectUrl:
                                  type: string
                                grpcStatusCode:
                                  pattern: ABORTED|ALREADY_EXISTS|CANCELLED|DATA_LOSS|DEADLINE_EXCEEDED|FAILED_PRECONDITION|INTERNAL|INVALID_ARGUMENT|NOT_FOUND|OK|OUT_OF_RANGE|PERMISSION_DENIED|RESOURCE_EXHAUSTED|UNAUTHENTICATED|UNAVAILABLE|UNIMPLEMENTED|UNKNOWN|d+
                                  type: string
                                grpcStatusMessage:
                                  type: string
                                responseActionType:
                                  enum:
                                  - custom
                                  - default
                                  - erase-cookies
                                  - redirect
                                  - soap-fault
                                  type: string
                                responseContent:
                                  type: string
                                responseHeader:
                                  type: string
                                responsePageType:
                                  enum:
                                  - ajax
                                  - ajax-login
                                  - captcha
                                  - captcha-fail
                                  - default
                                  - failed-login-honeypot
                                  - failed-login-honeypot-ajax
                                  - hijack
                                  - leaked-credentials
                                  - leaked-credentials-ajax
                                  - mobile
                                  - persistent-flow
                                  - xml
                                  - grpc
                                  type: string
                                responseRedirectUrl:
                                  type: string
                              type: object
                            type: array
                          responsePageReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          sensitive-parameters:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                name:
                                  type: string
                              type: object
                            type: array
                          sensitiveParameterReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          server-technologies:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                serverTechnologyName:
                                  enum:
                                  - Jenkins
                                  - SharePoint
                                  - Oracle Application Server
                                  - Python
                                  - Oracle Identity Manager
                                  - Spring Boot
                                  - CouchDB
                                  - SQLite
                                  - Handlebars
                                  - Mustache
                                  - Prototype
                                  - Zend
                                  - Redis
                                  - Underscore.js
                                  - Ember.js
                                  - ZURB Foundation
                                  - ef.js
                                  - Vue.js
                                  - UIKit
                                  - TYPO3 CMS
                                  - RequireJS
                                  - React
                                  - MooTools
                                  - Laravel
                                  - GraphQL
                                  - Google Web Toolkit
                                  - Express.js
                                  - CodeIgniter
                                  - Backbone.js
                                  - AngularJS
                                  - JavaScript
                                  - Nginx
                                  - Jetty
                                  - Joomla
                                  - JavaServer Faces (JSF)
                                  - Ruby
                                  - MongoDB
                                  - Django
                                  - Node.js
                                  - Citrix
                                  - JBoss
                                  - Elasticsearch
                                  - Apache Struts
                                  - XML
                                  - PostgreSQL
                                  - IBM DB2
                                  - Sybase/ASE
                                  - CGI
                                  - Proxy Servers
                                  - SSI (Server Side Includes)
                                  - Cisco
                                  - Novell
                                  - Macromedia JRun
                                  - BEA Systems WebLogic Server
                                  - Lotus Domino
                                  - MySQL
                                  - Oracle
                                  - Microsoft SQL Server
                                  - PHP
                                  - Outlook Web Access
                                  - Apache/NCSA HTTP Server
                                  - Apache Tomcat
                                  - WordPress
                                  - Macromedia ColdFusion
                                  - Unix/Linux
                                  - Microsoft Windows
                                  - ASP.NET
                                  - Front Page Server Extensions (FPSE)
                                  - IIS
                                  - WebDAV
                                  - ASP
                                  - Java Servlets/JSP
                                  - jQuery
                                  type: string
                              type: object
                            type: array
                          serverTechnologyReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          signature-requirements:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                tag:
                                  type: string
                              type: object
                            type: array
                          signature-sets:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                alarm:
                                  type: boolean
                                block:
                                  type: boolean
                                name:
                                  type: string
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                          signature-settings:
                            properties:
                              attackSignatureFalsePositiveMode:
                                enum:
                                - detect
                                - detect-and-allow
                                - disabled
                                type: string
                              minimumAccuracyForAutoAddedSignatures:
                                enum:
                                - high
                                - low
                                - medium
                                type: string
                            type: object
                          signatureReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          signatureSetReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          signatureSettingReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          signatures:
                            items:
                              properties:
                                enabled:
                                  type: boolean
                                name:
                                  type: string
                                signatureId:
                                  type: integer
                                tag:
                                  type: string
                              type: object
                            type: array
                          softwareVersion:
                            type: string
                          template:
                            properties:
                              name:
                                type: string
                            type: object
                          threat-campaigns:
                            items:
                              properties:
                                isEnabled:
                                  type: boolean
                                name:
                                  type: string
                              type: object
                            type: array
                          threatCampaignReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          urlReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          urls:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                allowRenderingInFrames:
                                  enum:
                                  - never
                                  - only-same
                                  type: string
                                allowRenderingInFramesOnlyFrom:
                                  type: string
                                attackSignaturesCheck:
                                  type: boolean
                                clickjackingProtection:
                                  type: boolean
                                description:
                                  type: string
                                disallowFileUploadOfExecutables:
                                  type: boolean
                                html5CrossOriginRequestsEnforcement:
                                  properties:
                                    allowOriginsEnforcementMode:
                                      enum:
                                      - replace-with
                                      - unmodified
                                      type: string
                                    checkAllowedMethods:
                                      type: boolean
                                    crossDomainAllowedOrigin:
                                      items:
                                        properties:
                                          includeSubDomains:
                                            type: boolean
                                          originName:
                                            type: string
                                          originPort:
                                            pattern: any|\d+
                                            type: string
                                          originProtocol:
                                            enum:
                                            - http
                                            - http/https
                                            - https
                                            type: string
                                        type: object
                                      type: array
                                    enforcementMode:
                                      enum:
                                      - disabled
                                      - enforce
                                      type: string
                                  type: object
                                isAllowed:
                                  type: boolean
                                mandatoryBody:
                                  type: boolean
                                metacharOverrides:
                                  items:
                                    properties:
                                      isAllowed:
                                        type: boolean
                                      metachar:
                                        type: string
                                    type: object
                                  type: array
                                metacharsOnUrlCheck:
                                  type: boolean
                                method:
                                  enum:
                                  - ACL
                                  - BCOPY
                                  - BDELETE
                                  - BMOVE
                                  - BPROPFIND
                                  - BPROPPATCH
                                  - CHECKIN
                                  - CHECKOUT
                                  - CONNECT
                                  - COPY
                                  - DELETE
                                  - GET
                                  - HEAD
                                  - LINK
                                  - LOCK
                                  - MERGE
                                  - MKCOL
                                  - MKWORKSPACE
                                  - MOVE
                                  - NOTIFY
                                  - OPTIONS
                                  - PATCH
                                  - POLL
                                  - POST
                                  - PROPFIND
                                  - PROPPATCH
                                  - PUT
                                  - REPORT
                                  - RPC_IN_DATA
                                  - RPC_OUT_DATA
                                  - SEARCH
                                  - SUBSCRIBE
                                  - TRACE
                                  - TRACK
                                  - UNLINK
                                  - UNLOCK
                                  - UNSUBSCRIBE
                                  - VERSION_CONTROL
                                  - X-MS-ENUMATTS
                                  - '*'
                                  type: string
                                methodOverrides:
                                  items:
                                    properties:
                                      allowed:
                                        type: boolean
                                      method:
                                        enum:
                                        - ACL
                                        - BCOPY
                                        - BDELETE
                                        - BMOVE
                                        - BPROPFIND
                                        - BPROPPATCH
                                        - CHECKIN
                                        - CHECKOUT
                                        - CONNECT
                                        - COPY
                                        - DELETE
                                        - GET
                                        - HEAD
                                        - LINK
                                        - LOCK
                                        - MERGE
                                        - MKCOL
                                        - MKWORKSPACE
                                        - MOVE
                                        - NOTIFY
                                        - OPTIONS
                                        - PATCH
                                        - POLL
                                        - POST
                                        - PROPFIND
                                        - PROPPATCH
                                        - PUT
                                        - REPORT
                                        - RPC_IN_DATA
                                        - RPC_OUT_DATA
                                        - SEARCH
                                        - SUBSCRIBE
                                        - TRACE
                                        - TRACK
                                        - UNLINK
                                        - UNLOCK
                                        - UNSUBSCRIBE
                                        - VERSION_CONTROL
                                        - X-MS-ENUMATTS
                                        type: string
                                    type: object
                                  type: array
                                methodsOverrideOnUrlCheck:
                                  type: boolean
                                name:
                                  type: string
                                operationId:
                                  type: string
                                positionalParameters:
                                  items:
                                    properties:
                                      parameter:
                                        properties:
                                          $action:
                                            enum:
                                            - delete
                                            type: string
                                          allowEmptyValue:
                                            type: boolean
                                          allowRepeatedParameterName:
                                            type: boolean
                                          arraySerializationFormat:
                                            enum:
                                            - csv
                                            - form
                                            - label
                                            - matrix
                                            - multi
                                            - multipart
                                            - pipe
                                            - ssv
                                            - tsv
                                            type: string
                                          attackSignaturesCheck:
                                            type: boolean
                                          checkMaxValue:
                                            type: boolean
                                          checkMaxValueLength:
                                            type: boolean
                                          checkMetachars:
                                            type: boolean
                                          checkMinValue:
                                            type: boolean
                                          checkMinValueLength:
                                            type: boolean
                                          checkMultipleOfValue:
                                            type: boolean
                                          contentProfile:
                                            properties:
                                              name:
                                                type: string
                                            type: object
                                          dataType:
                                            enum:
                                            - alpha-numeric
                                            - binary
                                            - boolean
                                            - decimal
                                            - email
                                            - integer
                                            - none
                                            - phone
                                            type: string
                                          decodeValueAsBase64:
                                            enum:
                                            - enabled
                                            - disabled
                                            - required
                                            type: string
                                          disallowFileUploadOfExecutables:
                                            type: boolean
                                          enableRegularExpression:
                                            type: boolean
                                          exclusiveMax:
                                            type: boolean
                                          exclusiveMin:
                                            type: boolean
                                          isBase64:
                                            type: boolean
                                          isCookie:
                                            type: boolean
                                          isHeader:
                                            type: boolean
                                          level:
                                            enum:
                                            - global
                                            - url
                                            type: string
                                          mandatory:
                                            type: boolean
                                          maximumLength:
                                            type: integer
                                          maximumValue:
                                            type: integer
                                          metacharsOnParameterValueCheck:
                                            type: boolean
                                          minimumLength:
                                            type: integer
                                          minimumValue:
                                            type: integer
                                          multipleOf:
                                            type: integer
                                          name:
                                            type: string
                                          nameMetacharOverrides:
                                            items:
                                              properties:
                                                isAllowed:
                                                  type: boolean
                                                metachar:
                                                  type: string
                                              type: object
                                            type: array
                                          objectSerializationStyle:
                                            type: string
                                          parameterEnumValues:
                                            items:
                                              type: string
                                            type: array
                                          parameterLocation:
                                            enum:
                                            - any
                                            - cookie
                                            - form-data
                                            - header
                                            - path
                                            - query
                                            type: string
                                          regularExpression:
                                            type: string
                                          sensitiveParameter:
                                            type: boolean
                                          signatureOverrides:
                                            items:
                                              properties:
                                                enabled:
                                                  type: boolean
                                                name:
                                                  type: string
                                                signatureId:
                                                  type: integer
                                                tag:
                                                  type: string
                                              type: object
                                            type: array
                                          staticValues:
                                            type: string
                                          type:
                                            enum:
                                            - explicit
                                            - wildcard
                                            type: string
                                          url:
                                            type: object
                                          valueMetacharOverrides:
                                            items:
                                              properties:
                                                isAllowed:
                                                  type: boolean
                                                metachar:
                                                  type: string
                                              type: object
                                            type: array
                                          valueType:
                                            enum:
                                            - array
                                            - auto-detect
                                            - dynamic-content
                                            - dynamic-parameter-name
                                            - ignore
                                            - json
                                            - object
                                            - openapi-array
                                            - static-content
                                            - user-input
                                            - xml
                                            type: string
                                          wildcardOrder:
                                            type: integer
                                        type: object
                                      urlSegmentIndex:
                                        type: integer
                                    type: object
                                  type: array
                                protocol:
                                  enum:
                                  - http
                                  - https
                                  type: string
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                                type:
                                  enum:
                                  - explicit
                                  - wildcard
                                  type: string
                                urlContentProfiles:
                                  items:
                                    properties:
                                      contentProfile:
                                        properties:
                                          name:
                                            type: string
                                        type: object
                                      headerName:
                                        type: string
                                      headerOrder:
                                        type: string
                                      headerValue:
                                        type: string
                                      name:
                                        type: string
                                      type:
                                        enum:
                                        - apply-content-signatures
                                        - apply-value-and-content-signatures
                                        - disallow
                                        - do-nothing
                                        - form-data
                                        - gwt
                                        - json
                                        - xml
                                        - grpc
                                        type: string
                                    type: object
                                  type: array
                                wildcardOrder:
                                  type: integer
                              type: object
                            type: array
                          whitelist-ips:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                blockRequests:
                                  enum:
                                  - always
                                  - never
                                  - policy-default
                                  type: string
                                ipAddress:
                                  pattern: '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
                                  type: string
                                ipMask:
                                  pattern: '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
                                  type: string
                                neverLogRequests:
                                  type: boolean
                              type: object
                            type: array
                          whitelistIpReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          xml-profiles:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                attackSignaturesCheck:
                                  type: boolean
                                defenseAttributes:
                                  properties:
                                    allowCDATA:
                                      type: boolean
                                    allowDTDs:
                                      type: boolean
                                    allowExternalReferences:
                                      type: boolean
                                    allowProcessingInstructions:
                                      type: boolean
                                    maximumAttributeValueLength:
                                      pattern: any|\d+
                                      type: string
                                    maximumAttributesPerElement:
                                      pattern: any|\d+
                                      type: string
                                    maximumChildrenPerElement:
                                      pattern: any|\d+
                                      type: string
                                    maximumDocumentDepth:
                                      pattern: any|\d+
                                      type: string
                                    maximumDocumentSize:
                                      pattern: any|\d+
                                      type: string
                                    maximumElements:
                                      pattern: any|\d+
                                      type: string
                                    maximumNSDeclarations:
                                      pattern: any|\d+
                                      type: string
                                    maximumNameLength:
                                      pattern: any|\d+
                                      type: string
                                    maximumNamespaceLength:
                                      pattern: any|\d+
                                      type: string
                                    tolerateCloseTagShorthand:
                                      type: boolean
                                    tolerateLeadingWhiteSpace:
                                      type: boolean
                                    tolerateNumericNames:
                                      type: boolean
                                  type: object
                                description:
                                  type: string
                                enableWss:
                                  type: boolean
                                followSchemaLinks:
                                  type: boolean
                                name:
                                  type: string
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            type: array
                          xml-validation-files:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                contents:
                                  type: string
                                fileName:
                                  type: string
                                isBase64:
                                  type: boolean
                              type: object
                            type: array
                          xmlProfileReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          xmlValidationFileReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.4.0
          creationTimestamp: null
          name: apusersigs.appprotect.f5.com
        spec:
          group: appprotect.f5.com
          names:
            kind: APUserSig
            listKind: APUserSigList
            plural: apusersigs
            singular: apusersig
          preserveUnknownFields: false
          scope: Namespaced
          versions:
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: APUserSig is the Schema for the apusersigs API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: APUserSigSpec defines the desired state of APUserSig
                    properties:
                      properties:
                        type: string
                      signatures:
                        items:
                          properties:
                            accuracy:
                              enum:
                              - high
                              - medium
                              - low
                              type: string
                            attackType:
                              properties:
                                name:
                                  type: string
                              type: object
                            description:
                              type: string
                            name:
                              type: string
                            references:
                              properties:
                                type:
                                  enum:
                                  - bugtraq
                                  - cve
                                  - nessus
                                  - url
                                  type: string
                                value:
                                  type: string
                              type: object
                            risk:
                              enum:
                              - high
                              - medium
                              - low
                              type: string
                            rule:
                              type: string
                            signatureType:
                              enum:
                              - request
                              - response
                              type: string
                            systems:
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      tag:
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.9.2
          creationTimestamp: null
          name: apdoslogconfs.appprotectdos.f5.com
        spec:
          group: appprotectdos.f5.com
          names:
            kind: APDosLogConf
            listKind: APDosLogConfList
            plural: apdoslogconfs
            singular: apdoslogconf
          preserveUnknownFields: false
          scope: Namespaced
          versions:
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: APDosLogConf is the Schema for the APDosLogConfs API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: APDosLogConfSpec defines the desired state of APDosLogConf
                    properties:
                      content:
                        properties:
                          format:
                            enum:
                            - splunk
                            - arcsight
                            - user-defined
                            type: string
                          format_string:
                            type: string
                          max_message_size:
                            pattern: ^([1-9]|[1-5][0-9]|6[0-4])k$
                            type: string
                        type: object
                      filter:
                        properties:
                          attack-signatures:
                            default: top 10
                            pattern: ^(none|all|top ([1-9]|[1-9][0-9]|[1-9][0-9]{2,4}|100000))$
                            type: string
                          bad-actors:
                            default: top 10
                            pattern: ^(none|all|top ([1-9]|[1-9][0-9]|[1-9][0-9]{2,4}|100000))$
                            type: string
                          traffic-mitigation-stats:
                            default: all
                            enum:
                            - none
                            - all
                            type: string
                        type: object
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.9.2
          creationTimestamp: null
          name: apdospolicies.appprotectdos.f5.com
        spec:
          group: appprotectdos.f5.com
          names:
            kind: APDosPolicy
            listKind: APDosPoliciesList
            plural: apdospolicies
            singular: apdospolicy
          preserveUnknownFields: false
          scope: Namespaced
          versions:
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: APDosPolicy is the Schema for the APDosPolicy API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: APDosPolicySpec defines the desired state of APDosPolicy
                    properties:
                      automation_tools_detection:
                        default: "on"
                        enum:
                        - "on"
                        - "off"
                        type: string
                      bad_actors:
                        default: "on"
                        enum:
                        - "on"
                        - "off"
                        type: string
                      mitigation_mode:
                        default: standard
                        enum:
                        - standard
                        - conservative
                        - none
                        type: string
                      signatures:
                        default: "on"
                        enum:
                        - "on"
                        - "off"
                        type: string
                      tls_fingerprint:
                        default: "on"
                        enum:
                        - "on"
                        - "off"
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: dosprotectedresources.appprotectdos.f5.com
        spec:
          group: appprotectdos.f5.com
          names:
            kind: DosProtectedResource
            listKind: DosProtectedResourceList
            plural: dosprotectedresources
            shortNames:
            - pr
            singular: dosprotectedresource
          scope: Namespaced
          versions:
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: DosProtectedResource defines a Dos protected resource.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: DosProtectedResourceSpec defines the properties and
                      values a DosProtectedResource can have.
                    properties:
                      apDosMonitor:
                        description: 'ApDosMonitor is how NGINX App Protect DoS monitors
                          the stress level of the protected object. The monitor requests
                          are sent from localhost (127.0.0.1). Default value: URI
                          - None, protocol - http1, timeout - NGINX App Protect DoS
                          default.'
                        properties:
                          protocol:
                            description: Protocol determines if the server listens
                              on http1 / http2 / grpc. The default is http1.
                            enum:
                            - http1
                            - http2
                            - grpc
                            type: string
                          timeout:
                            description: Timeout determines how long (in seconds)
                              should NGINX App Protect DoS wait for a response. Default
                              is 10 seconds for http1/http2 and 5 seconds for grpc.
                            format: int64
                            type: integer
                          uri:
                            description: 'URI is the destination to the desired protected
                              object in the nginx.conf:'
                            type: string
                        type: object
                      apDosPolicy:
                        description: ApDosPolicy is the namespace/name of a ApDosPolicy
                          resource
                        type: string
                      dosAccessLogDest:
                        description: DosAccessLogDest is the network address for the
                          access logs
                        type: string
                      dosSecurityLog:
                        description: DosSecurityLog defines the security log of the
                          DosProtectedResource.
                        properties:
                          apDosLogConf:
                            description: ApDosLogConf is the namespace/name of a APDosLogConf
                              resource
                            type: string
                          dosLogDest:
                            description: DosLogDest is the network address of a logging
                              service, can be either IP or DNS name.
                            type: string
                          enable:
                            description: Enable enables the security logging feature
                              if set to true
                            type: boolean
                        type: object
                      enable:
                        description: Enable enables the DOS feature if set to true
                        type: boolean
                      name:
                        description: Name is the name of protected object, max of
                          63 characters.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: dnsendpoints.externaldns.nginx.org
        spec:
          group: externaldns.nginx.org
          names:
            kind: DNSEndpoint
            listKind: DNSEndpointList
            plural: dnsendpoints
            singular: dnsendpoint
          scope: Namespaced
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: DNSEndpoint is the CRD wrapper for Endpoint
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: DNSEndpointSpec holds information about endpoints.
                    properties:
                      endpoints:
                        items:
                          description: Endpoint describes DNS Endpoint.
                          properties:
                            dnsName:
                              description: The hostname for the DNS record
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels stores labels defined for the Endpoint
                              type: object
                            providerSpecific:
                              description: ProviderSpecific stores provider specific
                                config
                              items:
                                description: ProviderSpecificProperty represents provider
                                  specific config property.
                                properties:
                                  name:
                                    description: Name of the property
                                    type: string
                                  value:
                                    description: Value of the property
                                    type: string
                                type: object
                              type: array
                            recordTTL:
                              description: TTL for the record
                              format: int64
                              type: integer
                            recordType:
                              description: RecordType type of record, e.g. CNAME,
                                A, SRV, TXT, MX
                              type: string
                            targets:
                              description: The targets the DNS service points to
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                  status:
                    description: DNSEndpointStatus represents generation observed
                      by the external dns controller.
                    properties:
                      observedGeneration:
                        description: The generation observed by by the external-dns
                          controller.
                        format: int64
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress
          namespace: default
      - apiVersion: v1
        data:
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN2akNDQWFZQ0NRREFPRjl0THNhWFhEQU5CZ2txaGtpRzl3MEJBUXNGQURBaE1SOHdIUVlEVlFRRERCWk8KUjBsT1dFbHVaM0psYzNORGIyNTBjbTlzYkdWeU1CNFhEVEU0TURreE1qRTRNRE16TlZvWERUSXpNRGt4TVRFNApNRE16TlZvd0lURWZNQjBHQTFVRUF3d1dUa2RKVGxoSmJtZHlaWE56UTI5dWRISnZiR3hsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUwvN2hIUEtFWGRMdjNyaUM3QlBrMTNpWkt5eTlyQ08KR2xZUXYyK2EzUDF0azIrS3YwVGF5aGRCbDRrcnNUcTZzZm8vWUk1Y2Vhbkw4WGM3U1pyQkVRYm9EN2REbWs1Qgo4eDZLS2xHWU5IWlg0Rm5UZ0VPaStlM2ptTFFxRlBSY1kzVnNPazFFeUZBL0JnWlJVbkNHZUtGeERSN0tQdGhyCmtqSXVuektURXUyaDU4Tlp0S21ScUJHdDEwcTNRYzhZT3ExM2FnbmovUWRjc0ZYYTJnMjB1K1lYZDdoZ3krZksKWk4vVUkxQUQ0YzZyM1lma1ZWUmVHd1lxQVp1WXN2V0RKbW1GNWRwdEMzN011cDBPRUxVTExSakZJOTZXNXIwSAo1TmdPc25NWFJNV1hYVlpiNWRxT3R0SmRtS3FhZ25TZ1JQQVpQN2MwQjFQU2FqYzZjNGZRVXpNQ0F3RUFBVEFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWpLb2tRdGRPcEsrTzhibWVPc3lySmdJSXJycVFVY2ZOUitjb0hZVUoKdGhrYnhITFMzR3VBTWI5dm15VExPY2xxeC9aYzJPblEwMEJCLzlTb0swcitFZ1U2UlVrRWtWcitTTFA3NTdUWgozZWI4dmdPdEduMS9ienM3bzNBaS9kclkrcUI5Q2k1S3lPc3FHTG1US2xFaUtOYkcyR1ZyTWxjS0ZYQU80YTY3Cklnc1hzYktNbTQwV1U3cG9mcGltU1ZmaXFSdkV5YmN3N0NYODF6cFErUyt1eHRYK2VBZ3V0NHh3VlI5d2IyVXYKelhuZk9HbWhWNThDd1dIQnNKa0kxNXhaa2VUWXdSN0diaEFMSkZUUkk3dkhvQXprTWIzbjAxQjQyWjNrN3RXNQpJUDFmTlpIOFUvOWxiUHNoT21FRFZkdjF5ZytVRVJxbStGSis2R0oxeFJGcGZnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdi91RWM4b1JkMHUvZXVJTHNFK1RYZUprckxMMnNJNGFWaEMvYjVyYy9XMlRiNHEvClJOcktGMEdYaVN1eE9ycXgrajlnamx4NXFjdnhkenRKbXNFUkJ1Z1B0ME9hVGtIekhvb3FVWmcwZGxmZ1dkT0EKUTZMNTdlT1l0Q29VOUZ4amRXdzZUVVRJVUQ4R0JsRlNjSVo0b1hFTkhzbysyR3VTTWk2Zk1wTVM3YUhudzFtMApxWkdvRWEzWFNyZEJ6eGc2clhkcUNlUDlCMXl3VmRyYURiUzc1aGQzdUdETDU4cGszOVFqVUFQaHpxdmRoK1JWClZGNGJCaW9CbTVpeTlZTW1hWVhsMm0wTGZzeTZuUTRRdFFzdEdNVWozcGJtdlFmazJBNnljeGRFeFpkZFZsdmwKMm82MjBsMllxcHFDZEtCRThCay90elFIVTlKcU56cHpoOUJUTXdJREFRQUJBb0lCQVFDZklHbXowOHhRVmorNwpLZnZJUXQwQ0YzR2MxNld6eDhVNml4MHg4Mm15d1kxUUNlL3BzWE9LZlRxT1h1SENyUlp5TnUvZ2IvUUQ4bUFOCmxOMjRZTWl0TWRJODg5TEZoTkp3QU5OODJDeTczckM5bzVvUDlkazAvYzRIbjAzSkVYNzZ5QjgzQm9rR1FvYksKMjhMNk0rdHUzUmFqNjd6Vmc2d2szaEhrU0pXSzBwV1YrSjdrUkRWYmhDYUZhNk5nMUZNRWxhTlozVDhhUUtyQgpDUDNDeEFTdjYxWTk5TEI4KzNXWVFIK3NYaTVGM01pYVNBZ1BkQUk3WEh1dXFET1lvMU5PL0JoSGt1aVg2QnRtCnorNTZud2pZMy8yUytSRmNBc3JMTnIwMDJZZi9oY0IraVlDNzVWYmcydVd6WTY3TWdOTGQ5VW9RU3BDRkYrVm4KM0cyUnhybnhBb0dCQU40U3M0ZVlPU2huMVpQQjdhTUZsY0k2RHR2S2ErTGZTTXFyY2pOZjJlSEpZNnhubmxKdgpGenpGL2RiVWVTbWxSekR0WkdlcXZXaHFISy9iTjIyeWJhOU1WMDlRQ0JFTk5jNmtWajJTVHpUWkJVbEx4QzYrCk93Z0wyZHhKendWelU0VC84ajdHalRUN05BZVpFS2FvRHFyRG5BYWkyaW5oZU1JVWZHRXFGKzJyQW9HQkFOMVAKK0tZL0lsS3RWRzRKSklQNzBjUis3RmpyeXJpY05iWCtQVzUvOXFHaWxnY2grZ3l4b25BWlBpd2NpeDN3QVpGdwpaZC96ZFB2aTBkWEppc1BSZjRMazg5b2pCUmpiRmRmc2l5UmJYbyt3TFU4NUhRU2NGMnN5aUFPaTVBRHdVU0FkCm45YWFweUNweEFkREtERHdObit3ZFhtaTZ0OHRpSFRkK3RoVDhkaVpBb0dCQUt6Wis1bG9OOTBtYlF4VVh5YUwKMjFSUm9tMGJjcndsTmVCaWNFSmlzaEhYa2xpSVVxZ3hSZklNM2hhUVRUcklKZENFaHFsV01aV0xPb2I2NTNyZgo3aFlMSXM1ZUtka3o0aFRVdnpldm9TMHVXcm9CV2xOVHlGanIrSWhKZnZUc0hpOGdsU3FkbXgySkJhZUFVWUNXCndNdlQ4NmNLclNyNkQrZG8wS05FZzFsL0FvR0FlMkFVdHVFbFNqLzBmRzgrV3hHc1RFV1JqclRNUzRSUjhRWXQKeXdjdFA4aDZxTGxKUTRCWGxQU05rMXZLTmtOUkxIb2pZT2pCQTViYjhibXNVU1BlV09NNENoaFJ4QnlHbmR2eAphYkJDRkFwY0IvbEg4d1R0alVZYlN5T294ZGt5OEp0ek90ajJhS0FiZHd6NlArWDZDODhjZmxYVFo5MWpYL3RMCjF3TmRKS2tDZ1lCbyt0UzB5TzJ2SWFmK2UwSkN5TGhzVDQ5cTN3Zis2QWVqWGx2WDJ1VnRYejN5QTZnbXo5aCsKcDNlK2JMRUxwb3B0WFhNdUFRR0xhUkcrYlNNcjR5dERYbE5ZSndUeThXczNKY3dlSTdqZVp2b0ZpbmNvVlVIMwphdmxoTUVCRGYxSjltSDB5cDBwWUNaS2ROdHNvZEZtQktzVEtQMjJhTmtsVVhCS3gyZzR6cFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
        kind: Secret
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress-default-server-tls
          namespace: default
        type: kubernetes.io/tls
      - apiVersion: v1
        data: null
        kind: ConfigMap
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress
          namespace: default
      - apiVersion: v1
        kind: ConfigMap
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress-leader-election
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress
        rules:
        - apiGroups:
          - ""
          resources:
          - services
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
          - list
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - update
          - create
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingressclasses
          verbs:
          - get
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses/status
          verbs:
          - update
        - apiGroups:
          - k8s.nginx.org
          resources:
          - virtualservers
          - virtualserverroutes
          - globalconfigurations
          - transportservers
          - policies
          verbs:
          - list
          - watch
          - get
        - apiGroups:
          - k8s.nginx.org
          resources:
          - virtualservers/status
          - virtualserverroutes/status
          - policies/status
          - transportservers/status
          verbs:
          - update
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: nginx-nginx-ingress
        subjects:
        - kind: ServiceAccount
          name: nginx-nginx-ingress
          namespace: default
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress
          namespace: default
        spec:
          externalTrafficPolicy: Local
          ports:
          - name: http
            port: 80
            protocol: TCP
            targetPort: 80
          - name: https
            port: 443
            protocol: TCP
            targetPort: 443
          selector:
            app: nginx-nginx-ingress
          type: LoadBalancer
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress
          namespace: default
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: nginx-nginx-ingress
          template:
            metadata:
              annotations:
                prometheus.io/port: "9113"
                prometheus.io/scheme: http
                prometheus.io/scrape: "true"
              labels:
                app: nginx-nginx-ingress
            spec:
              automountServiceAccountToken: true
              containers:
              - args:
                - -nginx-plus=false
                - -nginx-reload-timeout=60000
                - -enable-app-protect=false
                - -enable-app-protect-dos=false
                - -nginx-configmaps=$(POD_NAMESPACE)/nginx-nginx-ingress
                - -default-server-tls-secret=$(POD_NAMESPACE)/nginx-nginx-ingress-default-server-tls
                - -ingress-class=nginx
                - -health-status=false
                - -health-status-uri=/nginx-health
                - -nginx-debug=false
                - -v=1
                - -nginx-status=true
                - -nginx-status-port=8080
                - -nginx-status-allow-cidrs=127.0.0.1
                - -report-ingress-status
                - -external-service=nginx-nginx-ingress
                - -enable-leader-election=true
                - -leader-election-lock-name=nginx-nginx-ingress-leader-election
                - -enable-prometheus-metrics=true
                - -prometheus-metrics-listen-port=9113
                - -prometheus-tls-secret=
                - -enable-custom-resources=true
                - -enable-snippets=false
                - -include-year=false
                - -disable-ipv6=false
                - -enable-tls-passthrough=false
                - -enable-preview-policies=false
                - -enable-cert-manager=false
                - -enable-oidc=false
                - -enable-external-dns=false
                - -ready-status=true
                - -ready-status-port=8081
                - -enable-latency-metrics=false
                env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                image: nginx/nginx-ingress:2.4.2
                imagePullPolicy: IfNotPresent
                name: nginx-nginx-ingress
                ports:
                - containerPort: 80
                  name: http
                - containerPort: 443
                  name: https
                - containerPort: 9113
                  name: prometheus
                - containerPort: 8081
                  name: readiness-port
                readinessProbe:
                  httpGet:
                    path: /nginx-ready
                    port: readiness-port
                  initialDelaySeconds: 0
                  periodSeconds: 1
                resources:
                  requests:
                    cpu: 100m
                    memory: 128Mi
                securityContext:
                  allowPrivilegeEscalation: true
                  capabilities:
                    add:
                    - NET_BIND_SERVICE
                    drop:
                    - ALL
                  runAsNonRoot: true
                  runAsUser: 101
              hostNetwork: false
              serviceAccountName: nginx-nginx-ingress
              terminationGracePeriodSeconds: 30
      - apiVersion: networking.k8s.io/v1
        kind: IngressClass
        metadata:
          name: nginx
        spec:
          controller: nginx.org/ingress-controller
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: globalconfigurations.k8s.nginx.org
        spec:
          group: k8s.nginx.org
          names:
            kind: GlobalConfiguration
            listKind: GlobalConfigurationList
            plural: globalconfigurations
            shortNames:
            - gc
            singular: globalconfiguration
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: GlobalConfiguration defines the GlobalConfiguration resource.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: GlobalConfigurationSpec is the spec of the GlobalConfiguration
                      resource.
                    properties:
                      listeners:
                        items:
                          description: Listener defines a listener.
                          properties:
                            name:
                              type: string
                            port:
                              type: integer
                            protocol:
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: policies.k8s.nginx.org
        spec:
          group: k8s.nginx.org
          names:
            kind: Policy
            listKind: PolicyList
            plural: policies
            shortNames:
            - pol
            singular: policy
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Current state of the Policy. If the resource has a valid
                status, it means it has been validated and accepted by the Ingress
                Controller.
              jsonPath: .status.state
              name: State
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                description: Policy defines a Policy for VirtualServer and VirtualServerRoute
                  resources.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: PolicySpec is the spec of the Policy resource. The
                      spec includes multiple fields, where each field represents a
                      different policy. Only one policy (field) is allowed.
                    properties:
                      accessControl:
                        description: AccessControl defines an access policy based
                          on the source IP of a request.
                        properties:
                          allow:
                            items:
                              type: string
                            type: array
                          deny:
                            items:
                              type: string
                            type: array
                        type: object
                      basicAuth:
                        description: 'BasicAuth holds HTTP Basic authentication configuration
                          policy status: preview'
                        properties:
                          realm:
                            type: string
                          secret:
                            type: string
                        type: object
                      egressMTLS:
                        description: EgressMTLS defines an Egress MTLS policy.
                        properties:
                          ciphers:
                            type: string
                          protocols:
                            type: string
                          serverName:
                            type: boolean
                          sessionReuse:
                            type: boolean
                          sslName:
                            type: string
                          tlsSecret:
                            type: string
                          trustedCertSecret:
                            type: string
                          verifyDepth:
                            type: integer
                          verifyServer:
                            type: boolean
                        type: object
                      ingressClassName:
                        type: string
                      ingressMTLS:
                        description: IngressMTLS defines an Ingress MTLS policy.
                        properties:
                          clientCertSecret:
                            type: string
                          verifyClient:
                            type: string
                          verifyDepth:
                            type: integer
                        type: object
                      jwt:
                        description: JWTAuth holds JWT authentication configuration.
                        properties:
                          realm:
                            type: string
                          secret:
                            type: string
                          token:
                            type: string
                        type: object
                      oidc:
                        description: OIDC defines an Open ID Connect policy.
                        properties:
                          authEndpoint:
                            type: string
                          clientID:
                            type: string
                          clientSecret:
                            type: string
                          jwksURI:
                            type: string
                          redirectURI:
                            type: string
                          scope:
                            type: string
                          tokenEndpoint:
                            type: string
                          zoneSyncLeeway:
                            type: integer
                        type: object
                      rateLimit:
                        description: RateLimit defines a rate limit policy.
                        properties:
                          burst:
                            type: integer
                          delay:
                            type: integer
                          dryRun:
                            type: boolean
                          key:
                            type: string
                          logLevel:
                            type: string
                          noDelay:
                            type: boolean
                          rate:
                            type: string
                          rejectCode:
                            type: integer
                          zoneSize:
                            type: string
                        type: object
                      waf:
                        description: WAF defines an WAF policy.
                        properties:
                          apPolicy:
                            type: string
                          enable:
                            type: boolean
                          securityLog:
                            description: SecurityLog defines the security log of a
                              WAF policy.
                            properties:
                              apLogConf:
                                type: string
                              enable:
                                type: boolean
                              logDest:
                                type: string
                            type: object
                          securityLogs:
                            items:
                              description: SecurityLog defines the security log of
                                a WAF policy.
                              properties:
                                apLogConf:
                                  type: string
                                enable:
                                  type: boolean
                                logDest:
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  status:
                    description: PolicyStatus is the status of the policy resource
                    properties:
                      message:
                        type: string
                      reason:
                        type: string
                      state:
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: Policy defines a Policy for VirtualServer and VirtualServerRoute
                  resources.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: PolicySpec is the spec of the Policy resource. The
                      spec includes multiple fields, where each field represents a
                      different policy. Only one policy (field) is allowed.
                    properties:
                      accessControl:
                        description: AccessControl defines an access policy based
                          on the source IP of a request.
                        properties:
                          allow:
                            items:
                              type: string
                            type: array
                          deny:
                            items:
                              type: string
                            type: array
                        type: object
                      egressMTLS:
                        description: EgressMTLS defines an Egress MTLS policy.
                        properties:
                          ciphers:
                            type: string
                          protocols:
                            type: string
                          serverName:
                            type: boolean
                          sessionReuse:
                            type: boolean
                          sslName:
                            type: string
                          tlsSecret:
                            type: string
                          trustedCertSecret:
                            type: string
                          verifyDepth:
                            type: integer
                          verifyServer:
                            type: boolean
                        type: object
                      ingressMTLS:
                        description: IngressMTLS defines an Ingress MTLS policy.
                        properties:
                          clientCertSecret:
                            type: string
                          verifyClient:
                            type: string
                          verifyDepth:
                            type: integer
                        type: object
                      jwt:
                        description: JWTAuth holds JWT authentication configuration.
                        properties:
                          realm:
                            type: string
                          secret:
                            type: string
                          token:
                            type: string
                        type: object
                      rateLimit:
                        description: RateLimit defines a rate limit policy.
                        properties:
                          burst:
                            type: integer
                          delay:
                            type: integer
                          dryRun:
                            type: boolean
                          key:
                            type: string
                          logLevel:
                            type: string
                          noDelay:
                            type: boolean
                          rate:
                            type: string
                          rejectCode:
                            type: integer
                          zoneSize:
                            type: string
                        type: object
                    type: object
                type: object
            served: true
            storage: false
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: transportservers.k8s.nginx.org
        spec:
          group: k8s.nginx.org
          names:
            kind: TransportServer
            listKind: TransportServerList
            plural: transportservers
            shortNames:
            - ts
            singular: transportserver
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Current state of the TransportServer. If the resource has
                a valid status, it means it has been validated and accepted by the
                Ingress Controller.
              jsonPath: .status.state
              name: State
              type: string
            - jsonPath: .status.reason
              name: Reason
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: TransportServer defines the TransportServer resource.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: TransportServerSpec is the spec of the TransportServer
                      resource.
                    properties:
                      action:
                        description: Action defines an action.
                        properties:
                          pass:
                            type: string
                        type: object
                      host:
                        type: string
                      ingressClassName:
                        type: string
                      listener:
                        description: TransportServerListener defines a listener for
                          a TransportServer.
                        properties:
                          name:
                            type: string
                          protocol:
                            type: string
                        type: object
                      serverSnippets:
                        type: string
                      sessionParameters:
                        description: SessionParameters defines session parameters.
                        properties:
                          timeout:
                            type: string
                        type: object
                      streamSnippets:
                        type: string
                      upstreamParameters:
                        description: UpstreamParameters defines parameters for an
                          upstream.
                        properties:
                          connectTimeout:
                            type: string
                          nextUpstream:
                            type: boolean
                          nextUpstreamTimeout:
                            type: string
                          nextUpstreamTries:
                            type: integer
                          udpRequests:
                            type: integer
                          udpResponses:
                            type: integer
                        type: object
                      upstreams:
                        items:
                          description: Upstream defines an upstream.
                          properties:
                            failTimeout:
                              type: string
                            healthCheck:
                              description: HealthCheck defines the parameters for
                                active Upstream HealthChecks.
                              properties:
                                enable:
                                  type: boolean
                                fails:
                                  type: integer
                                interval:
                                  type: string
                                jitter:
                                  type: string
                                match:
                                  description: Match defines the parameters of a custom
                                    health check.
                                  properties:
                                    expect:
                                      type: string
                                    send:
                                      type: string
                                  type: object
                                passes:
                                  type: integer
                                port:
                                  type: integer
                                timeout:
                                  type: string
                              type: object
                            loadBalancingMethod:
                              type: string
                            maxConns:
                              type: integer
                            maxFails:
                              type: integer
                            name:
                              type: string
                            port:
                              type: integer
                            service:
                              type: string
                          type: object
                        type: array
                    type: object
                  status:
                    description: TransportServerStatus defines the status for the
                      TransportServer resource.
                    properties:
                      message:
                        type: string
                      reason:
                        type: string
                      state:
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: virtualserverroutes.k8s.nginx.org
        spec:
          group: k8s.nginx.org
          names:
            kind: VirtualServerRoute
            listKind: VirtualServerRouteList
            plural: virtualserverroutes
            shortNames:
            - vsr
            singular: virtualserverroute
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Current state of the VirtualServerRoute. If the resource
                has a valid status, it means it has been validated and accepted by
                the Ingress Controller.
              jsonPath: .status.state
              name: State
              type: string
            - jsonPath: .spec.host
              name: Host
              type: string
            - jsonPath: .status.externalEndpoints[*].ip
              name: IP
              type: string
            - jsonPath: .status.externalEndpoints[*].hostname
              name: ExternalHostname
              priority: 1
              type: string
            - jsonPath: .status.externalEndpoints[*].ports
              name: Ports
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                description: VirtualServerRoute defines the VirtualServerRoute resource.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: VirtualServerRouteSpec is the spec of the VirtualServerRoute
                      resource.
                    properties:
                      host:
                        type: string
                      ingressClassName:
                        type: string
                      subroutes:
                        items:
                          description: Route defines a route.
                          properties:
                            action:
                              description: Action defines an action.
                              properties:
                                pass:
                                  type: string
                                proxy:
                                  description: ActionProxy defines a proxy in an Action.
                                  properties:
                                    requestHeaders:
                                      description: ProxyRequestHeaders defines the
                                        request headers manipulation in an ActionProxy.
                                      properties:
                                        pass:
                                          type: boolean
                                        set:
                                          items:
                                            description: Header defines an HTTP Header.
                                            properties:
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    responseHeaders:
                                      description: ProxyResponseHeaders defines the
                                        response headers manipulation in an ActionProxy.
                                      properties:
                                        add:
                                          items:
                                            description: AddHeader defines an HTTP
                                              Header with an optional Always field
                                              to use with the add_header NGINX directive.
                                            properties:
                                              always:
                                                type: boolean
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            type: object
                                          type: array
                                        hide:
                                          items:
                                            type: string
                                          type: array
                                        ignore:
                                          items:
                                            type: string
                                          type: array
                                        pass:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    rewritePath:
                                      type: string
                                    upstream:
                                      type: string
                                  type: object
                                redirect:
                                  description: ActionRedirect defines a redirect in
                                    an Action.
                                  properties:
                                    code:
                                      type: integer
                                    url:
                                      type: string
                                  type: object
                                return:
                                  description: ActionReturn defines a return in an
                                    Action.
                                  properties:
                                    body:
                                      type: string
                                    code:
                                      type: integer
                                    type:
                                      type: string
                                  type: object
                              type: object
                            dos:
                              type: string
                            errorPages:
                              items:
                                description: ErrorPage defines an ErrorPage in a Route.
                                properties:
                                  codes:
                                    items:
                                      type: integer
                                    type: array
                                  redirect:
                                    description: ErrorPageRedirect defines a redirect
                                      for an ErrorPage.
                                    properties:
                                      code:
                                        type: integer
                                      url:
                                        type: string
                                    type: object
                                  return:
                                    description: ErrorPageReturn defines a return
                                      for an ErrorPage.
                                    properties:
                                      body:
                                        type: string
                                      code:
                                        type: integer
                                      headers:
                                        items:
                                          description: Header defines an HTTP Header.
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          type: object
                                        type: array
                                      type:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            location-snippets:
                              type: string
                            matches:
                              items:
                                description: Match defines a match.
                                properties:
                                  action:
                                    description: Action defines an action.
                                    properties:
                                      pass:
                                        type: string
                                      proxy:
                                        description: ActionProxy defines a proxy in
                                          an Action.
                                        properties:
                                          requestHeaders:
                                            description: ProxyRequestHeaders defines
                                              the request headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              pass:
                                                type: boolean
                                              set:
                                                items:
                                                  description: Header defines an HTTP
                                                    Header.
                                                  properties:
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                            type: object
                                          responseHeaders:
                                            description: ProxyResponseHeaders defines
                                              the response headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              add:
                                                items:
                                                  description: AddHeader defines an
                                                    HTTP Header with an optional Always
                                                    field to use with the add_header
                                                    NGINX directive.
                                                  properties:
                                                    always:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                              hide:
                                                items:
                                                  type: string
                                                type: array
                                              ignore:
                                                items:
                                                  type: string
                                                type: array
                                              pass:
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          rewritePath:
                                            type: string
                                          upstream:
                                            type: string
                                        type: object
                                      redirect:
                                        description: ActionRedirect defines a redirect
                                          in an Action.
                                        properties:
                                          code:
                                            type: integer
                                          url:
                                            type: string
                                        type: object
                                      return:
                                        description: ActionReturn defines a return
                                          in an Action.
                                        properties:
                                          body:
                                            type: string
                                          code:
                                            type: integer
                                          type:
                                            type: string
                                        type: object
                                    type: object
                                  conditions:
                                    items:
                                      description: Condition defines a condition in
                                        a MatchRule.
                                      properties:
                                        argument:
                                          type: string
                                        cookie:
                                          type: string
                                        header:
                                          type: string
                                        value:
                                          type: string
                                        variable:
                                          type: string
                                      type: object
                                    type: array
                                  splits:
                                    items:
                                      description: Split defines a split.
                                      properties:
                                        action:
                                          description: Action defines an action.
                                          properties:
                                            pass:
                                              type: string
                                            proxy:
                                              description: ActionProxy defines a proxy
                                                in an Action.
                                              properties:
                                                requestHeaders:
                                                  description: ProxyRequestHeaders
                                                    defines the request headers manipulation
                                                    in an ActionProxy.
                                                  properties:
                                                    pass:
                                                      type: boolean
                                                    set:
                                                      items:
                                                        description: Header defines
                                                          an HTTP Header.
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                responseHeaders:
                                                  description: ProxyResponseHeaders
                                                    defines the response headers manipulation
                                                    in an ActionProxy.
                                                  properties:
                                                    add:
                                                      items:
                                                        description: AddHeader defines
                                                          an HTTP Header with an optional
                                                          Always field to use with
                                                          the add_header NGINX directive.
                                                        properties:
                                                          always:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    hide:
                                                      items:
                                                        type: string
                                                      type: array
                                                    ignore:
                                                      items:
                                                        type: string
                                                      type: array
                                                    pass:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                rewritePath:
                                                  type: string
                                                upstream:
                                                  type: string
                                              type: object
                                            redirect:
                                              description: ActionRedirect defines
                                                a redirect in an Action.
                                              properties:
                                                code:
                                                  type: integer
                                                url:
                                                  type: string
                                              type: object
                                            return:
                                              description: ActionReturn defines a
                                                return in an Action.
                                              properties:
                                                body:
                                                  type: string
                                                code:
                                                  type: integer
                                                type:
                                                  type: string
                                              type: object
                                          type: object
                                        weight:
                                          type: integer
                                      type: object
                                    type: array
                                type: object
                              type: array
                            path:
                              type: string
                            policies:
                              items:
                                description: PolicyReference references a policy by
                                  name and an optional namespace.
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              type: array
                            route:
                              type: string
                            splits:
                              items:
                                description: Split defines a split.
                                properties:
                                  action:
                                    description: Action defines an action.
                                    properties:
                                      pass:
                                        type: string
                                      proxy:
                                        description: ActionProxy defines a proxy in
                                          an Action.
                                        properties:
                                          requestHeaders:
                                            description: ProxyRequestHeaders defines
                                              the request headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              pass:
                                                type: boolean
                                              set:
                                                items:
                                                  description: Header defines an HTTP
                                                    Header.
                                                  properties:
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                            type: object
                                          responseHeaders:
                                            description: ProxyResponseHeaders defines
                                              the response headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              add:
                                                items:
                                                  description: AddHeader defines an
                                                    HTTP Header with an optional Always
                                                    field to use with the add_header
                                                    NGINX directive.
                                                  properties:
                                                    always:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                              hide:
                                                items:
                                                  type: string
                                                type: array
                                              ignore:
                                                items:
                                                  type: string
                                                type: array
                                              pass:
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          rewritePath:
                                            type: string
                                          upstream:
                                            type: string
                                        type: object
                                      redirect:
                                        description: ActionRedirect defines a redirect
                                          in an Action.
                                        properties:
                                          code:
                                            type: integer
                                          url:
                                            type: string
                                        type: object
                                      return:
                                        description: ActionReturn defines a return
                                          in an Action.
                                        properties:
                                          body:
                                            type: string
                                          code:
                                            type: integer
                                          type:
                                            type: string
                                        type: object
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                          type: object
                        type: array
                      upstreams:
                        items:
                          description: Upstream defines an upstream.
                          properties:
                            buffer-size:
                              type: string
                            buffering:
                              type: boolean
                            buffers:
                              description: UpstreamBuffers defines Buffer Configuration
                                for an Upstream.
                              properties:
                                number:
                                  type: integer
                                size:
                                  type: string
                              type: object
                            client-max-body-size:
                              type: string
                            connect-timeout:
                              type: string
                            fail-timeout:
                              type: string
                            healthCheck:
                              description: HealthCheck defines the parameters for
                                active Upstream HealthChecks.
                              properties:
                                connect-timeout:
                                  type: string
                                enable:
                                  type: boolean
                                fails:
                                  type: integer
                                grpcService:
                                  type: string
                                grpcStatus:
                                  type: integer
                                headers:
                                  items:
                                    description: Header defines an HTTP Header.
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                interval:
                                  type: string
                                jitter:
                                  type: string
                                mandatory:
                                  type: boolean
                                passes:
                                  type: integer
                                path:
                                  type: string
                                persistent:
                                  type: boolean
                                port:
                                  type: integer
                                read-timeout:
                                  type: string
                                send-timeout:
                                  type: string
                                statusMatch:
                                  type: string
                                tls:
                                  description: UpstreamTLS defines a TLS configuration
                                    for an Upstream.
                                  properties:
                                    enable:
                                      type: boolean
                                  type: object
                              type: object
                            keepalive:
                              type: integer
                            lb-method:
                              type: string
                            max-conns:
                              type: integer
                            max-fails:
                              type: integer
                            name:
                              type: string
                            next-upstream:
                              type: string
                            next-upstream-timeout:
                              type: string
                            next-upstream-tries:
                              type: integer
                            ntlm:
                              type: boolean
                            port:
                              type: integer
                            queue:
                              description: UpstreamQueue defines Queue Configuration
                                for an Upstream.
                              properties:
                                size:
                                  type: integer
                                timeout:
                                  type: string
                              type: object
                            read-timeout:
                              type: string
                            send-timeout:
                              type: string
                            service:
                              type: string
                            sessionCookie:
                              description: SessionCookie defines the parameters for
                                session persistence.
                              properties:
                                domain:
                                  type: string
                                enable:
                                  type: boolean
                                expires:
                                  type: string
                                httpOnly:
                                  type: boolean
                                name:
                                  type: string
                                path:
                                  type: string
                                secure:
                                  type: boolean
                              type: object
                            slow-start:
                              type: string
                            subselector:
                              additionalProperties:
                                type: string
                              type: object
                            tls:
                              description: UpstreamTLS defines a TLS configuration
                                for an Upstream.
                              properties:
                                enable:
                                  type: boolean
                              type: object
                            type:
                              type: string
                            use-cluster-ip:
                              type: boolean
                          type: object
                        type: array
                    type: object
                  status:
                    description: VirtualServerRouteStatus defines the status for the
                      VirtualServerRoute resource.
                    properties:
                      externalEndpoints:
                        items:
                          description: ExternalEndpoint defines the IP/ Hostname and
                            ports used to connect to this resource.
                          properties:
                            hostname:
                              type: string
                            ip:
                              type: string
                            ports:
                              type: string
                          type: object
                        type: array
                      message:
                        type: string
                      reason:
                        type: string
                      referencedBy:
                        type: string
                      state:
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: virtualservers.k8s.nginx.org
        spec:
          group: k8s.nginx.org
          names:
            kind: VirtualServer
            listKind: VirtualServerList
            plural: virtualservers
            shortNames:
            - vs
            singular: virtualserver
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Current state of the VirtualServer. If the resource has
                a valid status, it means it has been validated and accepted by the
                Ingress Controller.
              jsonPath: .status.state
              name: State
              type: string
            - jsonPath: .spec.host
              name: Host
              type: string
            - jsonPath: .status.externalEndpoints[*].ip
              name: IP
              type: string
            - jsonPath: .status.externalEndpoints[*].hostname
              name: ExternalHostname
              priority: 1
              type: string
            - jsonPath: .status.externalEndpoints[*].ports
              name: Ports
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                description: VirtualServer defines the VirtualServer resource.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: VirtualServerSpec is the spec of the VirtualServer
                      resource.
                    properties:
                      dos:
                        type: string
                      externalDNS:
                        description: ExternalDNS defines externaldns sub-resource
                          of a virtual server.
                        properties:
                          enable:
                            type: boolean
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels stores labels defined for the Endpoint
                            type: object
                          providerSpecific:
                            description: ProviderSpecific stores provider specific
                              config
                            items:
                              description: ProviderSpecificProperty defines specific
                                property for using with ExternalDNS sub-resource.
                              properties:
                                name:
                                  description: Name of the property
                                  type: string
                                value:
                                  description: Value of the property
                                  type: string
                              type: object
                            type: array
                          recordTTL:
                            description: TTL for the record
                            format: int64
                            type: integer
                          recordType:
                            type: string
                        type: object
                      host:
                        type: string
                      http-snippets:
                        type: string
                      ingressClassName:
                        type: string
                      policies:
                        items:
                          description: PolicyReference references a policy by name
                            and an optional namespace.
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          type: object
                        type: array
                      routes:
                        items:
                          description: Route defines a route.
                          properties:
                            action:
                              description: Action defines an action.
                              properties:
                                pass:
                                  type: string
                                proxy:
                                  description: ActionProxy defines a proxy in an Action.
                                  properties:
                                    requestHeaders:
                                      description: ProxyRequestHeaders defines the
                                        request headers manipulation in an ActionProxy.
                                      properties:
                                        pass:
                                          type: boolean
                                        set:
                                          items:
                                            description: Header defines an HTTP Header.
                                            properties:
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    responseHeaders:
                                      description: ProxyResponseHeaders defines the
                                        response headers manipulation in an ActionProxy.
                                      properties:
                                        add:
                                          items:
                                            description: AddHeader defines an HTTP
                                              Header with an optional Always field
                                              to use with the add_header NGINX directive.
                                            properties:
                                              always:
                                                type: boolean
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            type: object
                                          type: array
                                        hide:
                                          items:
                                            type: string
                                          type: array
                                        ignore:
                                          items:
                                            type: string
                                          type: array
                                        pass:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    rewritePath:
                                      type: string
                                    upstream:
                                      type: string
                                  type: object
                                redirect:
                                  description: ActionRedirect defines a redirect in
                                    an Action.
                                  properties:
                                    code:
                                      type: integer
                                    url:
                                      type: string
                                  type: object
                                return:
                                  description: ActionReturn defines a return in an
                                    Action.
                                  properties:
                                    body:
                                      type: string
                                    code:
                                      type: integer
                                    type:
                                      type: string
                                  type: object
                              type: object
                            dos:
                              type: string
                            errorPages:
                              items:
                                description: ErrorPage defines an ErrorPage in a Route.
                                properties:
                                  codes:
                                    items:
                                      type: integer
                                    type: array
                                  redirect:
                                    description: ErrorPageRedirect defines a redirect
                                      for an ErrorPage.
                                    properties:
                                      code:
                                        type: integer
                                      url:
                                        type: string
                                    type: object
                                  return:
                                    description: ErrorPageReturn defines a return
                                      for an ErrorPage.
                                    properties:
                                      body:
                                        type: string
                                      code:
                                        type: integer
                                      headers:
                                        items:
                                          description: Header defines an HTTP Header.
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          type: object
                                        type: array
                                      type:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            location-snippets:
                              type: string
                            matches:
                              items:
                                description: Match defines a match.
                                properties:
                                  action:
                                    description: Action defines an action.
                                    properties:
                                      pass:
                                        type: string
                                      proxy:
                                        description: ActionProxy defines a proxy in
                                          an Action.
                                        properties:
                                          requestHeaders:
                                            description: ProxyRequestHeaders defines
                                              the request headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              pass:
                                                type: boolean
                                              set:
                                                items:
                                                  description: Header defines an HTTP
                                                    Header.
                                                  properties:
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                            type: object
                                          responseHeaders:
                                            description: ProxyResponseHeaders defines
                                              the response headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              add:
                                                items:
                                                  description: AddHeader defines an
                                                    HTTP Header with an optional Always
                                                    field to use with the add_header
                                                    NGINX directive.
                                                  properties:
                                                    always:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                              hide:
                                                items:
                                                  type: string
                                                type: array
                                              ignore:
                                                items:
                                                  type: string
                                                type: array
                                              pass:
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          rewritePath:
                                            type: string
                                          upstream:
                                            type: string
                                        type: object
                                      redirect:
                                        description: ActionRedirect defines a redirect
                                          in an Action.
                                        properties:
                                          code:
                                            type: integer
                                          url:
                                            type: string
                                        type: object
                                      return:
                                        description: ActionReturn defines a return
                                          in an Action.
                                        properties:
                                          body:
                                            type: string
                                          code:
                                            type: integer
                                          type:
                                            type: string
                                        type: object
                                    type: object
                                  conditions:
                                    items:
                                      description: Condition defines a condition in
                                        a MatchRule.
                                      properties:
                                        argument:
                                          type: string
                                        cookie:
                                          type: string
                                        header:
                                          type: string
                                        value:
                                          type: string
                                        variable:
                                          type: string
                                      type: object
                                    type: array
                                  splits:
                                    items:
                                      description: Split defines a split.
                                      properties:
                                        action:
                                          description: Action defines an action.
                                          properties:
                                            pass:
                                              type: string
                                            proxy:
                                              description: ActionProxy defines a proxy
                                                in an Action.
                                              properties:
                                                requestHeaders:
                                                  description: ProxyRequestHeaders
                                                    defines the request headers manipulation
                                                    in an ActionProxy.
                                                  properties:
                                                    pass:
                                                      type: boolean
                                                    set:
                                                      items:
                                                        description: Header defines
                                                          an HTTP Header.
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                responseHeaders:
                                                  description: ProxyResponseHeaders
                                                    defines the response headers manipulation
                                                    in an ActionProxy.
                                                  properties:
                                                    add:
                                                      items:
                                                        description: AddHeader defines
                                                          an HTTP Header with an optional
                                                          Always field to use with
                                                          the add_header NGINX directive.
                                                        properties:
                                                          always:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    hide:
                                                      items:
                                                        type: string
                                                      type: array
                                                    ignore:
                                                      items:
                                                        type: string
                                                      type: array
                                                    pass:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                rewritePath:
                                                  type: string
                                                upstream:
                                                  type: string
                                              type: object
                                            redirect:
                                              description: ActionRedirect defines
                                                a redirect in an Action.
                                              properties:
                                                code:
                                                  type: integer
                                                url:
                                                  type: string
                                              type: object
                                            return:
                                              description: ActionReturn defines a
                                                return in an Action.
                                              properties:
                                                body:
                                                  type: string
                                                code:
                                                  type: integer
                                                type:
                                                  type: string
                                              type: object
                                          type: object
                                        weight:
                                          type: integer
                                      type: object
                                    type: array
                                type: object
                              type: array
                            path:
                              type: string
                            policies:
                              items:
                                description: PolicyReference references a policy by
                                  name and an optional namespace.
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              type: array
                            route:
                              type: string
                            splits:
                              items:
                                description: Split defines a split.
                                properties:
                                  action:
                                    description: Action defines an action.
                                    properties:
                                      pass:
                                        type: string
                                      proxy:
                                        description: ActionProxy defines a proxy in
                                          an Action.
                                        properties:
                                          requestHeaders:
                                            description: ProxyRequestHeaders defines
                                              the request headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              pass:
                                                type: boolean
                                              set:
                                                items:
                                                  description: Header defines an HTTP
                                                    Header.
                                                  properties:
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                            type: object
                                          responseHeaders:
                                            description: ProxyResponseHeaders defines
                                              the response headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              add:
                                                items:
                                                  description: AddHeader defines an
                                                    HTTP Header with an optional Always
                                                    field to use with the add_header
                                                    NGINX directive.
                                                  properties:
                                                    always:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                              hide:
                                                items:
                                                  type: string
                                                type: array
                                              ignore:
                                                items:
                                                  type: string
                                                type: array
                                              pass:
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          rewritePath:
                                            type: string
                                          upstream:
                                            type: string
                                        type: object
                                      redirect:
                                        description: ActionRedirect defines a redirect
                                          in an Action.
                                        properties:
                                          code:
                                            type: integer
                                          url:
                                            type: string
                                        type: object
                                      return:
                                        description: ActionReturn defines a return
                                          in an Action.
                                        properties:
                                          body:
                                            type: string
                                          code:
                                            type: integer
                                          type:
                                            type: string
                                        type: object
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                          type: object
                        type: array
                      server-snippets:
                        type: string
                      tls:
                        description: TLS defines TLS configuration for a VirtualServer.
                        properties:
                          cert-manager:
                            description: CertManager defines a cert manager config
                              for a TLS.
                            properties:
                              cluster-issuer:
                                type: string
                              common-name:
                                type: string
                              duration:
                                type: string
                              issuer:
                                type: string
                              issuer-group:
                                type: string
                              issuer-kind:
                                type: string
                              renew-before:
                                type: string
                              usages:
                                type: string
                            type: object
                          redirect:
                            description: TLSRedirect defines a redirect for a TLS.
                            properties:
                              basedOn:
                                type: string
                              code:
                                type: integer
                              enable:
                                type: boolean
                            type: object
                          secret:
                            type: string
                        type: object
                      upstreams:
                        items:
                          description: Upstream defines an upstream.
                          properties:
                            buffer-size:
                              type: string
                            buffering:
                              type: boolean
                            buffers:
                              description: UpstreamBuffers defines Buffer Configuration
                                for an Upstream.
                              properties:
                                number:
                                  type: integer
                                size:
                                  type: string
                              type: object
                            client-max-body-size:
                              type: string
                            connect-timeout:
                              type: string
                            fail-timeout:
                              type: string
                            healthCheck:
                              description: HealthCheck defines the parameters for
                                active Upstream HealthChecks.
                              properties:
                                connect-timeout:
                                  type: string
                                enable:
                                  type: boolean
                                fails:
                                  type: integer
                                grpcService:
                                  type: string
                                grpcStatus:
                                  type: integer
                                headers:
                                  items:
                                    description: Header defines an HTTP Header.
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                interval:
                                  type: string
                                jitter:
                                  type: string
                                mandatory:
                                  type: boolean
                                passes:
                                  type: integer
                                path:
                                  type: string
                                persistent:
                                  type: boolean
                                port:
                                  type: integer
                                read-timeout:
                                  type: string
                                send-timeout:
                                  type: string
                                statusMatch:
                                  type: string
                                tls:
                                  description: UpstreamTLS defines a TLS configuration
                                    for an Upstream.
                                  properties:
                                    enable:
                                      type: boolean
                                  type: object
                              type: object
                            keepalive:
                              type: integer
                            lb-method:
                              type: string
                            max-conns:
                              type: integer
                            max-fails:
                              type: integer
                            name:
                              type: string
                            next-upstream:
                              type: string
                            next-upstream-timeout:
                              type: string
                            next-upstream-tries:
                              type: integer
                            ntlm:
                              type: boolean
                            port:
                              type: integer
                            queue:
                              description: UpstreamQueue defines Queue Configuration
                                for an Upstream.
                              properties:
                                size:
                                  type: integer
                                timeout:
                                  type: string
                              type: object
                            read-timeout:
                              type: string
                            send-timeout:
                              type: string
                            service:
                              type: string
                            sessionCookie:
                              description: SessionCookie defines the parameters for
                                session persistence.
                              properties:
                                domain:
                                  type: string
                                enable:
                                  type: boolean
                                expires:
                                  type: string
                                httpOnly:
                                  type: boolean
                                name:
                                  type: string
                                path:
                                  type: string
                                secure:
                                  type: boolean
                              type: object
                            slow-start:
                              type: string
                            subselector:
                              additionalProperties:
                                type: string
                              type: object
                            tls:
                              description: UpstreamTLS defines a TLS configuration
                                for an Upstream.
                              properties:
                                enable:
                                  type: boolean
                              type: object
                            type:
                              type: string
                            use-cluster-ip:
                              type: boolean
                          type: object
                        type: array
                    type: object
                  status:
                    description: VirtualServerStatus defines the status for the VirtualServer
                      resource.
                    properties:
                      externalEndpoints:
                        items:
                          description: ExternalEndpoint defines the IP/ Hostname and
                            ports used to connect to this resource.
                          properties:
                            hostname:
                              type: string
                            ip:
                              type: string
                            ports:
                              type: string
                          type: object
                        type: array
                      message:
                        type: string
                      reason:
                        type: string
                      state:
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
    status: {}
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      creationTimestamp: null
      name: postgresql
      namespace: default
    spec:
      clusterSelector:
        environment: dev
      workerClusterResources:
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-pod
        rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
        rules:
        - apiGroups:
          - acid.zalan.do
          resources:
          - postgresqls
          - postgresqls/status
          - operatorconfigurations
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - acid.zalan.do
          resources:
          - postgresteams
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - create
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - update
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/exec
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - statefulsets
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
        - apiGroups:
          - batch
          resources:
          - cronjobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - get
          - create
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - get
          - create
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: postgres-operator
        subjects:
        - kind: ServiceAccount
          name: postgres-operator
          namespace: default
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
        spec:
          ports:
          - port: 8080
            protocol: TCP
            targetPort: 8080
          selector:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/name: postgres-operator
          type: ClusterIP
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/instance: postgres-operator
              app.kubernetes.io/name: postgres-operator
          template:
            metadata:
              annotations:
                checksum/config: 5e43e52b4f2db120d38d4727aadf7071bc5a3249e01f3ca89ed2c65b1fe4e227
              labels:
                app.kubernetes.io/instance: postgres-operator
                app.kubernetes.io/name: postgres-operator
            spec:
              affinity: {}
              containers:
              - env:
                - name: POSTGRES_OPERATOR_CONFIGURATION_OBJECT
                  value: postgres-operator
                image: registry.opensource.zalan.do/acid/postgres-operator:v1.8.2-43-g3e148ea5
                imagePullPolicy: IfNotPresent
                name: postgres-operator
                resources:
                  limits:
                    cpu: 500m
                    memory: 500Mi
                  requests:
                    cpu: 100m
                    memory: 250Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  runAsUser: 1000
              nodeSelector: {}
              serviceAccountName: postgres-operator
              tolerations: []
      - apiVersion: acid.zalan.do/v1
        configuration:
          aws_or_gcp:
            aws_region: eu-central-1
            enable_ebs_gp3_migration: false
          connection_pooler:
            connection_pooler_default_cpu_limit: "1"
            connection_pooler_default_cpu_request: 500m
            connection_pooler_default_memory_limit: 100Mi
            connection_pooler_default_memory_request: 100Mi
            connection_pooler_image: registry.opensource.zalan.do/acid/pgbouncer:master-22
            connection_pooler_max_db_connections: 60
            connection_pooler_mode: transaction
            connection_pooler_number_of_instances: 2
            connection_pooler_schema: pooler
            connection_pooler_user: pooler
          crd_categories:
          - all
          debug:
            debug_logging: true
            enable_database_access: true
          docker_image: registry.opensource.zalan.do/acid/spilo-14:2.1-p6
          enable_crd_registration: true
          enable_lazy_spilo_upgrade: false
          enable_pgversion_env_var: true
          enable_shm_volume: true
          enable_spilo_wal_path_compat: false
          etcd_host: ""
          kubernetes:
            cluster_domain: cluster.local
            cluster_labels:
              application: spilo
            cluster_name_label: cluster-name
            enable_cross_namespace_secret: false
            enable_init_containers: true
            enable_pod_antiaffinity: false
            enable_pod_disruption_budget: true
            enable_sidecars: true
            oauth_token_secret_name: postgres-operator
            pdb_name_format: postgres-{cluster}-pdb
            pod_antiaffinity_topology_key: kubernetes.io/hostname
            pod_management_policy: ordered_ready
            pod_role_label: spilo-role
            pod_service_account_name: postgres-pod
            pod_terminate_grace_period: 5m
            secret_name_template: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
            spilo_allow_privilege_escalation: true
            spilo_privileged: false
            storage_resize_mode: pvc
            watched_namespace: '*'
          load_balancer:
            db_hosted_zone: db.example.com
            enable_master_load_balancer: false
            enable_master_pooler_load_balancer: false
            enable_replica_load_balancer: false
            enable_replica_pooler_load_balancer: false
            external_traffic_policy: Cluster
            master_dns_name_format: '{cluster}.{team}.{hostedzone}'
            replica_dns_name_format: '{cluster}-repl.{team}.{hostedzone}'
          logging_rest_api:
            api_port: 8080
            cluster_history_entries: 1000
            ring_log_lines: 100
          logical_backup:
            logical_backup_docker_image: registry.opensource.zalan.do/acid/logical-backup:v1.8.0
            logical_backup_job_prefix: logical-backup-
            logical_backup_provider: s3
            logical_backup_s3_access_key_id: ""
            logical_backup_s3_bucket: my-bucket-url
            logical_backup_s3_endpoint: ""
            logical_backup_s3_region: ""
            logical_backup_s3_retention_time: ""
            logical_backup_s3_secret_access_key: ""
            logical_backup_s3_sse: AES256
            logical_backup_schedule: 30 00 * * *
          major_version_upgrade:
            major_version_upgrade_mode: "off"
            minimal_major_version: "9.6"
            target_major_version: "14"
          max_instances: -1
          min_instances: -1
          postgres_pod_resources:
            default_cpu_limit: "1"
            default_cpu_request: 100m
            default_memory_limit: 500Mi
            default_memory_request: 100Mi
            min_cpu_limit: 250m
            min_memory_limit: 250Mi
          repair_period: 5m
          resync_period: 30m
          teams_api:
            enable_admin_role_for_users: true
            enable_postgres_team_crd: false
            enable_postgres_team_crd_superusers: false
            enable_team_member_deprecation: false
            enable_team_superuser: false
            enable_teams_api: false
            pam_role_name: zalandos
            postgres_superuser_teams:
            - postgres_superusers
            protected_role_names:
            - admin
            - cron_admin
            role_deletion_suffix: _deleted
            team_admin_role: admin
            team_api_role_configuration:
              log_statement: all
          timeouts:
            patroni_api_check_interval: 1s
            patroni_api_check_timeout: 5s
            pod_deletion_wait_timeout: 10m
            pod_label_wait_timeout: 10m
            ready_wait_interval: 3s
            ready_wait_timeout: 30s
            resource_check_interval: 3s
            resource_check_timeout: 10m
          users:
            enable_password_rotation: false
            password_rotation_interval: 90
            password_rotation_user_retention: 180
            replication_username: standby
            super_username: postgres
          workers: 8
        kind: OperatorConfiguration
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: operatorconfigurations.acid.zalan.do
        spec:
          group: acid.zalan.do
          names:
            categories:
            - all
            kind: OperatorConfiguration
            listKind: OperatorConfigurationList
            plural: operatorconfigurations
            shortNames:
            - opconfig
            singular: operatorconfiguration
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Spilo image to be used for Pods
              jsonPath: .configuration.docker_image
              name: Image
              type: string
            - description: Label for K8s resources created by operator
              jsonPath: .configuration.kubernetes.cluster_name_label
              name: Cluster-Label
              type: string
            - description: Name of service account to be used
              jsonPath: .configuration.kubernetes.pod_service_account_name
              name: Service-Account
              type: string
            - description: Minimum number of instances per Postgres cluster
              jsonPath: .configuration.min_instances
              name: Min-Instances
              type: integer
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    enum:
                    - acid.zalan.do/v1
                    type: string
                  configuration:
                    properties:
                      aws_or_gcp:
                        properties:
                          additional_secret_mount:
                            type: string
                          additional_secret_mount_path:
                            default: /meta/credentials
                            type: string
                          aws_region:
                            default: eu-central-1
                            type: string
                          enable_ebs_gp3_migration:
                            default: false
                            type: boolean
                          enable_ebs_gp3_migration_max_size:
                            default: 1000
                            type: integer
                          gcp_credentials:
                            type: string
                          kube_iam_role:
                            type: string
                          log_s3_bucket:
                            type: string
                          wal_az_storage_account:
                            type: string
                          wal_gs_bucket:
                            type: string
                          wal_s3_bucket:
                            type: string
                        type: object
                      connection_pooler:
                        properties:
                          connection_pooler_default_cpu_limit:
                            default: "1"
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          connection_pooler_default_cpu_request:
                            default: 500m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          connection_pooler_default_memory_limit:
                            default: 100Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          connection_pooler_default_memory_request:
                            default: 100Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          connection_pooler_image:
                            default: registry.opensource.zalan.do/acid/pgbouncer:master-24
                            type: string
                          connection_pooler_max_db_connections:
                            default: 60
                            type: integer
                          connection_pooler_mode:
                            default: transaction
                            enum:
                            - session
                            - transaction
                            type: string
                          connection_pooler_number_of_instances:
                            default: 2
                            minimum: 1
                            type: integer
                          connection_pooler_schema:
                            default: pooler
                            type: string
                          connection_pooler_user:
                            default: pooler
                            type: string
                        type: object
                      crd_categories:
                        items:
                          type: string
                        nullable: true
                        type: array
                      debug:
                        properties:
                          debug_logging:
                            default: true
                            type: boolean
                          enable_database_access:
                            default: true
                            type: boolean
                        type: object
                      docker_image:
                        default: registry.opensource.zalan.do/acid/spilo-14:2.1-p7
                        type: string
                      enable_crd_registration:
                        default: true
                        type: boolean
                      enable_crd_validation:
                        default: true
                        description: deprecated
                        type: boolean
                      enable_lazy_spilo_upgrade:
                        default: false
                        type: boolean
                      enable_pgversion_env_var:
                        default: true
                        type: boolean
                      enable_shm_volume:
                        default: true
                        type: boolean
                      enable_spilo_wal_path_compat:
                        default: false
                        type: boolean
                      enable_team_id_clustername_prefix:
                        default: false
                        type: boolean
                      etcd_host:
                        default: ""
                        type: string
                      ignore_instance_limits_annotation_key:
                        type: string
                      kubernetes:
                        properties:
                          additional_pod_capabilities:
                            items:
                              type: string
                            type: array
                          cluster_domain:
                            default: cluster.local
                            type: string
                          cluster_labels:
                            additionalProperties:
                              type: string
                            default:
                              application: spilo
                            type: object
                          cluster_name_label:
                            default: cluster-name
                            type: string
                          custom_pod_annotations:
                            additionalProperties:
                              type: string
                            type: object
                          delete_annotation_date_key:
                            type: string
                          delete_annotation_name_key:
                            type: string
                          downscaler_annotations:
                            items:
                              type: string
                            type: array
                          enable_cross_namespace_secret:
                            default: false
                            type: boolean
                          enable_init_containers:
                            default: true
                            type: boolean
                          enable_pod_antiaffinity:
                            default: false
                            type: boolean
                          enable_pod_disruption_budget:
                            default: true
                            type: boolean
                          enable_readiness_probe:
                            default: false
                            type: boolean
                          enable_sidecars:
                            default: true
                            type: boolean
                          ignored_annotations:
                            items:
                              type: string
                            type: array
                          infrastructure_roles_secret_name:
                            type: string
                          infrastructure_roles_secrets:
                            items:
                              properties:
                                defaultrolevalue:
                                  type: string
                                defaultuservalue:
                                  type: string
                                details:
                                  type: string
                                passwordkey:
                                  type: string
                                rolekey:
                                  type: string
                                secretname:
                                  type: string
                                template:
                                  type: boolean
                                userkey:
                                  type: string
                              required:
                              - secretname
                              - userkey
                              - passwordkey
                              type: object
                            nullable: true
                            type: array
                          inherited_annotations:
                            items:
                              type: string
                            type: array
                          inherited_labels:
                            items:
                              type: string
                            type: array
                          master_pod_move_timeout:
                            default: 20m
                            type: string
                          node_readiness_label:
                            additionalProperties:
                              type: string
                            type: object
                          node_readiness_label_merge:
                            enum:
                            - AND
                            - OR
                            type: string
                          oauth_token_secret_name:
                            default: postgresql-operator
                            type: string
                          pdb_name_format:
                            default: postgres-{cluster}-pdb
                            type: string
                          pod_antiaffinity_topology_key:
                            default: kubernetes.io/hostname
                            type: string
                          pod_environment_configmap:
                            type: string
                          pod_environment_secret:
                            type: string
                          pod_management_policy:
                            default: ordered_ready
                            enum:
                            - ordered_ready
                            - parallel
                            type: string
                          pod_priority_class_name:
                            type: string
                          pod_role_label:
                            default: spilo-role
                            type: string
                          pod_service_account_definition:
                            default: ""
                            type: string
                          pod_service_account_name:
                            default: postgres-pod
                            type: string
                          pod_service_account_role_binding_definition:
                            default: ""
                            type: string
                          pod_terminate_grace_period:
                            default: 5m
                            type: string
                          secret_name_template:
                            default: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
                            type: string
                          spilo_allow_privilege_escalation:
                            default: true
                            type: boolean
                          spilo_fsgroup:
                            type: integer
                          spilo_privileged:
                            default: false
                            type: boolean
                          spilo_runasgroup:
                            type: integer
                          spilo_runasuser:
                            type: integer
                          storage_resize_mode:
                            default: pvc
                            enum:
                            - ebs
                            - mixed
                            - pvc
                            - "off"
                            type: string
                          toleration:
                            additionalProperties:
                              type: string
                            type: object
                          watched_namespace:
                            type: string
                        type: object
                      kubernetes_use_configmaps:
                        default: false
                        type: boolean
                      load_balancer:
                        properties:
                          custom_service_annotations:
                            additionalProperties:
                              type: string
                            type: object
                          db_hosted_zone:
                            default: db.example.com
                            type: string
                          enable_master_load_balancer:
                            default: true
                            type: boolean
                          enable_master_pooler_load_balancer:
                            default: false
                            type: boolean
                          enable_replica_load_balancer:
                            default: false
                            type: boolean
                          enable_replica_pooler_load_balancer:
                            default: false
                            type: boolean
                          external_traffic_policy:
                            default: Cluster
                            enum:
                            - Cluster
                            - Local
                            type: string
                          master_dns_name_format:
                            default: '{cluster}.{namespace}.{hostedzone}'
                            type: string
                          replica_dns_name_format:
                            default: '{cluster}-repl.{namespace}.{hostedzone}'
                            type: string
                        type: object
                      logging_rest_api:
                        properties:
                          api_port:
                            default: 8080
                            type: integer
                          cluster_history_entries:
                            default: 1000
                            type: integer
                          ring_log_lines:
                            default: 100
                            type: integer
                        type: object
                      logical_backup:
                        properties:
                          logical_backup_docker_image:
                            default: registry.opensource.zalan.do/acid/logical-backup:v1.8.2
                            type: string
                          logical_backup_google_application_credentials:
                            type: string
                          logical_backup_job_prefix:
                            default: logical-backup-
                            type: string
                          logical_backup_provider:
                            default: s3
                            type: string
                          logical_backup_s3_access_key_id:
                            type: string
                          logical_backup_s3_bucket:
                            type: string
                          logical_backup_s3_endpoint:
                            type: string
                          logical_backup_s3_region:
                            type: string
                          logical_backup_s3_retention_time:
                            type: string
                          logical_backup_s3_secret_access_key:
                            type: string
                          logical_backup_s3_sse:
                            type: string
                          logical_backup_schedule:
                            default: 30 00 * * *
                            pattern: ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$
                            type: string
                        type: object
                      major_version_upgrade:
                        properties:
                          major_version_upgrade_mode:
                            default: "off"
                            type: string
                          major_version_upgrade_team_allow_list:
                            items:
                              type: string
                            type: array
                          minimal_major_version:
                            default: "11"
                            type: string
                          target_major_version:
                            default: "14"
                            type: string
                        type: object
                      max_instances:
                        default: -1
                        description: -1 = disabled
                        minimum: -1
                        type: integer
                      min_instances:
                        default: -1
                        description: -1 = disabled
                        minimum: -1
                        type: integer
                      patroni:
                        properties:
                          failsafe_mode:
                            default: false
                            type: boolean
                        type: object
                      postgres_pod_resources:
                        properties:
                          default_cpu_limit:
                            default: "1"
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          default_cpu_request:
                            default: 100m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          default_memory_limit:
                            default: 500Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          default_memory_request:
                            default: 100Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          max_cpu_request:
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          max_memory_request:
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          min_cpu_limit:
                            default: 250m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          min_memory_limit:
                            default: 250Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                        type: object
                      repair_period:
                        default: 5m
                        type: string
                      resync_period:
                        default: 30m
                        type: string
                      scalyr:
                        properties:
                          scalyr_api_key:
                            type: string
                          scalyr_cpu_limit:
                            default: "1"
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          scalyr_cpu_request:
                            default: 100m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          scalyr_image:
                            type: string
                          scalyr_memory_limit:
                            default: 500Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          scalyr_memory_request:
                            default: 50Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          scalyr_server_url:
                            default: https://upload.eu.scalyr.com
                            type: string
                        type: object
                      set_memory_request_to_limit:
                        default: false
                        type: boolean
                      sidecar_docker_images:
                        additionalProperties:
                          type: string
                        type: object
                      sidecars:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      teams_api:
                        properties:
                          enable_admin_role_for_users:
                            default: true
                            type: boolean
                          enable_postgres_team_crd:
                            default: true
                            type: boolean
                          enable_postgres_team_crd_superusers:
                            default: false
                            type: boolean
                          enable_team_member_deprecation:
                            default: false
                            type: boolean
                          enable_team_superuser:
                            default: false
                            type: boolean
                          enable_teams_api:
                            default: true
                            type: boolean
                          pam_configuration:
                            default: https://info.example.com/oauth2/tokeninfo?access_token=
                              uid realm=/employees
                            type: string
                          pam_role_name:
                            default: zalandos
                            type: string
                          postgres_superuser_teams:
                            items:
                              type: string
                            type: array
                          protected_role_names:
                            default:
                            - admin
                            - cron_admin
                            items:
                              type: string
                            type: array
                          role_deletion_suffix:
                            default: _deleted
                            type: string
                          team_admin_role:
                            default: admin
                            type: string
                          team_api_role_configuration:
                            additionalProperties:
                              type: string
                            default:
                              log_statement: all
                            type: object
                          teams_api_url:
                            default: https://teams.example.com/api/
                            type: string
                        type: object
                      timeouts:
                        properties:
                          patroni_api_check_interval:
                            default: 1s
                            type: string
                          patroni_api_check_timeout:
                            default: 5s
                            type: string
                          pod_deletion_wait_timeout:
                            default: 10m
                            type: string
                          pod_label_wait_timeout:
                            default: 10m
                            type: string
                          ready_wait_interval:
                            default: 4s
                            type: string
                          ready_wait_timeout:
                            default: 30s
                            type: string
                          resource_check_interval:
                            default: 3s
                            type: string
                          resource_check_timeout:
                            default: 10m
                            type: string
                        type: object
                      users:
                        properties:
                          additional_owner_roles:
                            items:
                              type: string
                            nullable: true
                            type: array
                          enable_password_rotation:
                            default: false
                            type: boolean
                          password_rotation_interval:
                            default: 90
                            type: integer
                          password_rotation_user_retention:
                            default: 180
                            type: integer
                          replication_username:
                            default: standby
                            type: string
                          super_username:
                            default: postgres
                            type: string
                        type: object
                      workers:
                        default: 8
                        minimum: 1
                        type: integer
                    type: object
                  kind:
                    enum:
                    - OperatorConfiguration
                    type: string
                  status:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - kind
                - apiVersion
                - configuration
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: postgresqls.acid.zalan.do
        spec:
          group: acid.zalan.do
          names:
            categories:
            - all
            kind: postgresql
            listKind: postgresqlList
            plural: postgresqls
            shortNames:
            - pg
            singular: postgresql
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Team responsible for Postgres cluster
              jsonPath: .spec.teamId
              name: Team
              type: string
            - description: PostgreSQL version
              jsonPath: .spec.postgresql.version
              name: Version
              type: string
            - description: Number of Pods per Postgres cluster
              jsonPath: .spec.numberOfInstances
              name: Pods
              type: integer
            - description: Size of the bound volume
              jsonPath: .spec.volume.size
              name: Volume
              type: string
            - description: Requested CPU for Postgres containers
              jsonPath: .spec.resources.requests.cpu
              name: CPU-Request
              type: string
            - description: Requested memory for Postgres containers
              jsonPath: .spec.resources.requests.memory
              name: Memory-Request
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            - description: Current sync status of postgresql resource
              jsonPath: .status.PostgresClusterStatus
              name: Status
              type: string
            name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    enum:
                    - acid.zalan.do/v1
                    type: string
                  kind:
                    enum:
                    - postgresql
                    type: string
                  spec:
                    properties:
                      additionalVolumes:
                        items:
                          properties:
                            mountPath:
                              type: string
                            name:
                              type: string
                            subPath:
                              type: string
                            targetContainers:
                              items:
                                type: string
                              nullable: true
                              type: array
                            volumeSource:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - name
                          - mountPath
                          - volumeSource
                          type: object
                        type: array
                      allowedSourceRanges:
                        items:
                          pattern: ^(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\/(\d|[1-2]\d|3[0-2])$
                          type: string
                        nullable: true
                        type: array
                      clone:
                        properties:
                          cluster:
                            type: string
                          s3_access_key_id:
                            type: string
                          s3_endpoint:
                            type: string
                          s3_force_path_style:
                            type: boolean
                          s3_secret_access_key:
                            type: string
                          s3_wal_path:
                            type: string
                          timestamp:
                            pattern: ^([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(([+-]([01][0-9]|2[0-3]):[0-5][0-9]))$
                            type: string
                          uid:
                            format: uuid
                            type: string
                        required:
                        - cluster
                        type: object
                      connectionPooler:
                        properties:
                          dockerImage:
                            type: string
                          maxDBConnections:
                            type: integer
                          mode:
                            enum:
                            - session
                            - transaction
                            type: string
                          numberOfInstances:
                            minimum: 1
                            type: integer
                          resources:
                            properties:
                              limits:
                                properties:
                                  cpu:
                                    pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                    type: string
                                  memory:
                                    pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                    type: string
                                type: object
                              requests:
                                properties:
                                  cpu:
                                    pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                    type: string
                                  memory:
                                    pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                    type: string
                                type: object
                            type: object
                          schema:
                            type: string
                          user:
                            type: string
                        type: object
                      databases:
                        additionalProperties:
                          type: string
                        type: object
                      dockerImage:
                        type: string
                      enableConnectionPooler:
                        type: boolean
                      enableLogicalBackup:
                        type: boolean
                      enableMasterLoadBalancer:
                        type: boolean
                      enableMasterPoolerLoadBalancer:
                        type: boolean
                      enableReplicaConnectionPooler:
                        type: boolean
                      enableReplicaLoadBalancer:
                        type: boolean
                      enableReplicaPoolerLoadBalancer:
                        type: boolean
                      enableShmVolume:
                        type: boolean
                      env:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      init_containers:
                        description: deprecated
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      initContainers:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      logicalBackupSchedule:
                        pattern: ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$
                        type: string
                      maintenanceWindows:
                        items:
                          pattern: ^\ *((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(2[0-3]|[01]?\d):([0-5]?\d)|(2[0-3]|[01]?\d):([0-5]?\d))-((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(2[0-3]|[01]?\d):([0-5]?\d)|(2[0-3]|[01]?\d):([0-5]?\d))\
                            *$
                          type: string
                        type: array
                      nodeAffinity:
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            items:
                              properties:
                                preference:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            properties:
                              nodeSelectorTerms:
                                items:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      numberOfInstances:
                        minimum: 0
                        type: integer
                      patroni:
                        properties:
                          failsafe_mode:
                            type: boolean
                          initdb:
                            additionalProperties:
                              type: string
                            type: object
                          loop_wait:
                            type: integer
                          maximum_lag_on_failover:
                            type: integer
                          pg_hba:
                            items:
                              type: string
                            type: array
                          retry_timeout:
                            type: integer
                          slots:
                            additionalProperties:
                              additionalProperties:
                                type: string
                              type: object
                            type: object
                          synchronous_mode:
                            type: boolean
                          synchronous_mode_strict:
                            type: boolean
                          synchronous_node_count:
                            type: integer
                          ttl:
                            type: integer
                        type: object
                      pod_priority_class_name:
                        description: deprecated
                        type: string
                      podAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      podPriorityClassName:
                        type: string
                      postgresql:
                        properties:
                          parameters:
                            additionalProperties:
                              type: string
                            type: object
                          version:
                            enum:
                            - "10"
                            - "11"
                            - "12"
                            - "13"
                            - "14"
                            - "15"
                            type: string
                        required:
                        - version
                        type: object
                      preparedDatabases:
                        additionalProperties:
                          properties:
                            defaultUsers:
                              type: boolean
                            extensions:
                              additionalProperties:
                                type: string
                              type: object
                            schemas:
                              additionalProperties:
                                properties:
                                  defaultRoles:
                                    type: boolean
                                  defaultUsers:
                                    type: boolean
                                type: object
                              type: object
                            secretNamespace:
                              type: string
                          type: object
                        type: object
                      replicaLoadBalancer:
                        description: deprecated
                        type: boolean
                      resources:
                        properties:
                          limits:
                            properties:
                              cpu:
                                pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                type: string
                              memory:
                                pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                type: string
                            type: object
                          requests:
                            properties:
                              cpu:
                                pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                type: string
                              memory:
                                pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                type: string
                            type: object
                        type: object
                      schedulerName:
                        type: string
                      serviceAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      sidecars:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      spiloFSGroup:
                        type: integer
                      spiloRunAsGroup:
                        type: integer
                      spiloRunAsUser:
                        type: integer
                      standby:
                        oneOf:
                        - required:
                          - s3_wal_path
                        - required:
                          - gs_wal_path
                        - required:
                          - standby_host
                        properties:
                          gs_wal_path:
                            type: string
                          s3_wal_path:
                            type: string
                          standby_host:
                            type: string
                          standby_port:
                            type: string
                        type: object
                      streams:
                        items:
                          properties:
                            applicationId:
                              type: string
                            batchSize:
                              type: integer
                            database:
                              type: string
                            filter:
                              additionalProperties:
                                type: string
                              type: object
                            tables:
                              additionalProperties:
                                properties:
                                  eventType:
                                    type: string
                                  idColumn:
                                    type: string
                                  payloadColumn:
                                    type: string
                                required:
                                - eventType
                                type: object
                              type: object
                          required:
                          - applicationId
                          - database
                          - tables
                          type: object
                        type: array
                      teamId:
                        type: string
                      tls:
                        properties:
                          caFile:
                            type: string
                          caSecretName:
                            type: string
                          certificateFile:
                            type: string
                          privateKeyFile:
                            type: string
                          secretName:
                            type: string
                        required:
                        - secretName
                        type: object
                      tolerations:
                        items:
                          properties:
                            effect:
                              enum:
                              - NoExecute
                              - NoSchedule
                              - PreferNoSchedule
                              type: string
                            key:
                              type: string
                            operator:
                              enum:
                              - Equal
                              - Exists
                              type: string
                            tolerationSeconds:
                              type: integer
                            value:
                              type: string
                          type: object
                        type: array
                      useLoadBalancer:
                        description: deprecated
                        type: boolean
                      users:
                        additionalProperties:
                          items:
                            enum:
                            - bypassrls
                            - BYPASSRLS
                            - nobypassrls
                            - NOBYPASSRLS
                            - createdb
                            - CREATEDB
                            - nocreatedb
                            - NOCREATEDB
                            - createrole
                            - CREATEROLE
                            - nocreaterole
                            - NOCREATEROLE
                            - inherit
                            - INHERIT
                            - noinherit
                            - NOINHERIT
                            - login
                            - LOGIN
                            - nologin
                            - NOLOGIN
                            - replication
                            - REPLICATION
                            - noreplication
                            - NOREPLICATION
                            - superuser
                            - SUPERUSER
                            - nosuperuser
                            - NOSUPERUSER
                            type: string
                          nullable: true
                          type: array
                        type: object
                      usersWithInPlaceSecretRotation:
                        items:
                          type: string
                        nullable: true
                        type: array
                      usersWithSecretRotation:
                        items:
                          type: string
                        nullable: true
                        type: array
                      volume:
                        properties:
                          iops:
                            type: integer
                          selector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      enum:
                                      - DoesNotExist
                                      - Exists
                                      - In
                                      - NotIn
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          size:
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          storageClass:
                            type: string
                          subPath:
                            type: string
                          throughput:
                            type: integer
                        required:
                        - size
                        type: object
                    required:
                    - numberOfInstances
                    - teamId
                    - postgresql
                    - volume
                    type: object
                  status:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - kind
                - apiVersion
                - spec
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: postgresteams.acid.zalan.do
        spec:
          group: acid.zalan.do
          names:
            categories:
            - all
            kind: PostgresTeam
            listKind: PostgresTeamList
            plural: postgresteams
            shortNames:
            - pgteam
            singular: postgresteam
          scope: Namespaced
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    enum:
                    - acid.zalan.do/v1
                    type: string
                  kind:
                    enum:
                    - PostgresTeam
                    type: string
                  spec:
                    properties:
                      additionalMembers:
                        additionalProperties:
                          description: List of users who will also be added to the
                            Postgres cluster
                          items:
                            type: string
                          nullable: true
                          type: array
                        description: Map for teamId and associated additional users
                        type: object
                      additionalSuperuserTeams:
                        additionalProperties:
                          description: List of teams to become Postgres superusers
                          items:
                            type: string
                          nullable: true
                          type: array
                        description: Map for teamId and associated additional superuser
                          teams
                        type: object
                      additionalTeams:
                        additionalProperties:
                          description: List of teams whose members will also be added
                            to the Postgres cluster
                          items:
                            type: string
                          nullable: true
                          type: array
                        description: Map for teamId and associated additional teams
                        type: object
                    type: object
                required:
                - kind
                - apiVersion
                - spec
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: postgresqls.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: postgresql
            plural: postgresqls
            singular: postgresql
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      clusterSelectors:
                        description: |
                          List of key:value pairs to use as cluster selectors when scheduling
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      dbName:
                        default: postgres
                        description: |
                          Database name. A database will be created with this name. The owner of the database will be the teamId.
                        type: string
                      env:
                        default: dev
                        description: |
                          Configures and deploys this PostgreSQL with environment specific configuration. Prod PostgreSQL are configured with backups and more resources.
                        pattern: ^(dev|prod)$
                        type: string
                      teamId:
                        default: acid
                        description: |
                          Team ID. A superuser role will be created with this name.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - syntasso/demo-postgresql-request-pipeline:v0.1.1
    status: {}
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      creationTimestamp: null
      name: redis
      namespace: default
    spec:
      clusterSelector:
        environment: dev
      workerClusterResources:
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app: redisoperator
          name: redisoperator
          namespace: default
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: redisoperator
          strategy:
            type: RollingUpdate
          template:
            metadata:
              labels:
                app: redisoperator
            spec:
              containers:
              - image: quay.io/spotahome/redis-operator:v1.1.0
                imagePullPolicy: IfNotPresent
                name: app
                resources:
                  limits:
                    cpu: 100m
                    memory: 50Mi
                  requests:
                    cpu: 10m
                    memory: 50Mi
                securityContext:
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  runAsUser: 1000
              restartPolicy: Always
              serviceAccountName: redisoperator
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: redisoperator
          namespace: default
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: redisoperator
        subjects:
        - kind: ServiceAccount
          name: redisoperator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: redisoperator
          namespace: default
        rules:
        - apiGroups:
          - databases.spotahome.com
          resources:
          - redisfailovers
          - redisfailovers/finalizers
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - events
          - configmaps
          - persistentvolumeclaims
          - persistentvolumeclaims/finalizers
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: redisoperator
          namespace: default
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          creationTimestamp: null
          name: redisfailovers.databases.spotahome.com
        spec:
          group: databases.spotahome.com
          names:
            kind: RedisFailover
            listKind: RedisFailoverList
            plural: redisfailovers
            shortNames:
            - rf
            singular: redisfailover
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .metadata.name
              name: NAME
              type: string
            - jsonPath: .spec.redis.replicas
              name: REDIS
              type: integer
            - jsonPath: .spec.sentinel.replicas
              name: SENTINELS
              type: integer
            - jsonPath: .metadata.creationTimestamp
              name: AGE
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                description: RedisFailover represents a Redis failover
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: RedisFailoverSpec represents a Redis failover spec
                    properties:
                      auth:
                        description: AuthSettings contains settings about auth
                        properties:
                          secretPath:
                            type: string
                        type: object
                      bootstrapNode:
                        description: BootstrapSettings contains settings about a potential
                          bootstrap node
                        properties:
                          allowSentinels:
                            type: boolean
                          host:
                            type: string
                          port:
                            type: string
                        type: object
                      labelWhitelist:
                        items:
                          type: string
                        type: array
                      redis:
                        description: RedisSettings defines the specification of the
                          redis cluster
                        properties:
                          affinity:
                            description: Affinity is a group of affinity scheduling
                              rules.
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node matches
                                      the corresponding matchExpressions; the node(s)
                                      with the highest sum are the most preferred.
                                    items:
                                      description: An empty preferred scheduling term
                                        matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling
                                        term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod
                                      from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: A null or empty node selector
                                            term matches no objects. The requirements
                                            of them are ANDed. The TopologySelectorTerm
                                            type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node has
                                      pods which matches the corresponding podAffinityTerm;
                                      the node(s) with the highest sum are the most
                                      preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to a pod label update),
                                      the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is beta-level and is only honored
                                            when PodAffinityNamespaceSelector feature
                                            is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the anti-affinity
                                      expressions specified by this field, but it
                                      may choose a node that violates one or more
                                      of the expressions. The node that is most preferred
                                      is the one with the greatest sum of weights,
                                      i.e. for each node that meets all of the scheduling
                                      requirements (resource request, requiredDuringScheduling
                                      anti-affinity expressions, etc.), compute a
                                      sum by iterating through the elements of this
                                      field and adding "weight" to the sum if the
                                      node has pods which matches the corresponding
                                      podAffinityTerm; the node(s) with the highest
                                      sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the anti-affinity requirements
                                      specified by this field are not met at scheduling
                                      time, the pod will not be scheduled onto the
                                      node. If the anti-affinity requirements specified
                                      by this field cease to be met at some point
                                      during pod execution (e.g. due to a pod label
                                      update), the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is beta-level and is only honored
                                            when PodAffinityNamespaceSelector feature
                                            is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                            type: object
                          command:
                            items:
                              type: string
                            type: array
                          customCommandRenames:
                            items:
                              description: RedisCommandRename defines the specification
                                of a "rename-command" configuration option
                              properties:
                                from:
                                  type: string
                                to:
                                  type: string
                              type: object
                            type: array
                          customConfig:
                            items:
                              type: string
                            type: array
                          dnsPolicy:
                            description: DNSPolicy defines how a pod's DNS will be
                              configured.
                            type: string
                          exporter:
                            description: RedisExporter defines the specification for
                              the redis exporter
                            properties:
                              args:
                                items:
                                  type: string
                                type: array
                              enabled:
                                type: boolean
                              env:
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              image:
                                type: string
                              imagePullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                type: string
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                            type: object
                          hostNetwork:
                            type: boolean
                          image:
                            type: string
                          imagePullPolicy:
                            description: PullPolicy describes a policy for if/when
                              to pull a container image
                            type: string
                          imagePullSecrets:
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            type: array
                          nodeSelector:
                            additionalProperties:
                              type: string
                            type: object
                          podAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          priorityClassName:
                            type: string
                          replicas:
                            format: int32
                            type: integer
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            description: PodSecurityContext holds pod-level security
                              attributes and common container settings. Some fields
                              are also present in container.securityContext.  Field
                              values of container.securityContext take precedence
                              over field values of PodSecurityContext.
                            properties:
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: HostProcess determines if a container
                                      should be run as a 'Host Process' container.
                                      This field is alpha-level and will only be honored
                                      by components that enable the WindowsHostProcessContainers
                                      feature flag. Setting this field without the
                                      feature flag will result in errors when validating
                                      the Pod. All of a Pod's containers must have
                                      the same effective HostProcess value (it is
                                      not allowed to have a mix of HostProcess containers
                                      and non-HostProcess containers).  In addition,
                                      if HostProcess is true then HostNetwork must
                                      also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                          serviceAccountName:
                            type: string
                          serviceAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          shutdownConfigMap:
                            type: string
                          storage:
                            description: RedisStorage defines the structure used to
                              store the Redis Data
                            properties:
                              emptyDir:
                                description: Represents an empty directory for a pod.
                                  Empty directory volumes support ownership management
                                  and SELinux relabeling.
                                properties:
                                  medium:
                                    description: 'What type of storage medium should
                                      back this directory. The default is "" which
                                      means to use the node''s default medium. Must
                                      be an empty string (default) or Memory. More
                                      info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                    type: string
                                  sizeLimit:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Total amount of local storage required
                                      for this EmptyDir volume. The size limit is
                                      also applicable for memory medium. The maximum
                                      usage on memory medium EmptyDir would be the
                                      minimum value between the SizeLimit specified
                                      here and the sum of memory limits of all containers
                                      in a pod. The default is nil which means that
                                      the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                type: object
                              keepAfterDeletion:
                                type: boolean
                              persistentVolumeClaim:
                                description: EmbeddedPersistentVolumeClaim is an embedded
                                  version of k8s.io/api/core/v1.PersistentVolumeClaim.
                                  It contains TypeMeta and a reduced ObjectMeta.
                                properties:
                                  apiVersion:
                                    description: 'APIVersion defines the versioned
                                      schema of this representation of an object.
                                      Servers should convert recognized schemas to
                                      the latest internal value, and may reject unrecognized
                                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                    type: string
                                  kind:
                                    description: 'Kind is a string value representing
                                      the REST resource this object represents. Servers
                                      may infer this from the endpoint the client
                                      submits requests to. Cannot be updated. In CamelCase.
                                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  metadata:
                                    description: EmbeddedMetadata contains metadata
                                      relevant to an EmbeddedResource.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: 'Annotations is an unstructured
                                          key value map stored with a resource that
                                          may be set by external tools to store and
                                          retrieve arbitrary metadata. They are not
                                          queryable and should be preserved when modifying
                                          objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: 'Map of string keys and values
                                          that can be used to organize and categorize
                                          (scope and select) objects. May match selectors
                                          of replication controllers and services.
                                          More info: http://kubernetes.io/docs/user-guide/labels'
                                        type: object
                                      name:
                                        description: 'Name must be unique within a
                                          namespace. Is required when creating resources,
                                          although some resources may allow a client
                                          to request the generation of an appropriate
                                          name automatically. Name is primarily intended
                                          for creation idempotence and configuration
                                          definition. Cannot be updated. More info:
                                          http://kubernetes.io/docs/user-guide/identifiers#names'
                                        type: string
                                    type: object
                                  spec:
                                    description: 'Spec defines the desired characteristics
                                      of a volume requested by a pod author. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    properties:
                                      accessModes:
                                        description: 'AccessModes contains the desired
                                          access modes the volume should have. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'This field can be used to specify
                                          either: * An existing VolumeSnapshot object
                                          (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          If the provisioner or an external controller
                                          can support the specified data source, it
                                          will create a new volume based on the contents
                                          of the specified data source. If the AnyVolumeDataSource
                                          feature gate is enabled, this field will
                                          always have the same contents as the DataSourceRef
                                          field.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      dataSourceRef:
                                        description: 'Specifies the object from which
                                          to populate the volume with data, if a non-empty
                                          volume is desired. This may be any local
                                          object from a non-empty API group (non core
                                          object) or a PersistentVolumeClaim object.
                                          When this field is specified, volume binding
                                          will only succeed if the type of the specified
                                          object matches some installed volume populator
                                          or dynamic provisioner. This field will
                                          replace the functionality of the DataSource
                                          field and as such if both fields are non-empty,
                                          they must have the same value. For backwards
                                          compatibility, both fields (DataSource and
                                          DataSourceRef) will be set to the same value
                                          automatically if one of them is empty and
                                          the other is non-empty. There are two important
                                          differences between DataSource and DataSourceRef:
                                          * While DataSource only allows two specific
                                          types of objects, DataSourceRef   allows
                                          any non-core object, as well as PersistentVolumeClaim
                                          objects. * While DataSource ignores disallowed
                                          values (dropping them), DataSourceRef   preserves
                                          all values, and generates an error if a
                                          disallowed value is   specified. (Alpha)
                                          Using this field requires the AnyVolumeDataSource
                                          feature gate to be enabled.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      resources:
                                        description: 'Resources represents the minimum
                                          resources the volume should have. More info:
                                          https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: A label query over volumes to
                                          consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      storageClassName:
                                        description: 'Name of the StorageClass required
                                          by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type
                                          of volume is required by the claim. Value
                                          of Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: VolumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                  status:
                                    description: 'Status represents the current information/status
                                      of a persistent volume claim. Read-only. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    properties:
                                      accessModes:
                                        description: 'AccessModes contains the actual
                                          access modes the volume backing the PVC
                                          has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      capacity:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: Represents the actual resources
                                          of the underlying volume.
                                        type: object
                                      conditions:
                                        description: Current Condition of persistent
                                          volume claim. If underlying persistent volume
                                          is being resized then the Condition will
                                          be set to 'ResizeStarted'.
                                        items:
                                          description: PersistentVolumeClaimCondition
                                            contails details about state of pvc
                                          properties:
                                            lastProbeTime:
                                              description: Last time we probed the
                                                condition.
                                              format: date-time
                                              type: string
                                            lastTransitionTime:
                                              description: Last time the condition
                                                transitioned from one status to another.
                                              format: date-time
                                              type: string
                                            message:
                                              description: Human-readable message
                                                indicating details about last transition.
                                              type: string
                                            reason:
                                              description: Unique, this should be
                                                a short, machine understandable string
                                                that gives the reason for condition's
                                                last transition. If it reports "ResizeStarted"
                                                that means the underlying persistent
                                                volume is being resized.
                                              type: string
                                            status:
                                              type: string
                                            type:
                                              description: PersistentVolumeClaimConditionType
                                                is a valid value of PersistentVolumeClaimCondition.Type
                                              type: string
                                          required:
                                          - status
                                          - type
                                          type: object
                                        type: array
                                      phase:
                                        description: Phase represents the current
                                          phase of PersistentVolumeClaim.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          terminationGracePeriod:
                            format: int64
                            type: integer
                          tolerations:
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                        type: object
                      sentinel:
                        description: SentinelSettings defines the specification of
                          the sentinel cluster
                        properties:
                          affinity:
                            description: Affinity is a group of affinity scheduling
                              rules.
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node matches
                                      the corresponding matchExpressions; the node(s)
                                      with the highest sum are the most preferred.
                                    items:
                                      description: An empty preferred scheduling term
                                        matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling
                                        term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod
                                      from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: A null or empty node selector
                                            term matches no objects. The requirements
                                            of them are ANDed. The TopologySelectorTerm
                                            type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node has
                                      pods which matches the corresponding podAffinityTerm;
                                      the node(s) with the highest sum are the most
                                      preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to a pod label update),
                                      the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is beta-level and is only honored
                                            when PodAffinityNamespaceSelector feature
                                            is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the anti-affinity
                                      expressions specified by this field, but it
                                      may choose a node that violates one or more
                                      of the expressions. The node that is most preferred
                                      is the one with the greatest sum of weights,
                                      i.e. for each node that meets all of the scheduling
                                      requirements (resource request, requiredDuringScheduling
                                      anti-affinity expressions, etc.), compute a
                                      sum by iterating through the elements of this
                                      field and adding "weight" to the sum if the
                                      node has pods which matches the corresponding
                                      podAffinityTerm; the node(s) with the highest
                                      sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the anti-affinity requirements
                                      specified by this field are not met at scheduling
                                      time, the pod will not be scheduled onto the
                                      node. If the anti-affinity requirements specified
                                      by this field cease to be met at some point
                                      during pod execution (e.g. due to a pod label
                                      update), the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is beta-level and is only honored
                                            when PodAffinityNamespaceSelector feature
                                            is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                            type: object
                          command:
                            items:
                              type: string
                            type: array
                          customConfig:
                            items:
                              type: string
                            type: array
                          dnsPolicy:
                            description: DNSPolicy defines how a pod's DNS will be
                              configured.
                            type: string
                          exporter:
                            description: SentinelExporter defines the specification
                              for the sentinel exporter
                            properties:
                              args:
                                items:
                                  type: string
                                type: array
                              enabled:
                                type: boolean
                              env:
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              image:
                                type: string
                              imagePullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                type: string
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                            type: object
                          hostNetwork:
                            type: boolean
                          image:
                            type: string
                          imagePullPolicy:
                            description: PullPolicy describes a policy for if/when
                              to pull a container image
                            type: string
                          imagePullSecrets:
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            type: array
                          nodeSelector:
                            additionalProperties:
                              type: string
                            type: object
                          podAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          priorityClassName:
                            type: string
                          replicas:
                            format: int32
                            type: integer
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            description: PodSecurityContext holds pod-level security
                              attributes and common container settings. Some fields
                              are also present in container.securityContext.  Field
                              values of container.securityContext take precedence
                              over field values of PodSecurityContext.
                            properties:
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: HostProcess determines if a container
                                      should be run as a 'Host Process' container.
                                      This field is alpha-level and will only be honored
                                      by components that enable the WindowsHostProcessContainers
                                      feature flag. Setting this field without the
                                      feature flag will result in errors when validating
                                      the Pod. All of a Pod's containers must have
                                      the same effective HostProcess value (it is
                                      not allowed to have a mix of HostProcess containers
                                      and non-HostProcess containers).  In addition,
                                      if HostProcess is true then HostNetwork must
                                      also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                          serviceAccountName:
                            type: string
                          serviceAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          tolerations:
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                required:
                - spec
                type: object
            served: true
            storage: true
            subresources: {}
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: redis.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: redis
            plural: redis
            singular: redis
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      clusterSelectors:
                        description: |
                          List of key:value pairs to use as cluster selectors when scheduling
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      size:
                        default: small
                        description: |
                          Size of this Redis deployment. If small, it deploy redis with a single replica; if large, deploy redis with 3 replicas.
                        pattern: ^(small|large)$
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - syntasso/demo-redis-request-pipeline:v0.1.1
    status: {}
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      name: slack
      namespace: default
    spec:
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: slacks.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: slack
            plural: slacks
            singular: slack
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      message:
                        description: |
                          The message to be sent
                        type: string
                    required:
                    - message
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - ghcr.io/syntasso/kratix-marketplace/slack-request-pipeline:v0.1.0
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: slack-default-promise-pipeline-credentials
    rules:
    - apiGroups:
      - ""
      resourceNames:
      - slack-channel-hook
      resources:
      - secrets
      verbs:
      - get
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: slack-default-promise-pipeline-credentials
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: slack-default-promise-pipeline-credentials
    subjects:
    - kind: ServiceAccount
      name: slack-default-promise-pipeline
      namespace: default
  xaasCrd:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: apps.example.promise.syntasso.io
    spec:
      group: example.promise.syntasso.io
      names:
        kind: app
        plural: apps
        singular: app
      scope: Namespaced
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            properties:
              spec:
                properties:
                  containsCreditCardData:
                    default: false
                    description: presence of customer credit card information
                    type: boolean
                  dbDriver:
                    default: none
                    description: database deployed with application
                    enum:
                    - postgres
                    - none
                    type: string
                  image:
                    description: container image for application that will be deployed
                    example: gcr.io/syntasso/great-app
                    type: string
                  name:
                    type: string
                required:
                - name
                - image
                type: object
            type: object
        served: true
        storage: true
  xaasRequestPipeline:
  - syntasso/demo-app-as-a-service-request-pipeline:v0.1.1
status: {}
